import{S as e,i as t,s as n,e as r,t as s,c as a,a as i,b as o,d as c,f as l,g as u,h as p,n as f,j as m,k as h,l as d,m as y,o as g,p as v,r as b,q as $,u as w,v as S,w as O,x as E,y as k,z as I,A as x,B as j,C as N,D as A,E as T,F as C,G as P,H as L,I as R,J as D,K as M,L as q,M as _,N as B}from"./client.ef2fc95c.js";const V=Symbol.for("yaml.alias"),K=Symbol.for("yaml.document"),U=Symbol.for("yaml.map"),F=Symbol.for("yaml.pair"),J=Symbol.for("yaml.scalar"),G=Symbol.for("yaml.seq"),z=Symbol.for("yaml.node.type"),W=e=>!!e&&"object"==typeof e&&e[z]===V,Y=e=>!!e&&"object"==typeof e&&e[z]===K,H=e=>!!e&&"object"==typeof e&&e[z]===U,Q=e=>!!e&&"object"==typeof e&&e[z]===F,X=e=>!!e&&"object"==typeof e&&e[z]===J,Z=e=>!!e&&"object"==typeof e&&e[z]===G;function ee(e){if(e&&"object"==typeof e)switch(e[z]){case U:case G:return!0}return!1}function te(e){if(e&&"object"==typeof e)switch(e[z]){case V:case U:case J:case G:return!0}return!1}class ne{constructor(e){Object.defineProperty(this,z,{value:e})}}const re=Symbol("break visit"),se=Symbol("skip children"),ae=Symbol("remove node");function ie(e,t){if("object"==typeof t&&(t.Collection||t.Node||t.Value)&&(t=Object.assign({Alias:t.Node,Map:t.Node,Scalar:t.Node,Seq:t.Node},t.Value&&{Map:t.Value,Scalar:t.Value,Seq:t.Value},t.Collection&&{Map:t.Collection,Seq:t.Collection},t)),Y(e)){oe(null,e.contents,t,Object.freeze([e]))===ae&&(e.contents=null)}else oe(null,e,t,Object.freeze([]))}function oe(e,t,n,r){let s;if("function"==typeof n?s=n(e,t,r):H(t)?n.Map&&(s=n.Map(e,t,r)):Z(t)?n.Seq&&(s=n.Seq(e,t,r)):Q(t)?n.Pair&&(s=n.Pair(e,t,r)):X(t)?n.Scalar&&(s=n.Scalar(e,t,r)):W(t)&&n.Alias&&(s=n.Alias(e,t,r)),te(s)||Q(s)){const t=r[r.length-1];if(ee(t))t.items[e]=s;else if(Q(t))"key"===e?t.key=s:t.value=s;else{if(!Y(t)){const e=W(t)?"alias":"scalar";throw new Error(`Cannot replace node with ${e} parent`)}t.contents=s}return oe(e,s,n,r)}if("symbol"!=typeof s)if(ee(t)){r=Object.freeze(r.concat(t));for(let e=0;e<t.items.length;++e){const s=oe(e,t.items[e],n,r);if("number"==typeof s)e=s-1;else{if(s===re)return re;s===ae&&(t.items.splice(e,1),e-=1)}}}else if(Q(t)){r=Object.freeze(r.concat(t));const e=oe("key",t.key,n,r);if(e===re)return re;e===ae&&(t.key=null);const s=oe("value",t.value,n,r);if(s===re)return re;s===ae&&(t.value=null)}return s}ie.BREAK=re,ie.SKIP=se,ie.REMOVE=ae;const ce={"!":"%21",",":"%2C","[":"%5B","]":"%5D","{":"%7B","}":"%7D"};class le{constructor(e,t){this.marker=null,this.yaml=Object.assign({},le.defaultYaml,e),this.tags=Object.assign({},le.defaultTags,t)}atDocument(){const e=new le(this.yaml,this.tags);switch(this.yaml.version){case"1.1":this.atNextDocument=!0;break;case"1.2":this.atNextDocument=!1,this.yaml={explicit:le.defaultYaml.explicit,version:"1.2"},this.tags=Object.assign({},le.defaultTags)}return e}add(e,t){this.atNextDocument&&(this.yaml={explicit:le.defaultYaml.explicit,version:"1.1"},this.tags=Object.assign({},le.defaultTags),this.atNextDocument=!1);const n=e.trim().split(/[ \t]+/),r=n.shift();switch(r){case"%TAG":{if(2!==n.length&&(t(0,"%TAG directive should contain exactly two parts"),n.length<2))return!1;const[e,r]=n;return this.tags[e]=r,!0}case"%YAML":{if(this.yaml.explicit=!0,n.length<1)return t(0,"%YAML directive should contain exactly one part"),!1;const[e]=n;return"1.1"===e||"1.2"===e?(this.yaml.version=e,!0):(t(6,`Unsupported YAML version ${e}`,!0),!1)}default:return t(0,`Unknown directive ${r}`,!0),!1}}tagName(e,t){if("!"===e)return"!";if("!"!==e[0])return t(`Not a valid tag: ${e}`),null;if("<"===e[1]){const n=e.slice(2,-1);return"!"===n||"!!"===n?(t(`Verbatim tags aren't resolved, so ${e} is invalid.`),null):(">"!==e[e.length-1]&&t("Verbatim tags must end with a >"),n)}const[,n,r]=e.match(/^(.*!)([^!]*)$/);r||t(`The ${e} tag has no suffix`);const s=this.tags[n];return s?s+decodeURIComponent(r):"!"===n?e:(t(`Could not resolve tag: ${e}`),null)}tagString(e){for(const[t,n]of Object.entries(this.tags))if(e.startsWith(n))return t+e.substring(n.length).replace(/[!,[\]{}]/g,(e=>ce[e]));return"!"===e[0]?e:`!<${e}>`}toString(e){const t=this.yaml.explicit?[`%YAML ${this.yaml.version||"1.2"}`]:[],n=Object.entries(this.tags);let r;if(e&&n.length>0&&te(e.contents)){const t={};ie(e.contents,((e,n)=>{te(n)&&n.tag&&(t[n.tag]=!0)})),r=Object.keys(t)}else r=[];for(const[s,a]of n)"!!"===s&&"tag:yaml.org,2002:"===a||e&&!r.some((e=>e.startsWith(a)))||t.push(`%TAG ${s} ${a}`);return t.join("\n")}}function ue(e){if(/[\x00-\x19\s,[\]{}]/.test(e)){const t=JSON.stringify(e);throw new Error(`Anchor must not contain whitespace or control characters: ${t}`)}return!0}function pe(e){const t=new Set;return ie(e,{Value(e,n){n.anchor&&t.add(n.anchor)}}),t}function fe(e,t){for(let n=1;;++n){const r=`${e}${n}`;if(!t.has(r))return r}}le.defaultYaml={explicit:!1,version:"1.2"},le.defaultTags={"!!":"tag:yaml.org,2002:"};class me extends ne{constructor(e){super(V),this.source=e,Object.defineProperty(this,"tag",{set(){throw new Error("Alias nodes cannot have tags")}})}resolve(e){let t;return ie(e,{Node:(e,n)=>{if(n===this)return ie.BREAK;n.anchor===this.source&&(t=n)}}),t}toJSON(e,t){if(!t)return{source:this.source};const{anchors:n,doc:r,maxAliasCount:s}=t,a=this.resolve(r);if(!a){const e=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new ReferenceError(e)}const i=n.get(a);if(!i||void 0===i.res){throw new ReferenceError("This should not happen: Alias anchor was not resolved?")}if(s>=0&&(i.count+=1,0===i.aliasCount&&(i.aliasCount=he(r,a,n)),i.count*i.aliasCount>s)){throw new ReferenceError("Excessive alias count indicates a resource exhaustion attack")}return i.res}toString(e,t,n){const r=`*${this.source}`;if(e){if(ue(this.source),e.options.verifyAliasOrder&&!e.anchors.has(this.source)){const e=`Unresolved alias (the anchor must be set before the alias): ${this.source}`;throw new Error(e)}if(e.implicitKey)return`${r} `}return r}}function he(e,t,n){if(W(t)){const r=t.resolve(e),s=n&&r&&n.get(r);return s?s.count*s.aliasCount:0}if(ee(t)){let r=0;for(const s of t.items){const t=he(e,s,n);t>r&&(r=t)}return r}if(Q(t)){const r=he(e,t.key,n),s=he(e,t.value,n);return Math.max(r,s)}return 1}function de(e,t,n){if(Array.isArray(e))return e.map(((e,t)=>de(e,String(t),n)));if(e&&"function"==typeof e.toJSON){if(!n||(!X(r=e)&&!ee(r)||!r.anchor))return e.toJSON(t,n);const s={aliasCount:0,count:1,res:void 0};n.anchors.set(e,s),n.onCreate=e=>{s.res=e,delete n.onCreate};const a=e.toJSON(t,n);return n.onCreate&&n.onCreate(a),a}var r;return"bigint"!=typeof e||n&&n.keep?e:Number(e)}const ye=e=>!e||"function"!=typeof e&&"object"!=typeof e;class ge extends ne{constructor(e){super(J),this.value=e}toJSON(e,t){return t&&t.keep?this.value:de(this.value,e,t)}toString(){return String(this.value)}}ge.BLOCK_FOLDED="BLOCK_FOLDED",ge.BLOCK_LITERAL="BLOCK_LITERAL",ge.PLAIN="PLAIN",ge.QUOTE_DOUBLE="QUOTE_DOUBLE",ge.QUOTE_SINGLE="QUOTE_SINGLE";function ve(e,t,n){var r,s;if(te(e))return e;if(Q(e)){const t=null===(s=(r=n.schema[U]).createNode)||void 0===s?void 0:s.call(r,n.schema,null,n);return t.items.push(e),t}(e instanceof String||e instanceof Number||e instanceof Boolean||"function"==typeof BigInt&&e instanceof BigInt)&&(e=e.valueOf());const{onAnchor:a,onTagObj:i,schema:o,sourceObjects:c}=n;let l;if(e&&"object"==typeof e){if(l=c.get(e),l)return l.anchor||(l.anchor=a(e)),new me(l.anchor);l={anchor:null,node:null},c.set(e,l)}t&&t.startsWith("!!")&&(t="tag:yaml.org,2002:"+t.slice(2));let u=function(e,t,n){if(t){const e=n.filter((e=>e.tag===t)),r=e.find((e=>!e.format))||e[0];if(!r)throw new Error(`Tag ${t} not found`);return r}return n.find((t=>t.identify&&t.identify(e)&&!t.format))}(e,t,o.tags);if(!u){if(e&&"function"==typeof e.toJSON&&(e=e.toJSON()),!e||"object"!=typeof e)return new ge(e);u=e instanceof Map?o[U]:Symbol.iterator in Object(e)?o[G]:o[U]}i&&(i(u),delete n.onTagObj);const p=(null==u?void 0:u.createNode)?u.createNode(n.schema,e,n):new ge(e);return t&&(p.tag=t),l&&(l.node=p),p}function be(e,t,n){let r=n;for(let e=t.length-1;e>=0;--e){const n=t[e];if("number"==typeof n&&Number.isInteger(n)&&n>=0){const e=[];e[n]=r,r=e}else{const e={};Object.defineProperty(e,"symbol"==typeof n?n:String(n),{value:r,writable:!0,enumerable:!0,configurable:!0}),r=e}}return ve(r,void 0,{onAnchor(){throw new Error("Repeated objects are not supported here")},schema:e,sourceObjects:new Map})}const $e=e=>null==e||"object"==typeof e&&!!e[Symbol.iterator]().next().done;class we extends ne{constructor(e,t){super(e),Object.defineProperty(this,"schema",{value:t,configurable:!0,enumerable:!1,writable:!0})}addIn(e,t){if($e(e))this.add(t);else{const[n,...r]=e,s=this.get(n,!0);if(ee(s))s.addIn(r,t);else{if(void 0!==s||!this.schema)throw new Error(`Expected YAML collection at ${n}. Remaining path: ${r}`);this.set(n,be(this.schema,r,t))}}}deleteIn([e,...t]){if(0===t.length)return this.delete(e);const n=this.get(e,!0);if(ee(n))return n.deleteIn(t);throw new Error(`Expected YAML collection at ${e}. Remaining path: ${t}`)}getIn([e,...t],n){const r=this.get(e,!0);return 0===t.length?!n&&X(r)?r.value:r:ee(r)?r.getIn(t,n):void 0}hasAllNullValues(e){return this.items.every((t=>{if(!Q(t))return!1;const n=t.value;return null==n||e&&X(n)&&null==n.value&&!n.commentBefore&&!n.comment&&!n.tag}))}hasIn([e,...t]){if(0===t.length)return this.has(e);const n=this.get(e,!0);return!!ee(n)&&n.hasIn(t)}setIn([e,...t],n){if(0===t.length)this.set(e,n);else{const r=this.get(e,!0);if(ee(r))r.setIn(t,n);else{if(void 0!==r||!this.schema)throw new Error(`Expected YAML collection at ${e}. Remaining path: ${t}`);this.set(e,be(this.schema,t,n))}}}}we.maxFlowStringSingleLineLength=60;function Se(e,t,n="flow",{indentAtStart:r,lineWidth:s=80,minContentWidth:a=20,onFold:i,onOverflow:o}={}){if(!s||s<0)return e;const c=Math.max(1+a,1+s-t.length);if(e.length<=c)return e;const l=[],u={};let p,f,m=s-t.length;"number"==typeof r&&(r>s-Math.max(2,a)?l.push(0):m=s-r);let h,d=!1,y=-1,g=-1,v=-1;for("block"===n&&(y=Oe(e,y),-1!==y&&(m=y+c));h=e[y+=1];){if("quoted"===n&&"\\"===h){switch(g=y,e[y+1]){case"x":y+=3;break;case"u":y+=5;break;case"U":y+=9;break;default:y+=1}v=y}if("\n"===h)"block"===n&&(y=Oe(e,y)),m=y+c,p=void 0;else{if(" "===h&&f&&" "!==f&&"\n"!==f&&"\t"!==f){const t=e[y+1];t&&" "!==t&&"\n"!==t&&"\t"!==t&&(p=y)}if(y>=m)if(p)l.push(p),m=p+c,p=void 0;else if("quoted"===n){for(;" "===f||"\t"===f;)f=h,h=e[y+=1],d=!0;const t=y>v+1?y-2:g-1;if(u[t])return e;l.push(t),u[t]=!0,m=t+c,p=void 0}else d=!0}f=h}if(d&&o&&o(),0===l.length)return e;i&&i();let b=e.slice(0,l[0]);for(let r=0;r<l.length;++r){const s=l[r],a=l[r+1]||e.length;0===s?b=`\n${t}${e.slice(0,a)}`:("quoted"===n&&u[s]&&(b+=`${e[s]}\\`),b+=`\n${t}${e.slice(s+1,a)}`)}return b}function Oe(e,t){let n=e[t+1];for(;" "===n||"\t"===n;){do{n=e[t+=1]}while(n&&"\n"!==n);n=e[t+1]}return t}const Ee=e=>({indentAtStart:e.indentAtStart,lineWidth:e.options.lineWidth,minContentWidth:e.options.minContentWidth}),ke=e=>/^(%|---|\.\.\.)/m.test(e);function Ie(e,t){const n=JSON.stringify(e);if(t.options.doubleQuotedAsJSON)return n;const{implicitKey:r}=t,s=t.options.doubleQuotedMinMultiLineLength,a=t.indent||(ke(e)?"  ":"");let i="",o=0;for(let e=0,t=n[e];t;t=n[++e])if(" "===t&&"\\"===n[e+1]&&"n"===n[e+2]&&(i+=n.slice(o,e)+"\\ ",e+=1,o=e,t="\\"),"\\"===t)switch(n[e+1]){case"u":{i+=n.slice(o,e);const t=n.substr(e+2,4);switch(t){case"0000":i+="\\0";break;case"0007":i+="\\a";break;case"000b":i+="\\v";break;case"001b":i+="\\e";break;case"0085":i+="\\N";break;case"00a0":i+="\\_";break;case"2028":i+="\\L";break;case"2029":i+="\\P";break;default:"00"===t.substr(0,2)?i+="\\x"+t.substr(2):i+=n.substr(e,6)}e+=5,o=e+1}break;case"n":if(r||'"'===n[e+2]||n.length<s)e+=1;else{for(i+=n.slice(o,e)+"\n\n";"\\"===n[e+2]&&"n"===n[e+3]&&'"'!==n[e+4];)i+="\n",e+=2;i+=a," "===n[e+2]&&(i+="\\"),e+=1,o=e+1}break;default:e+=1}return i=o?i+n.slice(o):n,r?i:Se(i,a,"quoted",Ee(t))}function xe(e,t){if(t.implicitKey){if(/\n/.test(e))return Ie(e,t)}else if(/[ \t]\n|\n[ \t]/.test(e))return Ie(e,t);const n=t.indent||(ke(e)?"  ":""),r="'"+e.replace(/'/g,"''").replace(/\n+/g,`$&\n${n}`)+"'";return t.implicitKey?r:Se(r,n,"flow",Ee(t))}function je({comment:e,type:t,value:n},r,s,a){if(/\n[\t ]+$/.test(n)||/^\s*$/.test(n))return Ie(n,r);const i=r.indent||(r.forceBlockIndent||ke(n)?"  ":""),o=t!==ge.BLOCK_FOLDED&&(t===ge.BLOCK_LITERAL||!function(e,t,n){if(!t||t<0)return!1;const r=t-n,s=e.length;if(s<=r)return!1;for(let t=0,n=0;t<s;++t)if("\n"===e[t]){if(t-n>r)return!0;if(n=t+1,s-n<=r)return!1}return!0}(n,r.options.lineWidth,i.length));if(!n)return o?"|\n":">\n";let c,l;for(l=n.length;l>0;--l){const e=n[l-1];if("\n"!==e&&"\t"!==e&&" "!==e)break}let u=n.substring(l);const p=u.indexOf("\n");-1===p?c="-":n===u||p!==u.length-1?(c="+",a&&a()):c="",u&&(n=n.slice(0,-u.length),"\n"===u[u.length-1]&&(u=u.slice(0,-1)),u=u.replace(/\n+(?!\n|$)/g,`$&${i}`));let f,m=!1,h=-1;for(f=0;f<n.length;++f){const e=n[f];if(" "===e)m=!0;else{if("\n"!==e)break;h=f}}let d=n.substring(0,h<f?h+1:f);d&&(n=n.substring(d.length),d=d.replace(/\n+/g,`$&${i}`));let y=(o?"|":">")+(m?i?"2":"1":"")+c;if(e&&(y+=" #"+e.replace(/ ?[\r\n]+/g," "),s&&s()),o)return`${y}\n${i}${d}${n=n.replace(/\n+/g,`$&${i}`)}${u}`;return`${y}\n${i}${Se(`${d}${n=n.replace(/\n+/g,"\n$&").replace(/(?:^|\n)([\t ].*)(?:([\n\t ]*)\n(?![\n\t ]))?/g,"$1$2").replace(/\n+/g,`$&${i}`)}${u}`,i,"block",Ee(r))}`}function Ne(e,t,n,r){const{implicitKey:s,inFlow:a}=t,i="string"==typeof e.value?e:Object.assign({},e,{value:String(e.value)});let{type:o}=e;o!==ge.QUOTE_DOUBLE&&/[\x00-\x08\x0b-\x1f\x7f-\x9f\u{D800}-\u{DFFF}]/u.test(i.value)&&(o=ge.QUOTE_DOUBLE);const c=e=>{switch(e){case ge.BLOCK_FOLDED:case ge.BLOCK_LITERAL:return s||a?Ie(i.value,t):je(i,t,n,r);case ge.QUOTE_DOUBLE:return Ie(i.value,t);case ge.QUOTE_SINGLE:return xe(i.value,t);case ge.PLAIN:return function(e,t,n,r){var s;const{type:a,value:i}=e,{actualString:o,implicitKey:c,indent:l,inFlow:u}=t;if(c&&/[\n[\]{},]/.test(i)||u&&/[[\]{},]/.test(i))return Ie(i,t);if(!i||/^[\n\t ,[\]{}#&*!|>'"%@`]|^[?-]$|^[?-][ \t]|[\n:][ \t]|[ \t]\n|[\n\t ]#|[\n\t :]$/.test(i)){const s=-1!==i.indexOf('"'),a=-1!==i.indexOf("'");let o;return o=s&&!a?xe:a&&!s?Ie:t.options.singleQuote?xe:Ie,c||u||-1===i.indexOf("\n")?o(i,t):je(e,t,n,r)}if(!c&&!u&&a!==ge.PLAIN&&-1!==i.indexOf("\n"))return je(e,t,n,r);if(""===l&&ke(i))return t.forceBlockIndent=!0,je(e,t,n,r);const p=i.replace(/\n+/g,`$&\n${l}`);if(o)for(const e of t.doc.schema.tags)if(e.default&&"tag:yaml.org,2002:str"!==e.tag&&(null===(s=e.test)||void 0===s?void 0:s.test(p)))return Ie(i,t);return c?p:Se(p,l,"flow",Ee(t))}(i,t,n,r);default:return null}};let l=c(o);if(null===l){const{defaultKeyType:e,defaultStringType:n}=t.options,r=s&&e||n;if(l=c(r),null===l)throw new Error(`Unsupported default string type ${r}`)}return l}const Ae=(e,t)=>({anchors:new Set,doc:e,indent:"",indentStep:"number"==typeof t.indent?" ".repeat(t.indent):"  ",options:Object.assign({defaultKeyType:null,defaultStringType:"PLAIN",directives:null,doubleQuotedAsJSON:!1,doubleQuotedMinMultiLineLength:40,falseStr:"false",indentSeq:!0,lineWidth:80,minContentWidth:20,nullStr:"null",simpleKeys:!1,singleQuote:!1,trueStr:"true",verifyAliasOrder:!0},t)});function Te(e,t,n,r){if(Q(e))return e.toString(t,n,r);if(W(e))return e.toString(t);let s;const a=te(e)?e:t.doc.createNode(e,{onTagObj:e=>s=e});s||(s=function(e,t){if(t.tag){const n=e.filter((e=>e.tag===t.tag));if(n.length>0)return n.find((e=>e.format===t.format))||n[0]}let n,r;if(X(t)){r=t.value;const s=e.filter((e=>e.identify&&e.identify(r)));n=s.find((e=>e.format===t.format))||s.find((e=>!e.format))}else r=t,n=e.find((e=>e.nodeClass&&r instanceof e.nodeClass));if(!n){const e=r&&r.constructor?r.constructor.name:typeof r;throw new Error(`Tag not resolved for ${e} value`)}return n}(t.doc.schema.tags,a));const i=function(e,t,{anchors:n,doc:r}){const s=[],a=(X(e)||ee(e))&&e.anchor;return a&&ue(a)&&(n.add(a),s.push(`&${a}`)),e.tag?s.push(r.directives.tagString(e.tag)):t.default||s.push(r.directives.tagString(t.tag)),s.join(" ")}(a,s,t);i.length>0&&(t.indentAtStart=(t.indentAtStart||0)+i.length+1);const o="function"==typeof s.stringify?s.stringify(a,t,n,r):X(a)?Ne(a,t,n,r):a.toString(t,n,r);return i?X(a)||"{"===o[0]||"["===o[0]?`${i} ${o}`:`${i}\n${t.indent}${o}`:o}const Ce=(e,t)=>/^\n+$/.test(e)?e.substring(1):e.replace(/^(?!$)(?: $)?/gm,`${t}#`);function Pe(e,t,n){return n?n.includes("\n")?`${e}\n`+Ce(n,t):e.endsWith(" ")?`${e}#${n}`:`${e} #${n}`:e}function Le(e,t){"debug"!==e&&"warn"!==e||("undefined"!=typeof process&&process.emitWarning?process.emitWarning(t):console.warn(t))}function Re(e,t,{key:n,value:r}){if(e&&e.doc.schema.merge&&De(n))if(Z(r))for(const n of r.items)Me(e,t,n);else if(Array.isArray(r))for(const n of r)Me(e,t,n);else Me(e,t,r);else{const s=de(n,"",e);if(t instanceof Map)t.set(s,de(r,s,e));else if(t instanceof Set)t.add(s);else{const a=function(e,t,n){if(null===t)return"";if("object"!=typeof t)return String(t);if(te(e)&&n&&n.doc){const t=Ae(n.doc,{});t.anchors=new Set;for(const e of n.anchors.keys())t.anchors.add(e.anchor);t.inFlow=!0,t.inStringifyKey=!0;const r=e.toString(t);if(!n.mapKeyWarned){let e=JSON.stringify(r);e.length>40&&(e=e.substring(0,36)+'..."'),Le(n.doc.options.logLevel,`Keys with collection values will be stringified due to JS Object restrictions: ${e}. Set mapAsMap: true to use object keys.`),n.mapKeyWarned=!0}return r}return JSON.stringify(t)}(n,s,e),i=de(r,a,e);a in t?Object.defineProperty(t,a,{value:i,writable:!0,enumerable:!0,configurable:!0}):t[a]=i}}return t}const De=e=>"<<"===e||X(e)&&"<<"===e.value&&(!e.type||e.type===ge.PLAIN);function Me(e,t,n){const r=e&&W(n)?n.resolve(e.doc):null;if(!H(r))throw new Error("Merge sources must be map aliases");const s=r.toJSON(null,e,Map);for(const[e,n]of s)t instanceof Map?t.has(e)||t.set(e,n):t instanceof Set?t.add(e):Object.prototype.hasOwnProperty.call(t,e)||Object.defineProperty(t,e,{value:n,writable:!0,enumerable:!0,configurable:!0});return t}function qe(e,t,n){const r=ve(e,void 0,n),s=ve(t,void 0,n);return new _e(r,s)}class _e{constructor(e,t=null){Object.defineProperty(this,z,{value:F}),this.key=e,this.value=t}toJSON(e,t){return Re(t,t&&t.mapAsMap?new Map:{},this)}toString(e,t,n){return e&&e.doc?function({key:e,value:t},n,r,s){const{allNullValues:a,doc:i,indent:o,indentStep:c,options:{indentSeq:l,simpleKeys:u}}=n;let p=te(e)&&e.comment||null;if(u){if(p)throw new Error("With simple keys, key nodes cannot have comments");if(ee(e))throw new Error("With simple keys, collection cannot be used as a key value")}let f=!u&&(!e||p&&null==t&&!n.inFlow||ee(e)||(X(e)?e.type===ge.BLOCK_FOLDED||e.type===ge.BLOCK_LITERAL:"object"==typeof e));n=Object.assign({},n,{allNullValues:!1,implicitKey:!f&&(u||!a),indent:o+c});let m=!1,h=!1,d=Te(e,n,(()=>m=!0),(()=>h=!0));if(!f&&!n.inFlow&&d.length>1024){if(u)throw new Error("With simple keys, single line scalar must not span more than 1024 characters");f=!0}if(n.inFlow){if(a||null==t)return m&&r&&r(),f?`? ${d}`:d}else if(a&&!u||null==t&&f)return m&&(p=null),h&&!p&&s&&s(),Pe(`? ${d}`,n.indent,p);m&&(p=null),d=f?`? ${Pe(d,n.indent,p)}\n${o}:`:Pe(`${d}:`,n.indent,p);let y="",g=null;te(t)?(t.spaceBefore&&(y="\n"),t.commentBefore&&(y+=`\n${Ce(t.commentBefore,n.indent)}`),g=t.comment):t&&"object"==typeof t&&(t=i.createNode(t)),n.implicitKey=!1,f||p||!X(t)||(n.indentAtStart=d.length+1),h=!1,l||!(c.length>=2)||n.inFlow||f||!Z(t)||t.flow||t.tag||t.anchor||(n.indent=n.indent.substr(2));let v=!1;const b=Te(t,n,(()=>v=!0),(()=>h=!0));let $=" ";y||p?$=`${y}\n${n.indent}`:!f&&ee(t)?("["===b[0]||"{"===b[0])&&!b.includes("\n")||($=`\n${n.indent}`):"\n"===b[0]&&($="");return n.inFlow?(v&&r&&r(),d+$+b):(v&&(g=null),h&&!g&&s&&s(),Pe(d+$+b,n.indent,g))}(this,e,t,n):JSON.stringify(this)}}const Be={intAsBigInt:!1,logLevel:"warn",prettyErrors:!0,strict:!0,uniqueKeys:!0,version:"1.2"};function Ve({comment:e,flow:t,items:n},r,{blockItem:s,flowChars:a,itemIndent:i,onChompKeep:o,onComment:c}){const{indent:l,indentStep:u}=r,p=t||r.inFlow;p&&(i+=u),r=Object.assign({},r,{indent:i,inFlow:p,type:null});let f=!0,m=!1;const h=n.reduce(((e,t,s)=>{let a=null;if(te(t)){!m&&t.spaceBefore&&e.push({comment:!0,str:""});let n=t.commentBefore;if(n&&m&&(n=n.replace(/^\n+/,"")),n){/^\n+$/.test(n)&&(n=n.substring(1));for(const t of n.match(/^.*$/gm)){const n=" "===t?"#":t?`#${t}`:"";e.push({comment:!0,str:n})}}t.comment&&(a=t.comment,f=!1)}else if(Q(t)){const n=te(t.key)?t.key:null;if(n){!m&&n.spaceBefore&&e.push({comment:!0,str:""});let t=n.commentBefore;if(t&&m&&(t=t.replace(/^\n+/,"")),t){/^\n+$/.test(t)&&(t=t.substring(1));for(const n of t.match(/^.*$/gm)){const t=" "===n?"#":n?`#${n}`:"";e.push({comment:!0,str:t})}}n.comment&&(f=!1)}if(p){const e=te(t.value)?t.value:null;e?(e.comment&&(a=e.comment),(e.comment||e.commentBefore)&&(f=!1)):null==t.value&&n&&n.comment&&(a=n.comment)}}m=!1;let o=Te(t,r,(()=>a=null),(()=>m=!0));return p&&s<n.length-1&&(o+=","),o=Pe(o,i,a),m&&(a||p)&&(m=!1),e.push({comment:!1,str:o}),e}),[]);let d;if(0===h.length)d=a.start+a.end;else if(p){const{start:e,end:t}=a,n=h.map((e=>e.str));let r=2;for(const e of h){if(e.comment||e.str.includes("\n")){f=!1;break}r+=e.str.length+2}if(!f||r>we.maxFlowStringSingleLineLength){d=e;for(const e of n)d+=e?`\n${u}${l}${e}`:"\n";d+=`\n${l}${t}`}else d=`${e} ${n.join(" ")} ${t}`}else{const e=h.map(s);d=e.shift()||"";for(const t of e)d+=t?`\n${l}${t}`:"\n"}return e?(d+="\n"+Ce(e,l),c&&c()):m&&o&&o(),d}function Ke(e,t){const n=X(t)?t.value:t;for(const r of e)if(Q(r)){if(r.key===t||r.key===n)return r;if(X(r.key)&&r.key.value===n)return r}}class Ue extends we{constructor(e){super(U,e),this.items=[]}static get tagName(){return"tag:yaml.org,2002:map"}add(e,t){let n;n=Q(e)?e:new _e(e&&"object"==typeof e&&"key"in e?e.key:e,e.value);const r=Ke(this.items,n.key),s=this.schema&&this.schema.sortMapEntries;if(r){if(!t)throw new Error(`Key ${n.key} already set`);X(r.value)&&ye(n.value)?r.value.value=n.value:r.value=n.value}else if(s){const e=this.items.findIndex((e=>s(n,e)<0));-1===e?this.items.push(n):this.items.splice(e,0,n)}else this.items.push(n)}delete(e){const t=Ke(this.items,e);if(!t)return!1;return this.items.splice(this.items.indexOf(t),1).length>0}get(e,t){const n=Ke(this.items,e),r=n&&n.value;return!t&&X(r)?r.value:r}has(e){return!!Ke(this.items,e)}set(e,t){this.add(new _e(e,t),!0)}toJSON(e,t,n){const r=n?new n:t&&t.mapAsMap?new Map:{};t&&t.onCreate&&t.onCreate(r);for(const e of this.items)Re(t,r,e);return r}toString(e,t,n){if(!e)return JSON.stringify(this);for(const e of this.items)if(!Q(e))throw new Error(`Map items must all be pairs; found ${JSON.stringify(e)} instead`);return!e.allNullValues&&this.hasAllNullValues(!1)&&(e=Object.assign({},e,{allNullValues:!0})),Ve(this,e,{blockItem:e=>e.str,flowChars:{start:"{",end:"}"},itemIndent:e.indent||"",onChompKeep:n,onComment:t})}}const Fe={collection:"map",createNode:function(e,t,n){const{keepUndefined:r,replacer:s}=n,a=new Ue(e),i=(e,i)=>{if("function"==typeof s)i=s.call(t,e,i);else if(Array.isArray(s)&&!s.includes(e))return;(void 0!==i||r)&&a.items.push(qe(e,i,n))};if(t instanceof Map)for(const[e,n]of t)i(e,n);else if(t&&"object"==typeof t)for(const e of Object.keys(t))i(e,t[e]);return"function"==typeof e.sortMapEntries&&a.items.sort(e.sortMapEntries),a},default:!0,nodeClass:Ue,tag:"tag:yaml.org,2002:map",resolve:(e,t)=>(H(e)||t("Expected a mapping for this tag"),e)};class Je extends we{constructor(e){super(G,e),this.items=[]}static get tagName(){return"tag:yaml.org,2002:seq"}add(e){this.items.push(e)}delete(e){const t=Ge(e);if("number"!=typeof t)return!1;return this.items.splice(t,1).length>0}get(e,t){const n=Ge(e);if("number"!=typeof n)return;const r=this.items[n];return!t&&X(r)?r.value:r}has(e){const t=Ge(e);return"number"==typeof t&&t<this.items.length}set(e,t){const n=Ge(e);if("number"!=typeof n)throw new Error(`Expected a valid index, not ${e}.`);const r=this.items[n];X(r)&&ye(t)?r.value=t:this.items[n]=t}toJSON(e,t){const n=[];t&&t.onCreate&&t.onCreate(n);let r=0;for(const e of this.items)n.push(de(e,String(r++),t));return n}toString(e,t,n){return e?Ve(this,e,{blockItem:e=>e.comment?e.str:`- ${e.str}`,flowChars:{start:"[",end:"]"},itemIndent:(e.indent||"")+"  ",onChompKeep:n,onComment:t}):JSON.stringify(this)}}function Ge(e){let t=X(e)?e.value:e;return t&&"string"==typeof t&&(t=Number(t)),"number"==typeof t&&Number.isInteger(t)&&t>=0?t:null}const ze={collection:"seq",createNode:function(e,t,n){const{replacer:r}=n,s=new Je(e);if(t&&Symbol.iterator in Object(t)){let e=0;for(let a of t){if("function"==typeof r){const n=t instanceof Set?a:String(e++);a=r.call(t,n,a)}s.items.push(ve(a,void 0,n))}}return s},default:!0,nodeClass:Je,tag:"tag:yaml.org,2002:seq",resolve:(e,t)=>(Z(e)||t("Expected a sequence for this tag"),e)},We={identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:e=>e,stringify:(e,t,n,r)=>Ne(e,t=Object.assign({actualString:!0},t),n,r)},Ye={identify:e=>null==e,createNode:()=>new ge(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>new ge(null),stringify:({source:e},t)=>e&&Ye.test.test(e)?e:t.options.nullStr},He={identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:e=>new ge("t"===e[0]||"T"===e[0]),stringify({source:e,value:t},n){if(e&&He.test.test(e)){if(t===("t"===e[0]||"T"===e[0]))return e}return t?n.options.trueStr:n.options.falseStr}};function Qe({format:e,minFractionDigits:t,tag:n,value:r}){if("bigint"==typeof r)return String(r);const s="number"==typeof r?r:Number(r);if(!isFinite(s))return isNaN(s)?".nan":s<0?"-.inf":".inf";let a=JSON.stringify(r);if(!e&&t&&(!n||"tag:yaml.org,2002:float"===n)&&/^\d/.test(a)){let e=a.indexOf(".");e<0&&(e=a.length,a+=".");let n=t-(a.length-e-1);for(;n-- >0;)a+="0"}return a}const Xe={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF|nan|NaN|NAN))$/,resolve:e=>"nan"===e.slice(-3).toLowerCase()?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:Qe},Ze={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e),stringify:({value:e})=>Number(e).toExponential()},et={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.[0-9]+|[0-9]+\.[0-9]*)$/,resolve(e){const t=new ge(parseFloat(e)),n=e.indexOf(".");return-1!==n&&"0"===e[e.length-1]&&(t.minFractionDigits=e.length-n-1),t},stringify:Qe},tt=e=>"bigint"==typeof e||Number.isInteger(e),nt=(e,t,n,{intAsBigInt:r})=>r?BigInt(e):parseInt(e.substring(t),n);function rt(e,t,n){const{value:r}=e;return tt(r)&&r>=0?n+r.toString(t):Qe(e)}const st={identify:e=>tt(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o[0-7]+$/,resolve:(e,t,n)=>nt(e,2,8,n),stringify:e=>rt(e,8,"0o")},at={identify:tt,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:(e,t,n)=>nt(e,0,10,n),stringify:Qe},it={identify:e=>tt(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x[0-9a-fA-F]+$/,resolve:(e,t,n)=>nt(e,2,16,n),stringify:e=>rt(e,16,"0x")},ot=[Fe,ze,We,Ye,He,st,at,it,Xe,Ze,et];function ct(e){return"bigint"==typeof e||Number.isInteger(e)}const lt=({value:e})=>JSON.stringify(e),ut=[Fe,ze].concat([{identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:e=>e,stringify:lt},{identify:e=>null==e,createNode:()=>new ge(null),default:!0,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:lt},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^true|false$/,resolve:e=>"true"===e,stringify:lt},{identify:ct,default:!0,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:(e,t,{intAsBigInt:n})=>n?BigInt(e):parseInt(e,10),stringify:({value:e})=>ct(e)?e.toString():JSON.stringify(e)},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:e=>parseFloat(e),stringify:lt}],{default:!0,tag:"",test:/^/,resolve:(e,t)=>(t(`Unresolved plain scalar ${JSON.stringify(e)}`),e)}),pt={identify:e=>e instanceof Uint8Array,default:!1,tag:"tag:yaml.org,2002:binary",resolve(e,t){if("function"==typeof Buffer)return Buffer.from(e,"base64");if("function"==typeof atob){const t=atob(e.replace(/[\n\r]/g,"")),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n[e]=t.charCodeAt(e);return n}return t("This environment does not support reading binary tags; either Buffer or atob is required"),e},stringify({comment:e,type:t,value:n},r,s,a){const i=n;let o;if("function"==typeof Buffer)o=i instanceof Buffer?i.toString("base64"):Buffer.from(i.buffer).toString("base64");else{if("function"!=typeof btoa)throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");{let e="";for(let t=0;t<i.length;++t)e+=String.fromCharCode(i[t]);o=btoa(e)}}if(t||(t=ge.BLOCK_LITERAL),t!==ge.QUOTE_DOUBLE){const e=Math.max(r.options.lineWidth-r.indent.length,r.options.minContentWidth),n=Math.ceil(o.length/e),s=new Array(n);for(let t=0,r=0;t<n;++t,r+=e)s[t]=o.substr(r,e);o=s.join(t===ge.BLOCK_LITERAL?"\n":" ")}return Ne({comment:e,type:t,value:o},r,s,a)}};function ft(e,t){if(Z(e))for(let n=0;n<e.items.length;++n){let r=e.items[n];if(!Q(r)){if(H(r)){r.items.length>1&&t("Each pair must have its own sequence indicator");const e=r.items[0]||new _e(new ge(null));if(r.commentBefore&&(e.key.commentBefore=e.key.commentBefore?`${r.commentBefore}\n${e.key.commentBefore}`:r.commentBefore),r.comment){const t=e.value||e.key;t.comment=t.comment?`${r.comment}\n${t.comment}`:r.comment}r=e}e.items[n]=Q(r)?r:new _e(r)}}else t("Expected a sequence for this tag");return e}function mt(e,t,n){const{replacer:r}=n,s=new Je(e);s.tag="tag:yaml.org,2002:pairs";let a=0;if(t&&Symbol.iterator in Object(t))for(let e of t){let i,o;if("function"==typeof r&&(e=r.call(t,String(a++),e)),Array.isArray(e)){if(2!==e.length)throw new TypeError(`Expected [key, value] tuple: ${e}`);i=e[0],o=e[1]}else if(e&&e instanceof Object){const t=Object.keys(e);if(1!==t.length)throw new TypeError(`Expected { key: value } tuple: ${e}`);i=t[0],o=e[i]}else i=e;s.items.push(qe(i,o,n))}return s}const ht={collection:"seq",default:!1,tag:"tag:yaml.org,2002:pairs",resolve:ft,createNode:mt};class dt extends Je{constructor(){super(),this.add=Ue.prototype.add.bind(this),this.delete=Ue.prototype.delete.bind(this),this.get=Ue.prototype.get.bind(this),this.has=Ue.prototype.has.bind(this),this.set=Ue.prototype.set.bind(this),this.tag=dt.tag}toJSON(e,t){if(!t)return super.toJSON(e);const n=new Map;t&&t.onCreate&&t.onCreate(n);for(const e of this.items){let r,s;if(Q(e)?(r=de(e.key,"",t),s=de(e.value,r,t)):r=de(e,"",t),n.has(r))throw new Error("Ordered maps must not include duplicate keys");n.set(r,s)}return n}}dt.tag="tag:yaml.org,2002:omap";const yt={collection:"seq",identify:e=>e instanceof Map,nodeClass:dt,default:!1,tag:"tag:yaml.org,2002:omap",resolve(e,t){const n=ft(e,t),r=[];for(const{key:e}of n.items)X(e)&&(r.includes(e.value)?t(`Ordered maps must not include duplicate keys: ${e.value}`):r.push(e.value));return Object.assign(new dt,n)},createNode(e,t,n){const r=mt(e,t,n),s=new dt;return s.items=r.items,s}};function gt({value:e,source:t},n){return t&&(e?vt:bt).test.test(t)?t:e?n.options.trueStr:n.options.falseStr}const vt={identify:e=>!0===e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>new ge(!0),stringify:gt},bt={identify:e=>!1===e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,resolve:()=>new ge(!1),stringify:gt},$t={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?\.(?:inf|Inf|INF|nan|NaN|NAN)$/,resolve:e=>"nan"===e.slice(-3).toLowerCase()?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:Qe},wt={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:[0-9][0-9_]*)?(?:\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e.replace(/_/g,"")),stringify:({value:e})=>Number(e).toExponential()},St={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.[0-9_]*$/,resolve(e){const t=new ge(parseFloat(e.replace(/_/g,""))),n=e.indexOf(".");if(-1!==n){const r=e.substring(n+1).replace(/_/g,"");"0"===r[r.length-1]&&(t.minFractionDigits=r.length)}return t},stringify:Qe},Ot=e=>"bigint"==typeof e||Number.isInteger(e);function Et(e,t,n,{intAsBigInt:r}){const s=e[0];if("-"!==s&&"+"!==s||(t+=1),e=e.substring(t).replace(/_/g,""),r){switch(n){case 2:e=`0b${e}`;break;case 8:e=`0o${e}`;break;case 16:e=`0x${e}`}const t=BigInt(e);return"-"===s?BigInt(-1)*t:t}const a=parseInt(e,n);return"-"===s?-1*a:a}function kt(e,t,n){const{value:r}=e;if(Ot(r)){const e=r.toString(t);return r<0?"-"+n+e.substr(1):n+e}return Qe(e)}const It={identify:Ot,default:!0,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^[-+]?0b[0-1_]+$/,resolve:(e,t,n)=>Et(e,2,2,n),stringify:e=>kt(e,2,"0b")},xt={identify:Ot,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^[-+]?0[0-7_]+$/,resolve:(e,t,n)=>Et(e,1,8,n),stringify:e=>kt(e,8,"0")},jt={identify:Ot,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9][0-9_]*$/,resolve:(e,t,n)=>Et(e,0,10,n),stringify:Qe},Nt={identify:Ot,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^[-+]?0x[0-9a-fA-F_]+$/,resolve:(e,t,n)=>Et(e,2,16,n),stringify:e=>kt(e,16,"0x")};class At extends Ue{constructor(e){super(e),this.tag=At.tag}add(e){let t;t=Q(e)?e:"object"==typeof e&&"key"in e&&"value"in e&&null===e.value?new _e(e.key,null):new _e(e,null);Ke(this.items,t.key)||this.items.push(t)}get(e,t){const n=Ke(this.items,e);return!t&&Q(n)?X(n.key)?n.key.value:n.key:n}set(e,t){if("boolean"!=typeof t)throw new Error("Expected boolean value for set(key, value) in a YAML set, not "+typeof t);const n=Ke(this.items,e);n&&!t?this.items.splice(this.items.indexOf(n),1):!n&&t&&this.items.push(new _e(e))}toJSON(e,t){return super.toJSON(e,t,Set)}toString(e,t,n){if(!e)return JSON.stringify(this);if(this.hasAllNullValues(!0))return super.toString(Object.assign({},e,{allNullValues:!0}),t,n);throw new Error("Set items must all have null values")}}At.tag="tag:yaml.org,2002:set";const Tt={collection:"map",identify:e=>e instanceof Set,nodeClass:At,default:!1,tag:"tag:yaml.org,2002:set",resolve(e,t){if(H(e)){if(e.hasAllNullValues(!0))return Object.assign(new At,e);t("Set items must all have null values")}else t("Expected a mapping for this tag");return e},createNode(e,t,n){const{replacer:r}=n,s=new At(e);if(t&&Symbol.iterator in Object(t))for(let e of t)"function"==typeof r&&(e=r.call(t,e,e)),s.items.push(qe(e,null,n));return s}};function Ct(e,t){const n=e[0],r="-"===n||"+"===n?e.substring(1):e,s=e=>t?BigInt(e):Number(e),a=r.replace(/_/g,"").split(":").reduce(((e,t)=>e*s(60)+s(t)),s(0));return"-"===n?s(-1)*a:a}function Pt(e){let{value:t}=e,n=e=>e;if("bigint"==typeof t)n=e=>BigInt(e);else if(isNaN(t)||!isFinite(t))return Qe(e);let r="";t<0&&(r="-",t*=n(-1));const s=n(60),a=[t%s];return t<60?a.unshift(0):(t=(t-a[0])/s,a.unshift(t%s),t>=60&&(t=(t-a[0])/s,a.unshift(t))),r+a.map((e=>e<10?"0"+String(e):String(e))).join(":").replace(/000000\d*$/,"")}const Lt={identify:e=>"bigint"==typeof e||Number.isInteger(e),default:!0,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,resolve:(e,t,{intAsBigInt:n})=>Ct(e,n),stringify:Pt},Rt={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*$/,resolve:e=>Ct(e,!1),stringify:Pt},Dt={identify:e=>e instanceof Date,default:!0,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?$"),resolve(e){const t=e.match(Dt.test);if(!t)throw new Error("!!timestamp expects a date, starting with yyyy-mm-dd");const[,n,r,s,a,i,o]=t.map(Number),c=t[7]?Number((t[7]+"00").substr(1,3)):0;let l=Date.UTC(n,r-1,s,a||0,i||0,o||0,c);const u=t[8];if(u&&"Z"!==u){let e=Ct(u,!1);Math.abs(e)<30&&(e*=60),l-=6e4*e}return new Date(l)},stringify:({value:e})=>e.toISOString().replace(/((T00:00)?:00)?\.000Z$/,"")},Mt=[Fe,ze,We,Ye,vt,bt,It,xt,jt,Nt,$t,wt,St,pt,yt,ht,Tt,Lt,Rt,Dt],qt={core:ot,failsafe:[Fe,ze,We],json:ut,yaml11:Mt,"yaml-1.1":Mt},_t={binary:pt,bool:He,float:et,floatExp:Ze,floatNaN:Xe,floatTime:Rt,int:at,intHex:it,intOct:st,intTime:Lt,map:Fe,null:Ye,omap:yt,pairs:ht,seq:ze,set:Tt,timestamp:Dt},Bt={"tag:yaml.org,2002:binary":pt,"tag:yaml.org,2002:omap":yt,"tag:yaml.org,2002:pairs":ht,"tag:yaml.org,2002:set":Tt,"tag:yaml.org,2002:timestamp":Dt};const Vt=(e,t)=>e.key<t.key?-1:e.key>t.key?1:0;class Kt{constructor({customTags:e,merge:t,resolveKnownTags:n,schema:r,sortMapEntries:s}){this.merge=!!t,this.name=r||"core",this.knownTags=n?Bt:{},this.tags=function(e,t){let n=qt[t];if(!n){const e=Object.keys(qt).filter((e=>"yaml11"!==e)).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown schema "${t}"; use one of ${e}`)}if(Array.isArray(e))for(const t of e)n=n.concat(t);else"function"==typeof e&&(n=e(n.slice()));return n.map((e=>{if("string"!=typeof e)return e;const t=_t[e];if(t)return t;const n=Object.keys(_t).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown custom tag "${e}"; use one of ${n}`)}))}(e,this.name),Object.defineProperty(this,U,{value:Fe}),Object.defineProperty(this,J,{value:We}),Object.defineProperty(this,G,{value:ze}),this.sortMapEntries=!0===s?Vt:s||null}}function Ut(e,t,n,r){if(r&&"object"==typeof r)if(Array.isArray(r))for(let t=0,n=r.length;t<n;++t){const n=r[t],s=Ut(e,r,String(t),n);void 0===s?delete r[t]:s!==n&&(r[t]=s)}else if(r instanceof Map)for(const t of Array.from(r.keys())){const n=r.get(t),s=Ut(e,r,t,n);void 0===s?r.delete(t):s!==n&&r.set(t,s)}else if(r instanceof Set)for(const t of Array.from(r)){const n=Ut(e,r,t,t);void 0===n?r.delete(t):n!==t&&(r.delete(t),r.add(n))}else for(const[t,n]of Object.entries(r)){const s=Ut(e,r,t,n);void 0===s?delete r[t]:s!==n&&(r[t]=s)}return e.call(t,n,r)}class Ft{constructor(e,t,n){this.commentBefore=null,this.comment=null,this.errors=[],this.warnings=[],Object.defineProperty(this,z,{value:K});let r=null;"function"==typeof t||Array.isArray(t)?r=t:void 0===n&&t&&(n=t,t=void 0);const s=Object.assign({},Be,n);this.options=s;let{version:a}=s;(null==n?void 0:n.directives)?(this.directives=n.directives.atDocument(),this.directives.yaml.explicit&&(a=this.directives.yaml.version)):this.directives=new le({version:a}),this.setSchema(a,n),this.contents=void 0===e?null:this.createNode(e,r,n)}add(e){Jt(this.contents)&&this.contents.add(e)}addIn(e,t){Jt(this.contents)&&this.contents.addIn(e,t)}createAlias(e,t){if(!e.anchor){const n=pe(this);e.anchor=!t||n.has(t)?fe(t||"a",n):t}return new me(e.anchor)}createNode(e,t,n){let r;if("function"==typeof t)e=t.call({"":e},"",e),r=t;else if(Array.isArray(t)){const e=e=>"number"==typeof e||e instanceof String||e instanceof Number,n=t.filter(e).map(String);n.length>0&&(t=t.concat(n)),r=t}else void 0===n&&t&&(n=t,t=void 0);const{anchorPrefix:s,flow:a,keepUndefined:i,onTagObj:o,tag:c}=n||{},{onAnchor:l,setAnchors:u,sourceObjects:p}=function(e,t){const n=[],r=new Map;let s=null;return{onAnchor(r){n.push(r),s||(s=pe(e));const a=fe(t,s);return s.add(a),a},setAnchors(){for(const e of n){const t=r.get(e);if("object"!=typeof t||!t.anchor||!X(t.node)&&!ee(t.node)){const t=new Error("Failed to resolve repeated object (this should not happen)");throw t.source=e,t}t.node.anchor=t.anchor}},sourceObjects:r}}(this,s||"a"),f=ve(e,c,{keepUndefined:null!=i&&i,onAnchor:l,onTagObj:o,replacer:r,schema:this.schema,sourceObjects:p});return a&&ee(f)&&(f.flow=!0),u(),f}createPair(e,t,n={}){const r=this.createNode(e,null,n),s=this.createNode(t,null,n);return new _e(r,s)}delete(e){return!!Jt(this.contents)&&this.contents.delete(e)}deleteIn(e){return $e(e)?null!=this.contents&&(this.contents=null,!0):!!Jt(this.contents)&&this.contents.deleteIn(e)}get(e,t){return ee(this.contents)?this.contents.get(e,t):void 0}getIn(e,t){return $e(e)?!t&&X(this.contents)?this.contents.value:this.contents:ee(this.contents)?this.contents.getIn(e,t):void 0}has(e){return!!ee(this.contents)&&this.contents.has(e)}hasIn(e){return $e(e)?void 0!==this.contents:!!ee(this.contents)&&this.contents.hasIn(e)}set(e,t){null==this.contents?this.contents=be(this.schema,[e],t):Jt(this.contents)&&this.contents.set(e,t)}setIn(e,t){$e(e)?this.contents=t:null==this.contents?this.contents=be(this.schema,Array.from(e),t):Jt(this.contents)&&this.contents.setIn(e,t)}setSchema(e,t){let n;switch(String(e)){case"1.1":this.directives.yaml.version="1.1",n=Object.assign({merge:!0,resolveKnownTags:!1,schema:"yaml-1.1"},t);break;case"1.2":this.directives.yaml.version="1.2",n=Object.assign({merge:!1,resolveKnownTags:!0,schema:"core"},t);break;default:{const t=JSON.stringify(e);throw new Error(`Expected '1.1' or '1.2' as version, but found: ${t}`)}}this.schema=new Kt(n)}toJS({json:e,jsonArg:t,mapAsMap:n,maxAliasCount:r,onAnchor:s,reviver:a}={}){const i={anchors:new Map,doc:this,keep:!e,mapAsMap:!0===n,mapKeyWarned:!1,maxAliasCount:"number"==typeof r?r:100,stringify:Te},o=de(this.contents,t||"",i);if("function"==typeof s)for(const{count:e,res:t}of i.anchors.values())s(t,e);return"function"==typeof a?Ut(a,{"":o},"",o):o}toJSON(e,t){return this.toJS({json:!0,jsonArg:e,mapAsMap:!1,onAnchor:t})}toString(e={}){if(this.errors.length>0)throw new Error("Document with errors cannot be stringified");if("indent"in e&&(!Number.isInteger(e.indent)||Number(e.indent)<=0)){const t=JSON.stringify(e.indent);throw new Error(`"indent" option must be a positive integer, not ${t}`)}return function(e,t){const n=[];let r=!0===t.directives;if(!1!==t.directives){const t=e.directives.toString(e);t?(n.push(t),r=!0):e.directives.marker&&(r=!0)}r&&n.push("---"),e.commentBefore&&(1!==n.length&&n.unshift(""),n.unshift(Ce(e.commentBefore,"")));const s=Ae(e,t);let a=!1,i=null;if(e.contents){te(e.contents)&&(e.contents.spaceBefore&&r&&n.push(""),e.contents.commentBefore&&n.push(Ce(e.contents.commentBefore,"")),s.forceBlockIndent=!!e.comment,i=e.contents.comment);const t=i?void 0:()=>a=!0;let o=Te(e.contents,s,(()=>i=null),t);i&&(o=Pe(o,"",i)),"|"!==o[0]&&">"!==o[0]||"---"!==n[n.length-1]?n.push(o):n[n.length-1]=`--- ${o}`}else n.push(Te(e.contents,s));let o=e.comment;return o&&a&&(o=o.replace(/^\n+/,"")),o&&(a&&!i||""===n[n.length-1]||n.push(""),n.push(Ce(o,""))),n.join("\n")+"\n"}(this,e)}}function Jt(e){if(ee(e))return!0;throw new Error("Expected a YAML collection as document contents")}class Gt extends Error{constructor(e,t,n,r){super(),this.name=e,this.code=n,this.message=r,this.pos=t}}class zt extends Gt{constructor(e,t,n){super("YAMLParseError",e,t,n)}}class Wt extends Gt{constructor(e,t,n){super("YAMLWarning",e,t,n)}}const Yt=(e,t)=>n=>{if(-1===n.pos[0])return;n.linePos=n.pos.map((e=>t.linePos(e)));const{line:r,col:s}=n.linePos[0];n.message+=` at line ${r}, column ${s}`;let a=s-1,i=e.substring(t.lineStarts[r-1],t.lineStarts[r]).replace(/[\n\r]+$/,"");if(a>=60&&i.length>80){const e=Math.min(a-39,i.length-79);i="…"+i.substring(e),a-=e-1}if(i.length>80&&(i=i.substring(0,79)+"…"),r>1&&/^ *$/.test(i.substring(0,a))){let n=e.substring(t.lineStarts[r-2],t.lineStarts[r-1]);n.length>80&&(n=n.substring(0,79)+"…\n"),i=n+i}if(/[^ ]/.test(i)){let e=1;const t=n.linePos[1];t&&t.line===r&&t.col>s&&(e=Math.min(t.col-s,80-a));const o=" ".repeat(a)+"^".repeat(e);n.message+=`:\n\n${i}\n${o}\n`}};function Ht(e,{flow:t,indicator:n,next:r,offset:s,onError:a,startOnNewline:i}){let o=!1,c=i,l=i,u="",p="",f=!1,m=!1,h=null,d=null,y=null,g=null,v=null;for(const r of e)switch(m&&("space"!==r.type&&"newline"!==r.type&&"comma"!==r.type&&a(r.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),m=!1),r.type){case"space":!t&&c&&"doc-start"!==n&&"\t"===r.source[0]&&a(r,"TAB_AS_INDENT","Tabs are not allowed as indentation"),l=!0;break;case"comment":{l||a(r,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const e=r.source.substring(1)||" ";u?u+=p+e:u=e,p="",c=!1;break}case"newline":c?u?u+=r.source:o=!0:p+=r.source,c=!0,f=!0,l=!0;break;case"anchor":h&&a(r,"MULTIPLE_ANCHORS","A node can have at most one anchor"),h=r,null===v&&(v=r.offset),c=!1,l=!1,m=!0;break;case"tag":d&&a(r,"MULTIPLE_TAGS","A node can have at most one tag"),d=r,null===v&&(v=r.offset),c=!1,l=!1,m=!0;break;case n:(h||d)&&a(r,"BAD_PROP_ORDER",`Anchors and tags must be after the ${r.source} indicator`),g=r,c=!1,l=!1;break;case"comma":if(t){y&&a(r,"UNEXPECTED_TOKEN",`Unexpected , in ${t}`),y=r,c=!1,l=!1;break}default:a(r,"UNEXPECTED_TOKEN",`Unexpected ${r.type} token`),c=!1,l=!1}const b=e[e.length-1],$=b?b.offset+b.source.length:s;return m&&r&&"space"!==r.type&&"newline"!==r.type&&"comma"!==r.type&&("scalar"!==r.type||""!==r.source)&&a(r.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space"),{comma:y,found:g,spaceBefore:o,comment:u,hasNewline:f,anchor:h,tag:d,end:$,start:null!=v?v:$}}function Qt(e){if(!e)return null;switch(e.type){case"alias":case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":if(e.source.includes("\n"))return!0;if(e.end)for(const t of e.end)if("newline"===t.type)return!0;return!1;case"flow-collection":for(const t of e.items){for(const e of t.start)if("newline"===e.type)return!0;if(t.sep)for(const e of t.sep)if("newline"===e.type)return!0;if(Qt(t.key)||Qt(t.value))return!0}return!1;default:return!0}}function Xt(e,t,n){const{uniqueKeys:r}=e.options;if(!1===r)return!1;const s="function"==typeof r?r:(t,n)=>t===n||X(t)&&X(n)&&t.value===n.value&&!("<<"===t.value&&e.schema.merge);return t.some((e=>s(e.key,n)))}const Zt="All mapping items must start at the same column";function en(e,t,n,r){let s="";if(e){let a=!1,i="";for(const o of e){const{source:e,type:c}=o;switch(c){case"space":a=!0;break;case"comment":{n&&!a&&r(o,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const t=e.substring(1)||" ";s?s+=i+t:s=t,i="";break}case"newline":s&&(i+=e),a=!0;break;default:r(o,"UNEXPECTED_TOKEN",`Unexpected ${c} at node end`)}t+=e.length}}return{comment:s,offset:t}}const tn="Block collections are not allowed within flow collections",nn=e=>e&&("block-map"===e.type||"block-seq"===e.type);function rn(e,t,n,r,s){let a;switch(n.type){case"block-map":a=function({composeNode:e,composeEmptyNode:t},n,r,s){var a;const i=new Ue(n.schema);let o=r.offset;for(const{start:c,key:l,sep:u,value:p}of r.items){const f=Ht(c,{indicator:"explicit-key-ind",next:l||(null==u?void 0:u[0]),offset:o,onError:s,startOnNewline:!0}),m=!f.found;if(m){if(l&&("block-seq"===l.type?s(o,"BLOCK_AS_IMPLICIT_KEY","A block sequence may not be used as an implicit map key"):"indent"in l&&l.indent!==r.indent&&s(o,"BAD_INDENT",Zt)),!f.anchor&&!f.tag&&!u){f.comment&&(i.comment?i.comment+="\n"+f.comment:i.comment=f.comment);continue}}else(null===(a=f.found)||void 0===a?void 0:a.indent)!==r.indent&&s(o,"BAD_INDENT",Zt);m&&Qt(l)&&s(l,"MULTILINE_IMPLICIT_KEY","Implicit keys need to be on a single line");const h=f.end,d=l?e(n,l,f,s):t(n,h,c,null,f,s);Xt(n,i.items,d)&&s(h,"DUPLICATE_KEY","Map keys must be unique");const y=Ht(u||[],{indicator:"map-value-ind",next:p,offset:d.range[2],onError:s,startOnNewline:!l||"block-scalar"===l.type});if(o=y.end,y.found){m&&("block-map"!==(null==p?void 0:p.type)||y.hasNewline||s(o,"BLOCK_AS_IMPLICIT_KEY","Nested mappings are not allowed in compact mappings"),n.options.strict&&f.start<y.found.offset-1024&&s(d.range,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit block mapping key"));const r=p?e(n,p,y,s):t(n,o,u,null,y,s);o=r.range[2],i.items.push(new _e(d,r))}else m&&s(d.range,"MISSING_CHAR","Implicit map keys need to be followed by map values"),y.comment&&(d.comment?d.comment+="\n"+y.comment:d.comment=y.comment),i.items.push(new _e(d))}return i.range=[r.offset,o,o],i}(e,t,n,s);break;case"block-seq":a=function({composeNode:e,composeEmptyNode:t},n,r,s){const a=new Je(n.schema);let i=r.offset;for(const{start:o,value:c}of r.items){const r=Ht(o,{indicator:"seq-item-ind",next:c,offset:i,onError:s,startOnNewline:!0});if(i=r.end,!r.found){if(!(r.anchor||r.tag||c)){r.comment&&(a.comment=r.comment);continue}c&&"block-seq"===c.type?s(i,"BAD_INDENT","All sequence items must start at the same column"):s(i,"MISSING_CHAR","Sequence item without - indicator")}const l=c?e(n,c,r,s):t(n,i,o,null,r,s);i=l.range[2],a.items.push(l)}return a.range=[r.offset,i,i],a}(e,t,n,s);break;case"flow-collection":a=function({composeNode:e,composeEmptyNode:t},n,r,s){const a="{"===r.start.source,i=a?"flow map":"flow sequence",o=a?new Ue(n.schema):new Je(n.schema);o.flow=!0;let c=r.offset;for(let l=0;l<r.items.length;++l){const{start:u,key:p,sep:f,value:m}=r.items[l],h=Ht(u,{flow:i,indicator:"explicit-key-ind",next:p||(null==f?void 0:f[0]),offset:c,onError:s,startOnNewline:!1});if(!h.found){if(!(h.anchor||h.tag||f||m)){0===l&&h.comma?s(h.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${i}`):l<r.items.length-1&&s(h.start,"UNEXPECTED_TOKEN",`Unexpected empty item in ${i}`),h.comment&&(o.comment?o.comment+="\n"+h.comment:o.comment=h.comment);continue}!a&&n.options.strict&&Qt(p)&&s(p,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line")}if(0===l)h.comma&&s(h.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${i}`);else if(h.comma||s(h.start,"MISSING_CHAR",`Missing , between ${i} items`),h.comment){let e="";e:for(const t of u)switch(t.type){case"comma":case"space":break;case"comment":e=t.source.substring(1);break e;default:break e}if(e){let t=o.items[o.items.length-1];Q(t)&&(t=t.value||t.key),t.comment?t.comment+="\n"+e:t.comment=e,h.comment=h.comment.substring(e.length+1)}}if(a||f||h.found){const r=h.end,l=p?e(n,p,h,s):t(n,r,u,null,h,s);nn(p)&&s(l.range,"BLOCK_IN_FLOW",tn);const d=Ht(f||[],{flow:i,indicator:"map-value-ind",next:m,offset:l.range[2],onError:s,startOnNewline:!1});if(d.found){if(!a&&!h.found&&n.options.strict){if(f)for(const e of f){if(e===d.found)break;if("newline"===e.type){s(e,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line");break}}h.start<d.found.offset-1024&&s(d.found,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit flow sequence key")}}else m&&("source"in m&&m.source&&":"===m.source[0]?s(m,"MISSING_CHAR",`Missing space after : in ${i}`):s(d.start,"MISSING_CHAR",`Missing , or : between ${i} items`));const y=m?e(n,m,d,s):d.found?t(n,d.end,f,null,d,s):null;y?nn(m)&&s(y.range,"BLOCK_IN_FLOW",tn):d.comment&&(l.comment?l.comment+="\n"+d.comment:l.comment=d.comment);const g=new _e(l,y);if(a){const e=o;Xt(n,e.items,l)&&s(r,"DUPLICATE_KEY","Map keys must be unique"),e.items.push(g)}else{const e=new Ue(n.schema);e.flow=!0,e.items.push(g),o.items.push(e)}c=y?y.range[2]:d.end}else{const r=m?e(n,m,h,s):t(n,h.end,f,null,h,s);o.items.push(r),c=r.range[2],nn(m)&&s(r.range,"BLOCK_IN_FLOW",tn)}}const l=a?"}":"]",[u,...p]=r.end;let f=c;if(u&&u.source===l?f=u.offset+u.source.length:(s(c+1,"MISSING_CHAR",`Expected ${i} to end with ${l}`),u&&1!==u.source.length&&p.unshift(u)),p.length>0){const e=en(p,f,n.options.strict,s);e.comment&&(o.comment?o.comment+="\n"+e.comment:o.comment=e.comment),o.range=[r.offset,f,e.offset]}else o.range=[r.offset,f,f];return o}(e,t,n,s)}if(!r)return a;const i=t.directives.tagName(r.source,(e=>s(r,"TAG_RESOLVE_FAILED",e)));if(!i)return a;const o=a.constructor;if("!"===i||i===o.tagName)return a.tag=o.tagName,a;const c=H(a)?"map":"seq";let l=t.schema.tags.find((e=>e.collection===c&&e.tag===i));if(!l){const e=t.schema.knownTags[i];if(!e||e.collection!==c)return s(r,"TAG_RESOLVE_FAILED",`Unresolved tag: ${i}`,!0),a.tag=i,a;t.schema.tags.push(Object.assign({},e,{default:!1})),l=e}const u=l.resolve(a,(e=>s(r,"TAG_RESOLVE_FAILED",e)),t.options),p=te(u)?u:new ge(u);return p.range=a.range,p.tag=i,(null==l?void 0:l.format)&&(p.format=l.format),p}function sn(e,t,n){const r=e.offset,s=function({offset:e,props:t},n,r){if("block-scalar-header"!==t[0].type)return r(t[0],"IMPOSSIBLE","Block scalar header not found"),null;const{source:s}=t[0],a=s[0];let i=0,o="",c=-1;for(let t=1;t<s.length;++t){const n=s[t];if(o||"-"!==n&&"+"!==n){const r=Number(n);!i&&r?i=r:-1===c&&(c=e+t)}else o=n}-1!==c&&r(c,"UNEXPECTED_TOKEN",`Block scalar header includes extra characters: ${s}`);let l=!1,u="",p=s.length;for(let e=1;e<t.length;++e){const s=t[e];switch(s.type){case"space":l=!0;case"newline":p+=s.source.length;break;case"comment":if(n&&!l){r(s,"MISSING_CHAR","Comments must be separated from other tokens by white space characters")}p+=s.source.length,u=s.source.substring(1);break;case"error":r(s,"UNEXPECTED_TOKEN",s.message),p+=s.source.length;break;default:{r(s,"UNEXPECTED_TOKEN",`Unexpected token in block scalar header: ${s.type}`);const e=s.source;e&&"string"==typeof e&&(p+=e.length)}}}return{mode:a,indent:i,chomp:o,comment:u,length:p}}(e,t,n);if(!s)return{value:"",type:null,comment:"",range:[r,r,r]};const a=">"===s.mode?ge.BLOCK_FOLDED:ge.BLOCK_LITERAL,i=e.source?function(e){const t=e.split(/\n( *)/),n=t[0],r=n.match(/^( *)/),s=[r&&r[1]?[r[1],n.slice(r[1].length)]:["",n]];for(let e=1;e<t.length;e+=2)s.push([t[e],t[e+1]]);return s}(e.source):[];let o=i.length;for(let e=i.length-1;e>=0;--e){const t=i[e][1];if(""!==t&&"\r"!==t)break;o=e}if(!e.source||0===o){const t="+"===s.chomp?i.map((e=>e[0])).join("\n"):"";let n=r+s.length;return e.source&&(n+=e.source.length),{value:t,type:a,comment:s.comment,range:[r,n,n]}}let c=e.indent+s.indent,l=e.offset+s.length,u=0;for(let e=0;e<o;++e){const[t,r]=i[e];if(""!==r&&"\r"!==r){if(t.length<c){const e="Block scalars with more-indented leading empty lines must use an explicit indentation indicator";n(l+t.length,"MISSING_CHAR",e)}0===s.indent&&(c=t.length),u=e;break}0===s.indent&&t.length>c&&(c=t.length),l+=t.length+r.length+1}let p="",f="",m=!1;for(let e=0;e<u;++e)p+=i[e][0].slice(c)+"\n";for(let e=u;e<o;++e){let[t,r]=i[e];l+=t.length+r.length+1;const o="\r"===r[r.length-1];if(o&&(r=r.slice(0,-1)),r&&t.length<c){const e=`Block scalar lines must not be less indented than their ${s.indent?"explicit indentation indicator":"first line"}`;n(l-r.length-(o?2:1),"BAD_INDENT",e),t=""}a===ge.BLOCK_LITERAL?(p+=f+t.slice(c)+r,f="\n"):t.length>c||"\t"===r[0]?(" "===f?f="\n":m||"\n"!==f||(f="\n\n"),p+=f+t.slice(c)+r,f="\n",m=!0):""===r?"\n"===f?p+="\n":f="\n":(p+=f+r,f=" ",m=!1)}switch(s.chomp){case"-":break;case"+":for(let e=o;e<i.length;++e)p+="\n"+i[e][0].slice(c);"\n"!==p[p.length-1]&&(p+="\n");break;default:p+="\n"}const h=r+s.length+e.source.length;return{value:p,type:a,comment:s.comment,range:[r,h,h]}}function an(e,t,n){const{offset:r,type:s,source:a,end:i}=e;let o,c;const l=(e,t,s)=>n(r+e,t,s);switch(s){case"scalar":o=ge.PLAIN,c=function(e,t){let n="";switch(e[0]){case"\t":n="Plain value cannot start with a tab character";break;case"|":case">":n=`Plain value cannot start with block scalar indicator ${e[0]}`;break;case"@":case"`":n=`Plain value cannot start with reserved character ${e[0]}`}n&&t(0,"BAD_SCALAR_START",n);return on(e)}(a,l);break;case"single-quoted-scalar":o=ge.QUOTE_SINGLE,c=function(e,t){"'"===e[e.length-1]&&1!==e.length||t(e.length,"MISSING_CHAR","Missing closing 'quote");return on(e.slice(1,-1)).replace(/''/g,"'")}(a,l);break;case"double-quoted-scalar":o=ge.QUOTE_DOUBLE,c=function(e,t){let n="";for(let r=1;r<e.length-1;++r){const s=e[r];if("\r"!==s||"\n"!==e[r+1])if("\n"===s){const{fold:t,offset:s}=cn(e,r);n+=t,r=s}else if("\\"===s){let s=e[++r];const a=ln[s];if(a)n+=a;else if("\n"===s)for(s=e[r+1];" "===s||"\t"===s;)s=e[1+ ++r];else if("x"===s||"u"===s||"U"===s){const a={x:2,u:4,U:8}[s];n+=un(e,r+1,a,t),r+=a}else{const s=e.substr(r-1,2);t(r-1,"BAD_DQ_ESCAPE",`Invalid escape sequence ${s}`),n+=s}}else if(" "===s||"\t"===s){const t=r;let a=e[r+1];for(;" "===a||"\t"===a;)a=e[1+ ++r];"\n"!==a&&(n+=r>t?e.slice(t,r+1):s)}else n+=s}'"'===e[e.length-1]&&1!==e.length||t(e.length,"MISSING_CHAR",'Missing closing "quote');return n}(a,l);break;default:return n(e,"UNEXPECTED_TOKEN",`Expected a flow scalar value, but found: ${s}`),{value:"",type:null,comment:"",range:[r,r+a.length,r+a.length]}}const u=r+a.length,p=en(i,u,t,n);return{value:c,type:o,comment:p.comment,range:[r,u,p.offset]}}function on(e){let t,n;try{t=new RegExp("(.*?)(?<![ \t])[ \t]*\r?\n","sy"),n=new RegExp("[ \t]*(.*?)(?:(?<![ \t])[ \t]*)?\r?\n","sy")}catch(e){t=/(.*?)[ \t]*\r?\n/ys,n=/[ \t]*(.*?)[ \t]*\r?\n/ys}let r=t.exec(e);if(!r)return e;let s=r[1],a=" ",i=t.lastIndex;for(n.lastIndex=i;r=n.exec(e);)""===r[1]?"\n"===a?s+=a:a="\n":(s+=a+r[1],a=" "),i=n.lastIndex;const o=/[ \t]*(.*)/ys;return o.lastIndex=i,r=o.exec(e),s+a+(r&&r[1]||"")}function cn(e,t){let n="",r=e[t+1];for(;!(" "!==r&&"\t"!==r&&"\n"!==r&&"\r"!==r||"\r"===r&&"\n"!==e[t+2]);)"\n"===r&&(n+="\n"),r=e[(t+=1)+1];return n||(n=" "),{fold:n,offset:t}}const ln={0:"\0",a:"",b:"\b",e:"",f:"\f",n:"\n",r:"\r",t:"\t",v:"\v",N:"",_:" ",L:"\u2028",P:"\u2029"," ":" ",'"':'"',"/":"/","\\":"\\","\t":"\t"};function un(e,t,n,r){const s=e.substr(t,n),a=s.length===n&&/^[0-9a-fA-F]+$/.test(s)?parseInt(s,16):NaN;if(isNaN(a)){const s=e.substr(t-2,n+2);return r(t-2,"BAD_DQ_ESCAPE",`Invalid escape sequence ${s}`),s}return String.fromCodePoint(a)}function pn(e,t,n,r){const{value:s,type:a,comment:i,range:o}="block-scalar"===t.type?sn(t,e.options.strict,r):an(t,e.options.strict,r),c=n?e.directives.tagName(n.source,(e=>r(n,"TAG_RESOLVE_FAILED",e))):null,l=n&&c?function(e,t,n,r,s){var a;if("!"===n)return e[J];const i=[];for(const t of e.tags)if(!t.collection&&t.tag===n){if(!t.default||!t.test)return t;i.push(t)}for(const e of i)if(null===(a=e.test)||void 0===a?void 0:a.test(t))return e;const o=e.knownTags[n];if(o&&!o.collection)return e.tags.push(Object.assign({},o,{default:!1,test:void 0})),o;return s(r,"TAG_RESOLVE_FAILED",`Unresolved tag: ${n}`,"tag:yaml.org,2002:str"!==n),e[J]}(e.schema,s,c,n,r):function(e,t,n){var r;if(n)for(const n of e.tags)if(n.default&&(null===(r=n.test)||void 0===r?void 0:r.test(t)))return n;return e[J]}(e.schema,s,"scalar"===t.type);let u;try{const a=l.resolve(s,(e=>r(n||t,"TAG_RESOLVE_FAILED",e)),e.options);u=X(a)?a:new ge(a)}catch(e){r(n||t,"TAG_RESOLVE_FAILED",e.message),u=new ge(s)}return u.range=o,u.source=s,a&&(u.type=a),c&&(u.tag=c),l.format&&(u.format=l.format),i&&(u.comment=i),u}function fn(e,t,n){if(t){null===n&&(n=t.length);for(let r=n-1;r>=0;--r){let n=t[r];switch(n.type){case"space":case"comment":case"newline":e-=n.source.length;continue}for(n=t[++r];"space"===(null==n?void 0:n.type);)e+=n.source.length,n=t[++r];break}}return e}const mn={composeNode:hn,composeEmptyNode:dn};function hn(e,t,n,r){const{spaceBefore:s,comment:a,anchor:i,tag:o}=n;let c;switch(t.type){case"alias":c=function({options:e},{offset:t,source:n,end:r},s){const a=new me(n.substring(1)),i=t+n.length,o=en(r,i,e.strict,s);a.range=[t,i,o.offset],o.comment&&(a.comment=o.comment);return a}(e,t,r),(i||o)&&r(t,"ALIAS_PROPS","An alias node must not specify any properties");break;case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"block-scalar":c=pn(e,t,o,r),i&&(c.anchor=i.source.substring(1));break;case"block-map":case"block-seq":case"flow-collection":c=rn(mn,e,t,o,r),i&&(c.anchor=i.source.substring(1));break;default:throw console.log(t),new Error(`Unsupporten token type: ${t.type}`)}return s&&(c.spaceBefore=!0),a&&("scalar"===t.type&&""===t.source?c.comment=a:c.commentBefore=a),c}function dn(e,t,n,r,{spaceBefore:s,comment:a,anchor:i,tag:o},c){const l=pn(e,{type:"scalar",offset:fn(t,n,r),indent:-1,source:""},o,c);return i&&(l.anchor=i.source.substring(1)),s&&(l.spaceBefore=!0),a&&(l.comment=a),l}function yn(e){if("number"==typeof e)return[e,e+1];if(Array.isArray(e))return 2===e.length?e:[e[0],e[1]];const{offset:t,source:n}=e;return[t,t+("string"==typeof n?n.length:1)]}function gn(e){let t="",n=!1,r=!1;for(let s=0;s<e.length;++s){const a=e[s];switch(a[0]){case"#":t+=(""===t?"":r?"\n\n":"\n")+(a.substring(1)||" "),n=!0,r=!1;break;case"%":"#"!==e[s+1][0]&&(s+=1),n=!1;break;default:n||(r=!0),n=!1}}return{comment:t,afterEmptyLine:r}}class vn{constructor(e={}){this.doc=null,this.atDirectives=!1,this.prelude=[],this.errors=[],this.warnings=[],this.onError=(e,t,n,r)=>{const s=yn(e);r?this.warnings.push(new Wt(s,t,n)):this.errors.push(new zt(s,t,n))},this.directives=new le({version:e.version||Be.version}),this.options=e}decorate(e,t){const{comment:n,afterEmptyLine:r}=gn(this.prelude);if(n){const s=e.contents;if(t)e.comment=e.comment?`${e.comment}\n${n}`:n;else if(r||e.directives.marker||!s)e.commentBefore=n;else if(ee(s)&&!s.flow&&s.items.length>0){let e=s.items[0];Q(e)&&(e=e.key);const t=e.commentBefore;e.commentBefore=t?`${n}\n${t}`:n}else{const e=s.commentBefore;s.commentBefore=e?`${n}\n${e}`:n}}t?(Array.prototype.push.apply(e.errors,this.errors),Array.prototype.push.apply(e.warnings,this.warnings)):(e.errors=this.errors,e.warnings=this.warnings),this.prelude=[],this.errors=[],this.warnings=[]}streamInfo(){return{comment:gn(this.prelude).comment,directives:this.directives,errors:this.errors,warnings:this.warnings}}*compose(e,t=!1,n=-1){for(const t of e)yield*this.next(t);yield*this.end(t,n)}*next(e){switch(e.type){case"directive":this.directives.add(e.source,((t,n,r)=>{const s=yn(e);s[0]+=t,this.onError(s,"BAD_DIRECTIVE",n,r)})),this.prelude.push(e.source),this.atDirectives=!0;break;case"document":{const t=function(e,t,{offset:n,start:r,value:s,end:a},i){const o=Object.assign({directives:t},e),c=new Ft(void 0,o),l={directives:c.directives,options:c.options,schema:c.schema},u=Ht(r,{indicator:"doc-start",next:s||(null==a?void 0:a[0]),offset:n,onError:i,startOnNewline:!0});u.found&&(c.directives.marker=!0,!s||"block-map"!==s.type&&"block-seq"!==s.type||u.hasNewline||i(u.end,"MISSING_CHAR","Block collection cannot start on same line with directives-end marker")),c.contents=s?hn(l,s,u,i):dn(l,u.end,r,null,u,i);const p=c.contents.range[2],f=en(a,p,!1,i);return f.comment&&(c.comment=f.comment),c.range=[n,p,f.offset],c}(this.options,this.directives,e,this.onError);this.atDirectives&&!t.directives.marker&&this.onError(e,"MISSING_CHAR","Missing directives-end indicator line"),this.decorate(t,!1),this.doc&&(yield this.doc),this.doc=t,this.atDirectives=!1;break}case"byte-order-mark":case"space":break;case"comment":case"newline":this.prelude.push(e.source);break;case"error":{const t=e.source?`${e.message}: ${JSON.stringify(e.source)}`:e.message,n=new zt(yn(e),"UNEXPECTED_TOKEN",t);this.atDirectives||!this.doc?this.errors.push(n):this.doc.errors.push(n);break}case"doc-end":{if(!this.doc){const t="Unexpected doc-end without preceding document";this.errors.push(new zt(yn(e),"UNEXPECTED_TOKEN",t));break}const t=en(e.end,e.offset+e.source.length,this.doc.options.strict,this.onError);if(this.decorate(this.doc,!0),t.comment){const e=this.doc.comment;this.doc.comment=e?`${e}\n${t.comment}`:t.comment}this.doc.range[2]=t.offset;break}default:this.errors.push(new zt(yn(e),"UNEXPECTED_TOKEN",`Unsupported token ${e.type}`))}}*end(e=!1,t=-1){if(this.doc)this.decorate(this.doc,!0),yield this.doc,this.doc=null;else if(e){const e=Object.assign({directives:this.directives},this.options),n=new Ft(void 0,e);this.atDirectives&&this.onError(t,"MISSING_CHAR","Missing directives-end indicator line"),n.range=[0,t,t],this.decorate(n,!1),yield n}}}function bn(e,t){if(t)for(const n of t)switch(n.type){case"space":case"comment":e.push(n);break;case"newline":return e.push(n),!0}return!1}function $n(e,t,n){switch(e.type){case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":e.type=n,e.source=t;break;case"block-scalar":{const r=e.props.slice(1);let s=t.length;"block-scalar-header"===e.props[0].type&&(s-=e.props[0].source.length);for(const e of r)e.offset+=s;delete e.props,Object.assign(e,{type:n,source:t,end:r});break}case"block-map":case"block-seq":{const r={type:"newline",offset:e.offset+t.length,indent:e.indent,source:"\n"};delete e.items,Object.assign(e,{type:n,source:t,end:[r]});break}default:{const r="indent"in e?e.indent:-1,s="end"in e&&Array.isArray(e.end)?e.end.filter((e=>"space"===e.type||"comment"===e.type||"newline"===e.type)):[];for(const t of Object.keys(e))"type"!==t&&"offset"!==t&&delete e[t];Object.assign(e,{type:n,indent:r,source:t,end:s})}}}function wn(e){switch(e.type){case"block-scalar":{let t="";for(const n of e.props)t+=wn(n);return t+e.source}case"block-map":case"block-seq":{let t="";for(const n of e.items)t+=Sn(n);return t}case"flow-collection":{let t=e.start.source;for(const n of e.items)t+=Sn(n);for(const n of e.end)t+=n.source;return t}case"document":{let t=Sn(e);if(e.end)for(const n of e.end)t+=n.source;return t}default:{let t=e.source;if("end"in e&&e.end)for(const n of e.end)t+=n.source;return t}}}function Sn({start:e,key:t,sep:n,value:r}){let s="";for(const t of e)s+=t.source;if(t&&(s+=wn(t)),n)for(const e of n)s+=e.source;return r&&(s+=wn(r)),s}const On=Symbol("break visit"),En=Symbol("skip children"),kn=Symbol("remove item");function In(e,t){"type"in e&&"document"===e.type&&(e={start:e.start,value:e.value}),xn(Object.freeze([]),e,t)}function xn(e,t,n){let r=n(t,e);if("symbol"==typeof r)return r;for(const s of["key","value"]){const a=t[s];if(a&&"items"in a){for(let t=0;t<a.items.length;++t){const r=xn(Object.freeze(e.concat([[s,t]])),a.items[t],n);if("number"==typeof r)t=r-1;else{if(r===On)return On;r===kn&&(a.items.splice(t,1),t-=1)}}"function"==typeof r&&"key"===s&&(r=r(t,e))}}return"function"==typeof r?r(t,e):r}In.BREAK=On,In.SKIP=En,In.REMOVE=kn,In.itemAtPath=(e,t)=>{let n=e;for(const[e,r]of t){const t=n&&n[e];if(!t||!("items"in t))return;n=t.items[r]}return n},In.parentCollection=(e,t)=>{const n=In.itemAtPath(e,t.slice(0,-1)),r=t[t.length-1][0],s=n&&n[r];if(s&&"items"in s)return s;throw new Error("Parent collection not found")};function jn(e){switch(e){case"\ufeff":return"byte-order-mark";case"":return"doc-mode";case"":return"flow-error-end";case"":return"scalar";case"---":return"doc-start";case"...":return"doc-end";case"":case"\n":case"\r\n":return"newline";case"-":return"seq-item-ind";case"?":return"explicit-key-ind";case":":return"map-value-ind";case"{":return"flow-map-start";case"}":return"flow-map-end";case"[":return"flow-seq-start";case"]":return"flow-seq-end";case",":return"comma"}switch(e[0]){case" ":case"\t":return"space";case"#":return"comment";case"%":return"directive-line";case"*":return"alias";case"&":return"anchor";case"!":return"tag";case"'":return"single-quoted-scalar";case'"':return"double-quoted-scalar";case"|":case">":return"block-scalar-header"}return null}var Nn=Object.freeze({__proto__:null,BOM:"\ufeff",DOCUMENT:"",FLOW_END:"",SCALAR:"",isCollection:e=>!!e&&"items"in e,isScalar:e=>!!e&&("scalar"===e.type||"single-quoted-scalar"===e.type||"double-quoted-scalar"===e.type||"block-scalar"===e.type),prettyToken:function(e){switch(e){case"\ufeff":return"<BOM>";case"":return"<DOC>";case"":return"<FLOW_END>";case"":return"<SCALAR>";default:return JSON.stringify(e)}},tokenType:jn,createScalarToken:function(e,t){var n;const{implicitKey:r=!1,indent:s,inFlow:a=!1,offset:i=-1,type:o="PLAIN"}=t,c=Ne({type:o,value:e},{implicitKey:r,indent:s>0?" ".repeat(s):"",inFlow:a,options:{lineWidth:-1}}),l=null!==(n=t.end)&&void 0!==n?n:[{type:"newline",offset:-1,indent:s,source:"\n"}];switch(c[0]){case"|":case">":{const e=c.indexOf("\n"),t=c.substring(0,e),n=c.substring(e+1)+"\n",r=[{type:"block-scalar-header",offset:i,indent:s,source:t}];return bn(r,l)||r.push({type:"newline",offset:-1,indent:s,source:"\n"}),{type:"block-scalar",offset:i,indent:s,props:r,source:n}}case'"':return{type:"double-quoted-scalar",offset:i,indent:s,source:c,end:l};case"'":return{type:"single-quoted-scalar",offset:i,indent:s,source:c,end:l};default:return{type:"scalar",offset:i,indent:s,source:c,end:l}}},resolveAsScalar:function(e,t=!0,n){if(e){const r=(e,t,r)=>{const s="number"==typeof e?e:Array.isArray(e)?e[0]:e.offset;if(!n)throw new zt([s,s+1],t,r);n(s,t,r)};switch(e.type){case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return an(e,t,r);case"block-scalar":return sn(e,t,r)}}return null},setScalarValue:function(e,t,n={}){let{afterKey:r=!1,implicitKey:s=!1,inFlow:a=!1,type:i}=n,o="indent"in e?e.indent:null;if(r&&"number"==typeof o&&(o+=2),!i)switch(e.type){case"single-quoted-scalar":i="QUOTE_SINGLE";break;case"double-quoted-scalar":i="QUOTE_DOUBLE";break;case"block-scalar":{const t=e.props[0];if("block-scalar-header"!==t.type)throw new Error("Invalid block scalar header");i=">"===t.source[0]?"BLOCK_FOLDED":"BLOCK_LITERAL";break}default:i="PLAIN"}const c=Ne({type:i,value:t},{implicitKey:s||null===o,indent:null!==o&&o>0?" ".repeat(o):"",inFlow:a,options:{lineWidth:-1}});switch(c[0]){case"|":case">":!function(e,t){const n=t.indexOf("\n"),r=t.substring(0,n),s=t.substring(n+1)+"\n";if("block-scalar"===e.type){const t=e.props[0];if("block-scalar-header"!==t.type)throw new Error("Invalid block scalar header");t.source=r,e.source=s}else{const{offset:t}=e,n="indent"in e?e.indent:-1,a=[{type:"block-scalar-header",offset:t,indent:n,source:r}];bn(a,"end"in e?e.end:void 0)||a.push({type:"newline",offset:-1,indent:n,source:"\n"});for(const t of Object.keys(e))"type"!==t&&"offset"!==t&&delete e[t];Object.assign(e,{type:"block-scalar",indent:n,props:a,source:s})}}(e,c);break;case'"':$n(e,c,"double-quoted-scalar");break;case"'":$n(e,c,"single-quoted-scalar");break;default:$n(e,c,"scalar")}},stringify:e=>"type"in e?wn(e):Sn(e),visit:In});function An(e){switch(e){case void 0:case" ":case"\n":case"\r":case"\t":return!0;default:return!1}}const Tn=[",","[","]","{","}"],Cn=[" ",",","[","]","{","}","\n","\r","\t"],Pn=e=>!e||Cn.includes(e);class Ln{constructor(){this.atEnd=!1,this.blockScalarIndent=-1,this.blockScalarKeep=!1,this.buffer="",this.flowKey=!1,this.flowLevel=0,this.indentNext=0,this.indentValue=0,this.next=null,this.pos=0}*lex(e,t=!1){e&&(this.buffer=this.buffer?this.buffer+e:e),this.atEnd=!t;let n=this.next||"stream";for(;n&&(t||this.hasChars(1));)n=yield*this.parseNext(n)}atLineEnd(){let e=this.pos,t=this.buffer[e];for(;" "===t||"\t"===t;)t=this.buffer[++e];return!t||"#"===t||"\n"===t||"\r"===t&&"\n"===this.buffer[e+1]}charAt(e){return this.buffer[this.pos+e]}continueScalar(e){let t=this.buffer[e];if(this.indentNext>0){let n=0;for(;" "===t;)t=this.buffer[++n+e];if("\r"===t){const t=this.buffer[n+e+1];if("\n"===t||!t&&!this.atEnd)return e+n+1}return"\n"===t||n>=this.indentNext||!t&&!this.atEnd?e+n:-1}if("-"===t||"."===t){const t=this.buffer.substr(e,3);if(("---"===t||"..."===t)&&An(this.buffer[e+3]))return-1}return e}getLine(){let e=this.buffer.indexOf("\n",this.pos);return-1===e?this.atEnd?this.buffer.substring(this.pos):null:("\r"===this.buffer[e-1]&&(e-=1),this.buffer.substring(this.pos,e))}hasChars(e){return this.pos+e<=this.buffer.length}setNext(e){return this.buffer=this.buffer.substring(this.pos),this.pos=0,this.next=e,null}peek(e){return this.buffer.substr(this.pos,e)}*parseNext(e){switch(e){case"stream":return yield*this.parseStream();case"line-start":return yield*this.parseLineStart();case"block-start":return yield*this.parseBlockStart();case"doc":return yield*this.parseDocument();case"flow":return yield*this.parseFlowCollection();case"quoted-scalar":return yield*this.parseQuotedScalar();case"block-scalar":return yield*this.parseBlockScalar();case"plain-scalar":return yield*this.parsePlainScalar()}}*parseStream(){let e=this.getLine();if(null===e)return this.setNext("stream");if("\ufeff"===e[0]&&(yield*this.pushCount(1),e=e.substring(1)),"%"===e[0]){let t=e.length;const n=e.indexOf("#");if(-1!==n){const r=e[n-1];" "!==r&&"\t"!==r||(t=n-1)}for(;;){const n=e[t-1];if(" "!==n&&"\t"!==n)break;t-=1}const r=(yield*this.pushCount(t))+(yield*this.pushSpaces(!0));return yield*this.pushCount(e.length-r),this.pushNewline(),"stream"}if(this.atLineEnd()){const t=yield*this.pushSpaces(!0);return yield*this.pushCount(e.length-t),yield*this.pushNewline(),"stream"}return yield"",yield*this.parseLineStart()}*parseLineStart(){const e=this.charAt(0);if(!e&&!this.atEnd)return this.setNext("line-start");if("-"===e||"."===e){if(!this.atEnd&&!this.hasChars(4))return this.setNext("line-start");const e=this.peek(3);if("---"===e&&An(this.charAt(3)))return yield*this.pushCount(3),this.indentValue=0,this.indentNext=0,"doc";if("..."===e&&An(this.charAt(3)))return yield*this.pushCount(3),"stream"}return this.indentValue=yield*this.pushSpaces(!1),this.indentNext>this.indentValue&&!An(this.charAt(1))&&(this.indentNext=this.indentValue),yield*this.parseBlockStart()}*parseBlockStart(){const[e,t]=this.peek(2);if(!t&&!this.atEnd)return this.setNext("block-start");if(("-"===e||"?"===e||":"===e)&&An(t)){const e=(yield*this.pushCount(1))+(yield*this.pushSpaces(!0));return this.indentNext=this.indentValue+1,this.indentValue+=e,yield*this.parseBlockStart()}return"doc"}*parseDocument(){yield*this.pushSpaces(!0);const e=this.getLine();if(null===e)return this.setNext("doc");let t=yield*this.pushIndicators();switch(e[t]){case"#":yield*this.pushCount(e.length-t);case void 0:return yield*this.pushNewline(),yield*this.parseLineStart();case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel=1,"flow";case"}":case"]":return yield*this.pushCount(1),"doc";case"*":return yield*this.pushUntil(Pn),"doc";case'"':case"'":return yield*this.parseQuotedScalar();case"|":case">":return t+=(yield*this.parseBlockScalarHeader()),t+=(yield*this.pushSpaces(!0)),yield*this.pushCount(e.length-t),yield*this.pushNewline(),yield*this.parseBlockScalar();default:return yield*this.parsePlainScalar()}}*parseFlowCollection(){let e,t,n=-1;do{e=yield*this.pushNewline(),t=yield*this.pushSpaces(!0),e>0&&(this.indentValue=n=t)}while(e+t>0);const r=this.getLine();if(null===r)return this.setNext("flow");if(-1!==n&&n<this.indentNext||0===n&&(r.startsWith("---")||r.startsWith("..."))&&An(r[3])){if(!(n===this.indentNext-1&&1===this.flowLevel&&("]"===r[0]||"}"===r[0])))return this.flowLevel=0,yield"",yield*this.parseLineStart()}let s=0;for(;","===r[s];)s+=(yield*this.pushCount(1))+(yield*this.pushSpaces(!0));switch(s+=(yield*this.pushIndicators()),r[s]){case void 0:return"flow";case"#":return yield*this.pushCount(r.length-s),"flow";case"{":case"[":return yield*this.pushCount(1),this.flowKey=!1,this.flowLevel+=1,"flow";case"}":case"]":return yield*this.pushCount(1),this.flowKey=!0,this.flowLevel-=1,this.flowLevel?"flow":"doc";case"*":return yield*this.pushUntil(Pn),"flow";case'"':case"'":return this.flowKey=!0,yield*this.parseQuotedScalar();case":":{const e=this.charAt(1);if(this.flowKey||An(e)||","===e)return yield*this.pushCount(1),yield*this.pushSpaces(!0),"flow"}default:return this.flowKey=!1,yield*this.parsePlainScalar()}}*parseQuotedScalar(){const e=this.charAt(0);let t=this.buffer.indexOf(e,this.pos+1);if("'"===e)for(;-1!==t&&"'"===this.buffer[t+1];)t=this.buffer.indexOf("'",t+2);else for(;-1!==t;){let e=0;for(;"\\"===this.buffer[t-1-e];)e+=1;if(e%2==0)break;t=this.buffer.indexOf('"',t+1)}let n=this.buffer.indexOf("\n",this.pos);if(-1!==n&&n<t){for(;-1!==n&&n<t;){const e=this.continueScalar(n+1);if(-1===e)break;n=this.buffer.indexOf("\n",e)}-1!==n&&n<t&&(t=n-1)}if(-1===t){if(!this.atEnd)return this.setNext("quoted-scalar");t=this.buffer.length}return yield*this.pushToIndex(t+1,!1),this.flowLevel?"flow":"doc"}*parseBlockScalarHeader(){this.blockScalarIndent=-1,this.blockScalarKeep=!1;let e=this.pos;for(;;){const t=this.buffer[++e];if("+"===t)this.blockScalarKeep=!0;else if(t>"0"&&t<="9")this.blockScalarIndent=Number(t)-1;else if("-"!==t)break}return yield*this.pushUntil((e=>An(e)||"#"===e))}*parseBlockScalar(){let e,t=this.pos-1,n=0;e:for(let r=this.pos;e=this.buffer[r];++r)switch(e){case" ":n+=1;break;case"\n":t=r,n=0;break;case"\r":{const e=this.buffer[r+1];if(!e&&!this.atEnd)return this.setNext("block-scalar");if("\n"===e)break}default:break e}if(!e&&!this.atEnd)return this.setNext("block-scalar");if(n>=this.indentNext){-1===this.blockScalarIndent?this.indentNext=n:this.indentNext+=this.blockScalarIndent;do{const e=this.continueScalar(t+1);if(-1===e)break;t=this.buffer.indexOf("\n",e)}while(-1!==t);if(-1===t){if(!this.atEnd)return this.setNext("block-scalar");t=this.buffer.length}}if(!this.blockScalarKeep)for(;;){let e=t-1,n=this.buffer[e];for("\r"===n&&(n=this.buffer[--e]);" "===n||"\t"===n;)n=this.buffer[--e];if(!("\n"===n&&e>=this.pos))break;t=e}return yield"",yield*this.pushToIndex(t+1,!0),yield*this.parseLineStart()}*parsePlainScalar(){const e=this.flowLevel>0;let t,n=this.pos-1,r=this.pos-1;for(;t=this.buffer[++r];)if(":"===t){const t=this.buffer[r+1];if(An(t)||e&&","===t)break;n=r}else if(An(t)){const s=this.buffer[r+1];if("#"===s||e&&Tn.includes(s))break;if("\r"===t&&("\n"===s?(r+=1,t="\n"):n=r),"\n"===t){const e=this.continueScalar(r+1);if(-1===e)break;r=Math.max(r,e-2)}}else{if(e&&Tn.includes(t))break;n=r}return t||this.atEnd?(yield"",yield*this.pushToIndex(n+1,!0),e?"flow":"doc"):this.setNext("plain-scalar")}*pushCount(e){return e>0?(yield this.buffer.substr(this.pos,e),this.pos+=e,e):0}*pushToIndex(e,t){const n=this.buffer.slice(this.pos,e);return n?(yield n,this.pos+=n.length,n.length):(t&&(yield""),0)}*pushIndicators(){switch(this.charAt(0)){case"!":if("<"===this.charAt(1))return(yield*this.pushVerbatimTag())+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case"&":return(yield*this.pushUntil(Pn))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators());case":":case"?":case"-":if(An(this.charAt(1)))return 0===this.flowLevel&&(this.indentNext=this.indentValue+1),(yield*this.pushCount(1))+(yield*this.pushSpaces(!0))+(yield*this.pushIndicators())}return 0}*pushVerbatimTag(){let e=this.pos+2,t=this.buffer[e];for(;!An(t)&&">"!==t;)t=this.buffer[++e];return yield*this.pushToIndex(">"===t?e+1:e,!1)}*pushNewline(){const e=this.buffer[this.pos];return"\n"===e?yield*this.pushCount(1):"\r"===e&&"\n"===this.charAt(1)?yield*this.pushCount(2):0}*pushSpaces(e){let t,n=this.pos-1;do{t=this.buffer[++n]}while(" "===t||e&&"\t"===t);const r=n-this.pos;return r>0&&(yield this.buffer.substr(this.pos,r),this.pos=n),r}*pushUntil(e){let t=this.pos,n=this.buffer[t];for(;!e(n);)n=this.buffer[++t];return yield*this.pushToIndex(t,!1)}}class Rn{constructor(){this.lineStarts=[],this.addNewLine=e=>this.lineStarts.push(e),this.linePos=e=>{let t=0,n=this.lineStarts.length;for(;t<n;){const r=t+n>>1;this.lineStarts[r]<e?t=r+1:n=r}if(this.lineStarts[t]===e)return{line:t+1,col:1};if(0===t)return{line:0,col:e};return{line:t,col:e-this.lineStarts[t-1]+1}}}}function Dn(e,t){for(let n=0;n<e.length;++n)if(e[n].type===t)return!0;return!1}function Mn(e){for(let t=0;t<e.length;++t)switch(e[t].type){case"space":case"comment":case"newline":break;default:return!0}return!1}function qn(e){switch(null==e?void 0:e.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"flow-collection":return!0;default:return!1}}function _n(e){switch(e.type){case"document":return e.start;case"block-map":{const t=e.items[e.items.length-1];return t.sep||t.start}case"block-seq":return e.items[e.items.length-1].start;default:return[]}}function Bn(e){var t;if(0===e.length)return[];let n=e.length;e:for(;--n>=0;)switch(e[n].type){case"doc-start":case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":case"newline":break e}for(;"space"===(null===(t=e[++n])||void 0===t?void 0:t.type););return e.splice(n,e.length)}function Vn(e){if("flow-seq-start"===e.start.type)for(const t of e.items)!t.sep||t.value||Dn(t.start,"explicit-key-ind")||Dn(t.sep,"map-value-ind")||(t.key&&(t.value=t.key),delete t.key,qn(t.value)?t.value.end?Array.prototype.push.apply(t.value.end,t.sep):t.value.end=t.sep:Array.prototype.push.apply(t.start,t.sep),delete t.sep)}class Kn{constructor(e){this.atNewLine=!0,this.atScalar=!1,this.indent=0,this.offset=0,this.onKeyLine=!1,this.stack=[],this.source="",this.type="",this.lexer=new Ln,this.onNewLine=e}*parse(e,t=!1){this.onNewLine&&0===this.offset&&this.onNewLine(0);for(const n of this.lexer.lex(e,t))yield*this.next(n);t||(yield*this.end())}*next(e){if(this.source=e,this.atScalar)return this.atScalar=!1,yield*this.step(),void(this.offset+=e.length);const t=jn(e);if(t)if("scalar"===t)this.atNewLine=!1,this.atScalar=!0,this.type="scalar";else{switch(this.type=t,yield*this.step(),t){case"newline":this.atNewLine=!0,this.indent=0,this.onNewLine&&this.onNewLine(this.offset+e.length);break;case"space":this.atNewLine&&" "===e[0]&&(this.indent+=e.length);break;case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":this.atNewLine&&(this.indent+=e.length);break;case"doc-mode":return;default:this.atNewLine=!1}this.offset+=e.length}else{const t=`Not a YAML token: ${e}`;yield*this.pop({type:"error",offset:this.offset,message:t,source:e}),this.offset+=e.length}}*end(){for(;this.stack.length>0;)yield*this.pop()}get sourceToken(){return{type:this.type,offset:this.offset,indent:this.indent,source:this.source}}*step(){const e=this.peek(1);if("doc-end"!==this.type||e&&"doc-end"===e.type){if(!e)return yield*this.stream();switch(e.type){case"document":return yield*this.document(e);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return yield*this.scalar(e);case"block-scalar":return yield*this.blockScalar(e);case"block-map":return yield*this.blockMap(e);case"block-seq":return yield*this.blockSequence(e);case"flow-collection":return yield*this.flowCollection(e);case"doc-end":return yield*this.documentEnd(e)}yield*this.pop()}else{for(;this.stack.length>0;)yield*this.pop();this.stack.push({type:"doc-end",offset:this.offset,source:this.source})}}peek(e){return this.stack[this.stack.length-e]}*pop(e){const t=e||this.stack.pop();if(t)if(0===this.stack.length)yield t;else{const e=this.peek(1);switch("block-scalar"!==t.type&&"flow-collection"!==t.type||(t.indent="indent"in e?e.indent:-1),"flow-collection"===t.type&&Vn(t),e.type){case"document":e.value=t;break;case"block-scalar":e.props.push(t);break;case"block-map":{const n=e.items[e.items.length-1];if(n.value)return e.items.push({start:[],key:t,sep:[]}),void(this.onKeyLine=!0);if(!n.sep)return Object.assign(n,{key:t,sep:[]}),void(this.onKeyLine=!Dn(n.start,"explicit-key-ind"));n.value=t;break}case"block-seq":{const n=e.items[e.items.length-1];n.value?e.items.push({start:[],value:t}):n.value=t;break}case"flow-collection":{const n=e.items[e.items.length-1];return void(!n||n.value?e.items.push({start:[],key:t,sep:[]}):n.sep?n.value=t:Object.assign(n,{key:t,sep:[]}))}default:yield*this.pop(),yield*this.pop(t)}if(!("document"!==e.type&&"block-map"!==e.type&&"block-seq"!==e.type||"block-map"!==t.type&&"block-seq"!==t.type)){const n=t.items[t.items.length-1];n&&!n.sep&&!n.value&&n.start.length>0&&!Mn(n.start)&&(0===t.indent||n.start.every((e=>"comment"!==e.type||e.indent<t.indent)))&&("document"===e.type?e.end=n.start:e.items.push({start:n.start}),t.items.splice(-1,1))}}else{const e="Tried to pop an empty stack";yield{type:"error",offset:this.offset,source:"",message:e}}}*stream(){switch(this.type){case"directive-line":return void(yield{type:"directive",offset:this.offset,source:this.source});case"byte-order-mark":case"space":case"comment":case"newline":return void(yield this.sourceToken);case"doc-mode":case"doc-start":{const e={type:"document",offset:this.offset,start:[]};return"doc-start"===this.type&&e.start.push(this.sourceToken),void this.stack.push(e)}}yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML stream`,source:this.source}}*document(e){if(e.value)return yield*this.lineEnd(e);switch(this.type){case"doc-start":return void(Mn(e.start)?(yield*this.pop(),yield*this.step()):e.start.push(this.sourceToken));case"anchor":case"tag":case"space":case"comment":case"newline":return void e.start.push(this.sourceToken)}const t=this.startBlockValue(e);t?this.stack.push(t):yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML document`,source:this.source}}*scalar(e){if("map-value-ind"===this.type){const t=Bn(_n(this.peek(2)));let n;e.end?(n=e.end,n.push(this.sourceToken),delete e.end):n=[this.sourceToken];const r={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:t,key:e,sep:n}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=r}else yield*this.lineEnd(e)}*blockScalar(e){switch(this.type){case"space":case"comment":case"newline":return void e.props.push(this.sourceToken);case"scalar":if(e.source=this.source,this.atNewLine=!0,this.indent=0,this.onNewLine){let e=this.source.indexOf("\n")+1;for(;0!==e;)this.onNewLine(this.offset+e),e=this.source.indexOf("\n",e)+1}yield*this.pop();break;default:yield*this.pop(),yield*this.step()}}*blockMap(e){var t;const n=e.items[e.items.length-1];switch(this.type){case"newline":if(this.onKeyLine=!1,n.value){const t="end"in n.value?n.value.end:void 0,r=Array.isArray(t)?t[t.length-1]:void 0;"comment"===(null==r?void 0:r.type)?null==t||t.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else n.sep?n.sep.push(this.sourceToken):n.start.push(this.sourceToken);return;case"space":case"comment":if(n.value)e.items.push({start:[this.sourceToken]});else if(n.sep)n.sep.push(this.sourceToken);else{if(this.atIndentedComment(n.start,e.indent)){const r=e.items[e.items.length-2],s=null===(t=null==r?void 0:r.value)||void 0===t?void 0:t.end;if(Array.isArray(s))return Array.prototype.push.apply(s,n.start),s.push(this.sourceToken),void e.items.pop()}n.start.push(this.sourceToken)}return}if(this.indent>=e.indent){const t=!this.onKeyLine&&this.indent===e.indent&&(n.sep||Mn(n.start));switch(this.type){case"anchor":case"tag":return void(t||n.value?(e.items.push({start:[this.sourceToken]}),this.onKeyLine=!0):n.sep?n.sep.push(this.sourceToken):n.start.push(this.sourceToken));case"explicit-key-ind":return n.sep||Dn(n.start,"explicit-key-ind")?t||n.value?e.items.push({start:[this.sourceToken]}):this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken]}]}):n.start.push(this.sourceToken),void(this.onKeyLine=!0);case"map-value-ind":if(n.sep)if(n.value||t&&!Dn(n.start,"explicit-key-ind"))e.items.push({start:[],key:null,sep:[this.sourceToken]});else if(Dn(n.sep,"map-value-ind"))this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[],key:null,sep:[this.sourceToken]}]});else if(Dn(n.start,"explicit-key-ind")&&qn(n.key)&&!Dn(n.sep,"newline")){const e=Bn(n.start),t=n.key,r=n.sep;r.push(this.sourceToken),delete n.key,delete n.sep,this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:e,key:t,sep:r}]})}else n.sep.push(this.sourceToken);else Object.assign(n,{key:null,sep:[this.sourceToken]});return void(this.onKeyLine=!0);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const r=this.flowScalar(this.type);return void(t||n.value?(e.items.push({start:[],key:r,sep:[]}),this.onKeyLine=!0):n.sep?this.stack.push(r):(Object.assign(n,{key:r,sep:[]}),this.onKeyLine=!0))}default:{const r=this.startBlockValue(e);if(r)return t&&"block-seq"!==r.type&&Dn(n.start,"explicit-key-ind")&&e.items.push({start:[]}),void this.stack.push(r)}}}yield*this.pop(),yield*this.step()}*blockSequence(e){var t;const n=e.items[e.items.length-1];switch(this.type){case"newline":if(n.value){const t="end"in n.value?n.value.end:void 0,r=Array.isArray(t)?t[t.length-1]:void 0;"comment"===(null==r?void 0:r.type)?null==t||t.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else n.start.push(this.sourceToken);return;case"space":case"comment":if(n.value)e.items.push({start:[this.sourceToken]});else{if(this.atIndentedComment(n.start,e.indent)){const r=e.items[e.items.length-2],s=null===(t=null==r?void 0:r.value)||void 0===t?void 0:t.end;if(Array.isArray(s))return Array.prototype.push.apply(s,n.start),s.push(this.sourceToken),void e.items.pop()}n.start.push(this.sourceToken)}return;case"anchor":case"tag":if(n.value||this.indent<=e.indent)break;return void n.start.push(this.sourceToken);case"seq-item-ind":if(this.indent!==e.indent)break;return void(n.value||Dn(n.start,"seq-item-ind")?e.items.push({start:[this.sourceToken]}):n.start.push(this.sourceToken))}if(this.indent>e.indent){const t=this.startBlockValue(e);if(t)return void this.stack.push(t)}yield*this.pop(),yield*this.step()}*flowCollection(e){const t=e.items[e.items.length-1];if("flow-error-end"===this.type){let e;do{yield*this.pop(),e=this.peek(1)}while(e&&"flow-collection"===e.type)}else if(0===e.end.length){switch(this.type){case"comma":case"explicit-key-ind":return void(!t||t.sep?e.items.push({start:[this.sourceToken]}):t.start.push(this.sourceToken));case"map-value-ind":return void(!t||t.value?e.items.push({start:[],key:null,sep:[this.sourceToken]}):t.sep?t.sep.push(this.sourceToken):Object.assign(t,{key:null,sep:[this.sourceToken]}));case"space":case"comment":case"newline":case"anchor":case"tag":return void(!t||t.value?e.items.push({start:[this.sourceToken]}):t.sep?t.sep.push(this.sourceToken):t.start.push(this.sourceToken));case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const n=this.flowScalar(this.type);return void(!t||t.value?e.items.push({start:[],key:n,sep:[]}):t.sep?this.stack.push(n):Object.assign(t,{key:n,sep:[]}))}case"flow-map-end":case"flow-seq-end":return void e.end.push(this.sourceToken)}const n=this.startBlockValue(e);n?this.stack.push(n):(yield*this.pop(),yield*this.step())}else{const t=this.peek(2);if("block-map"!==t.type||"map-value-ind"!==this.type&&("newline"!==this.type||t.items[t.items.length-1].sep))if("map-value-ind"===this.type&&"flow-collection"!==t.type){const n=Bn(_n(t));Vn(e);const r=e.end.splice(1,e.end.length);r.push(this.sourceToken);const s={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:n,key:e,sep:r}]};this.onKeyLine=!0,this.stack[this.stack.length-1]=s}else yield*this.lineEnd(e);else yield*this.pop(),yield*this.step()}}flowScalar(e){if(this.onNewLine){let e=this.source.indexOf("\n")+1;for(;0!==e;)this.onNewLine(this.offset+e),e=this.source.indexOf("\n",e)+1}return{type:e,offset:this.offset,indent:this.indent,source:this.source}}startBlockValue(e){switch(this.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return this.flowScalar(this.type);case"block-scalar-header":return{type:"block-scalar",offset:this.offset,indent:this.indent,props:[this.sourceToken],source:""};case"flow-map-start":case"flow-seq-start":return{type:"flow-collection",offset:this.offset,indent:this.indent,start:this.sourceToken,items:[],end:[]};case"seq-item-ind":return{type:"block-seq",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken]}]};case"explicit-key-ind":{this.onKeyLine=!0;const t=Bn(_n(e));return t.push(this.sourceToken),{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:t}]}}case"map-value-ind":{this.onKeyLine=!0;const t=Bn(_n(e));return{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:t,key:null,sep:[this.sourceToken]}]}}}return null}atIndentedComment(e,t){return"comment"===this.type&&(!(this.indent<=t)&&e.every((e=>"newline"===e.type||"space"===e.type)))}*documentEnd(e){"doc-mode"!==this.type&&(e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken],"newline"===this.type&&(yield*this.pop()))}*lineEnd(e){switch(this.type){case"comma":case"doc-start":case"doc-end":case"flow-seq-end":case"flow-map-end":case"map-value-ind":yield*this.pop(),yield*this.step();break;case"newline":this.onKeyLine=!1;case"space":case"comment":default:e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken],"newline"===this.type&&(yield*this.pop())}}}function Un(e){const t=!e||!1!==e.prettyErrors;return{lineCounter:e&&e.lineCounter||t&&new Rn||null,prettyErrors:t}}function Fn(e,t={}){const{lineCounter:n,prettyErrors:r}=Un(t),s=new Kn(null==n?void 0:n.addNewLine),a=new vn(t);let i=null;for(const t of a.compose(s.parse(e),!0,e.length))if(i){if("silent"!==i.options.logLevel){i.errors.push(new zt(t.range.slice(0,2),"MULTIPLE_DOCS","Source contains multiple documents; please use YAML.parseAllDocuments()"));break}}else i=t;return r&&n&&(i.errors.forEach(Yt(e,n)),i.warnings.forEach(Yt(e,n))),i}var Jn=Object.freeze({__proto__:null,CST:Nn,Composer:vn,Document:Ft,Schema:Kt,YAMLError:Gt,YAMLParseError:zt,YAMLWarning:Wt,Alias:me,isAlias:W,isCollection:ee,isDocument:Y,isMap:H,isNode:te,isPair:Q,isScalar:X,isSeq:Z,Pair:_e,Scalar:ge,YAMLMap:Ue,YAMLSeq:Je,defaultOptions:Be,Lexer:Ln,LineCounter:Rn,Parser:Kn,parse:function(e,t,n){let r;"function"==typeof t?r=t:void 0===n&&t&&"object"==typeof t&&(n=t);const s=Fn(e,n);if(!s)return null;if(s.warnings.forEach((e=>Le(s.options.logLevel,e))),s.errors.length>0){if("silent"!==s.options.logLevel)throw s.errors[0];s.errors=[]}return s.toJS(Object.assign({reviver:r},n))},parseAllDocuments:function(e,t={}){const{lineCounter:n,prettyErrors:r}=Un(t),s=new Kn(null==n?void 0:n.addNewLine),a=new vn(t),i=Array.from(a.compose(s.parse(e)));if(r&&n)for(const t of i)t.errors.forEach(Yt(e,n)),t.warnings.forEach(Yt(e,n));return i.length>0?i:Object.assign([],{empty:!0},a.streamInfo())},parseDocument:Fn,stringify:function(e,t,n){let r=null;if("function"==typeof t||Array.isArray(t)?r=t:void 0===n&&t&&(n=t),"string"==typeof n&&(n=n.length),"number"==typeof n){const e=Math.round(n);n=e<1?void 0:e>8?{indent:8}:{indent:e}}if(void 0===e){const{keepUndefined:e}=n||t||{};if(!e)return}return new Ft(e,r,n).toString(n)},visit:ie}),Gn=function(e,t){return function n(){null==t&&(t=e.length);var r=[].slice.call(arguments);return r.length>=t?e.apply(this,r):function(){return n.apply(this,r.concat([].slice.call(arguments)))}}};var zn="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function Wn(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var Yn=Wn((function(e,t){var n;n={},("object"==typeof window&&window||zn).PubSub=n,function(e){var t={},n=-1,r="*";function s(e){var t;for(t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!0;return!1}function a(e){return function(){throw e}}function i(e,t,n){try{e(t,n)}catch(e){setTimeout(a(e),0)}}function o(e,t,n){e(t,n)}function c(e,n,r,s){var a,c=t[n],l=s?o:i;if(Object.prototype.hasOwnProperty.call(t,n))for(a in c)Object.prototype.hasOwnProperty.call(c,a)&&l(c[a],e,r)}function l(e,t,n){return function(){var s=String(e),a=s.lastIndexOf(".");for(c(e,e,t,n);-1!==a;)a=(s=s.substr(0,a)).lastIndexOf("."),c(e,s,t,n);c(e,r,t,n)}}function u(e){var n=String(e);return Boolean(Object.prototype.hasOwnProperty.call(t,n)&&s(t[n]))}function p(e){for(var t=String(e),n=u(t)||u(r),s=t.lastIndexOf(".");!n&&-1!==s;)s=(t=t.substr(0,s)).lastIndexOf("."),n=u(t);return n}function f(e,t,n,r){var s=l(e="symbol"==typeof e?e.toString():e,t,r);return!!p(e)&&(!0===n?s():setTimeout(s,0),!0)}e.publish=function(t,n){return f(t,n,!1,e.immediateExceptions)},e.publishSync=function(t,n){return f(t,n,!0,e.immediateExceptions)},e.subscribe=function(e,r){if("function"!=typeof r)return!1;e="symbol"==typeof e?e.toString():e,Object.prototype.hasOwnProperty.call(t,e)||(t[e]={});var s="uid_"+String(++n);return t[e][s]=r,s},e.subscribeAll=function(t){return e.subscribe(r,t)},e.subscribeOnce=function(t,n){var r=e.subscribe(t,(function(){e.unsubscribe(r),n.apply(this,arguments)}));return e},e.clearAllSubscriptions=function(){t={}},e.clearSubscriptions=function(e){var n;for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e)&&delete t[n]},e.countSubscriptions=function(e){var n,r,s=0;for(n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e)){for(r in t[n])s++;break}return s},e.getSubscriptions=function(e){var n,r=[];for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e)&&r.push(n);return r},e.unsubscribe=function(n){var r,s,a,i=function(e){var n;for(n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&0===n.indexOf(e))return!0;return!1},o="string"==typeof n&&(Object.prototype.hasOwnProperty.call(t,n)||i(n)),c=!o&&"string"==typeof n,l="function"==typeof n,u=!1;if(!o){for(r in t)if(Object.prototype.hasOwnProperty.call(t,r)){if(s=t[r],c&&s[n]){delete s[n],u=n;break}if(l)for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&s[a]===n&&(delete s[a],u=!0)}return u}e.clearSubscriptions(n)}}(n),void 0!==e&&e.exports&&(t=e.exports=n),t.PubSub=n,e.exports=t=n}));Yn.PubSub;var Hn=function(e,t){if(e=e.trim(),(t=t.trim()).startsWith("about:"))return t;const n=function(e){const t={host:"",path:"",query:"",protocol:""};let n=e,r=e.indexOf("//");t.protocol=n.substring(0,r),r+=2;const s=e.indexOf("/",r),a=e.indexOf("?"),i=e.indexOf("#");-1!==i&&(n=n.substring(0,i));if(-1!==a){const e=n.substring(a);t.query=e,n=n.substring(0,a)}if(-1!==s){const e=n.substring(0,s);t.host=e,n=n.substring(s),t.path=n}else t.host=n;return t}(e),r=function(e){const t={href:e,hash:"",query:"",netPath:!1,absolutePath:!1,relativePath:!1};if(Zn.test(e))return t.netPath=!0,t;"/"===e[0]?t.absolutePath=!0:""!==e&&(t.relativePath=!0);let n=e;const r=e.indexOf("?"),s=e.indexOf("#");if(-1!==s){const e=n.substring(s);t.hash=e,n=n.substring(0,s)}if(-1!==r){const e=n.substring(r);t.query=e,n=n.substring(0,r)}return t.path=n,t}(t);if(!n.protocol&&!r.netPath)throw new Error("Error, protocol is not specified");if(r.netPath)return r.href.startsWith("//")&&(r.href=n.protocol+r.href),function(e){const t=e.indexOf("//")+2,n=!e.includes("/",t),r=!e.includes("?",t),s=!e.includes("#",t);return n&&r&&s}(r.href)?Qn(r.href):r.href;if(r.absolutePath){const{path:e,query:t,hash:s}=r;return n.host+Xn(e)+t+s}if(r.relativePath){const{path:e,query:t,hash:s}=r;let a,i=n.path,o=n.host;return 0===e.length?a=i:(i=i.substring(0,i.lastIndexOf("/")),a=Xn(i+"/"+e)),o+=""!==a||t||s?a+t+s:"/",o}{const{host:e,path:t,query:s}=n;return t||s?e+t+s+r.hash:Qn(e)}};function Qn(e){return e+("/"===e[e.length-1]?"":"/")}function Xn(e){let t=e.split("/");""===t[0]&&(t=t.slice(1));let n=[];return t.forEach(((e,r)=>{"."!==e&&(".."===e?n.pop():""===e&&r!==t.length-1||n.push(e))})),"/"+n.join("/")}const Zn=new RegExp("^([a-z][a-z0-9+.-]*:)?//","i");const er={null:e=>null===e,boolean:e=>"boolean"==typeof e,object:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,array:e=>Array.isArray(e),number:e=>"number"==typeof e,integer:e=>Number.isInteger(e),string:e=>"string"==typeof e},tr=e=>{const t=e.indexOf("#"),n=-1===t?e.length:t,r=e.slice(0,n),s=e.slice(n+1);return[decodeURI(r),decodeURI(s)]},nr=e=>{const t=e.match(/^(.+):\/\//);return t?t[1]:""};var rr={jsonTypeOf:(e,t)=>er[t](e),splitUrl:tr,safeResolveUrl:(e,t)=>{const n=Hn(e,t),r=tr(e)[0];if(r&&"file"===nr(n)&&"file"!==nr(r))throw Error(`Can't access file '${n}' resource from network context '${e}'`);return n}};const sr=e=>{if(e.length>0&&"/"!==e[0])throw Error("Invalid JSON Pointer");return e.split("/").slice(1).map(pr)},ar=(e,t,n,r)=>{if(0===e.length)return n;if(e.length>1){const s=e.shift();return{...t,[s]:ar(e,mr(t,s,r),n,lr(s,r))}}if(Array.isArray(t)){const r=[...t];return r[fr(t,e[0])]=n,r}return"object"==typeof t&&null!==t?{...t,[e[0]]:n}:mr(t,e[0],r)},ir=(e,t,n,r)=>{if(0!==e.length)if(1!==e.length||hr(t)){const s=e.shift();ir(e,mr(t,s,r),n,lr(s,r))}else{t[fr(t,e[0])]=n}},or=(e,t,n)=>{if(0!=e.length){if(e.length>1){const r=e.shift(),s=mr(t,r,n);return{...t,[r]:or(e,s,lr(r,n))}}if(Array.isArray(t))return t.filter(((t,n)=>n!=e[0]));if("object"==typeof t&&null!==t){const{[e[0]]:n,...r}=t;return r}return mr(t,e[0],n)}},cr=(e,t,n)=>{if(0!==e.length)if(e.length>1){const r=e.shift(),s=mr(t,r,n);cr(e,s,lr(r,n))}else Array.isArray(t)?t.splice(e[0],1):"object"==typeof t&&null!==t?delete t[e[0]]:mr(t,e[0],n)},lr=Gn(((e,t)=>t+"/"+ur(e))),ur=e=>e.toString().replace(/~/g,"~0").replace(/\//g,"~1"),pr=e=>e.toString().replace(/~1/g,"/").replace(/~0/g,"~"),fr=(e,t)=>Array.isArray(e)&&"-"===t?e.length:t,mr=(e,t,n="")=>{if(void 0===e)throw TypeError(`Value at '${n}' is undefined and does not have property '${t}'`);if(null===e)throw TypeError(`Value at '${n}' is null and does not have property '${t}'`);if(hr(e))throw TypeError(`Value at '${n}' is a ${typeof e} and does not have property '${t}'`);return e[fr(e,t)]},hr=e=>null===e||"object"!=typeof e;var dr={nil:"",append:lr,get:(e,t)=>{const n=sr(e),r=e=>n.reduce((([e,t],n)=>[mr(e,n,t),lr(n,t)]),[e,""])[0];return void 0===t?r:r(t)},set:(e,t,n)=>{const r=sr(e),s=Gn(((e,t)=>ar(r,e,t,"")));return void 0===t?s:s(t,n)},assign:(e,t,n)=>{const r=sr(e),s=Gn(((e,t)=>ir(r,e,t,"")));return void 0===t?s:s(t,n)},unset:(e,t)=>{const n=sr(e),r=e=>or(n,e,"");return void 0===t?r:r(t)},delete:(e,t)=>{const n=sr(e),r=e=>cr(n,e,"");return void 0===t?r:r(t)}};dr.nil,dr.append,dr.get,dr.set,dr.assign,dr.unset;const yr=Symbol("$__value"),gr=Symbol("$__href");var vr=(e,t)=>Object.freeze({[gr]:e,[yr]:t}),br=e=>e&&void 0!==e[gr],$r=e=>e[gr],wr=e=>e[yr];const{jsonTypeOf:Sr}=rr,Or=Object.freeze({id:"",pointer:"",instance:void 0,value:void 0}),Er=e=>br(e.value)?wr(e.value):e.value,kr=Gn(((e,t)=>Sr(Er(e),t))),Ir=(e,t)=>Object.freeze({...t,pointer:dr.append(e,t.pointer),value:Er(t)[e]}),xr=Gn(((e,t)=>Er(t).map(((n,r,s,a)=>e(Ir(r,t),r,s,a))))),jr=Gn(((e,t)=>Er(t).map(((e,n,r,s)=>Ir(n,t))).filter(((t,n,r,s)=>e(t,n,r,s))))),Nr=Gn(((e,t,n)=>Er(n).reduce(((t,r,s)=>e(t,Ir(s,n),s)),t))),Ar=Gn(((e,t)=>Er(t).every(((n,r,s,a)=>e(Ir(r,t),r,s,a))))),Tr=Gn(((e,t)=>Er(t).some(((n,r,s,a)=>e(Ir(r,t),r,s,a)))));var Cr={cons:(e,t="")=>Object.freeze({...Or,id:t,instance:e,value:e}),uri:e=>`${e.id}#${encodeURI(e.pointer)}`,value:Er,has:(e,t)=>e in Er(t),typeOf:kr,step:Ir,entries:e=>Object.keys(Er(e)).map((t=>[t,Ir(t,e)])),keys:e=>Object.keys(Er(e)),map:xr,filter:jr,reduce:Nr,every:Ar,some:Tr,length:e=>Er(e).length},Pr=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,Lr=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,Rr=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,Dr=/\\([\u000b\u0020-\u00ff])/g,Mr=/([\\"])/g,qr=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;function _r(e){var t=String(e);if(Rr.test(t))return t;if(t.length>0&&!Lr.test(t))throw new TypeError("invalid parameter value");return'"'+t.replace(Mr,"\\$1")+'"'}function Br(e){this.parameters=Object.create(null),this.type=e}var Vr={format:function(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var t=e.parameters,n=e.type;if(!n||!qr.test(n))throw new TypeError("invalid type");var r=n;if(t&&"object"==typeof t)for(var s,a=Object.keys(t).sort(),i=0;i<a.length;i++){if(s=a[i],!Rr.test(s))throw new TypeError("invalid parameter name");r+="; "+s+"="+_r(t[s])}return r},parse:function(e){if(!e)throw new TypeError("argument string is required");var t="object"==typeof e?function(e){var t;"function"==typeof e.getHeader?t=e.getHeader("content-type"):"object"==typeof e.headers&&(t=e.headers&&e.headers["content-type"]);if("string"!=typeof t)throw new TypeError("content-type header is missing from object");return t}(e):e;if("string"!=typeof t)throw new TypeError("argument string is required to be a string");var n=t.indexOf(";"),r=-1!==n?t.substr(0,n).trim():t.trim();if(!qr.test(r))throw new TypeError("invalid media type");var s=new Br(r.toLowerCase());if(-1!==n){var a,i,o;for(Pr.lastIndex=n;i=Pr.exec(t);){if(i.index!==n)throw new TypeError("invalid parameter format");n+=i[0].length,a=i[1].toLowerCase(),'"'===(o=i[2])[0]&&(o=o.substr(1,o.length-2).replace(Dr,"$1")),s.parameters[a]=o}if(n!==t.length)throw new TypeError("invalid parameter format")}return s}},Kr=async e=>Object.entries(await e),Ur=Gn((async(e,t)=>(await t).map(e))),Fr=Gn((async(e,t,n)=>(await n).reduce((async(t,n)=>e(await t,n)),t))),Jr=Gn((async(e,t,n={})=>Fr((async(t,n)=>await e(n)?t.concat([n]):t),[],t,n))),Gr=Gn((async(e,t)=>{const n=await Ur(e,t);return(await Promise.all(n)).some((e=>e))})),zr=Gn((async(e,t)=>{const n=await Ur(e,t);return(await Promise.all(n)).every((e=>e))})),Wr=Gn(((e,t)=>e.reduce((async(e,t)=>t(await e)),t))),Yr={entries:Kr,map:Ur,filter:Jr,reduce:Fr,some:Gr,every:zr,pipeline:Wr,all:e=>Promise.all(e),allValues:e=>Wr([Kr,Fr((async(e,[t,n])=>(e[t]=await n,e)),{})],e)};Yr.entries,Yr.map,Yr.filter,Yr.reduce,Yr.some,Yr.every,Yr.pipeline,Yr.all,Yr.allValues;var Hr=fetch;const{jsonTypeOf:Qr,splitUrl:Xr,safeResolveUrl:Zr}=rr,es={},ts={},ns=(e,t)=>{const n=e in ts?ts[e]:e;if(n in es)return es[n][t]},rs={},ss={},as=(e,t="",n="")=>{e=JSON.parse(JSON.stringify(e));const r=Xr(e.$schema||n)[0];if(!r)throw Error("Couldn't determine schema version");delete e.$schema;const s=ns(r,"baseToken"),a=ns(r,"anchorToken"),i=Xr(t)[0];if(!i&&!Xr(e[s]||"")[0])throw Error("Couldn't determine an identifier for the schema");const o=Zr(i,e[s]||""),[c,l]=Xr(o);delete e[s],l&&s===a&&(e[a]=a!==s?encodeURI(l):`#${encodeURI(l)}`),i&&(ss[i]=c);const u={},p=ns(r,"recursiveAnchorToken");let f;!0===e[p]&&(u[""]=c,e[a]="",delete e[p]);const m=ns(r,"vocabularyToken");Qr(e[m],"object")?(ts[c]=r,f=e[m],delete e[m]):(ts[c]=r,f={[r]:!0});const h={"":""};return rs[c]={id:c,schemaVersion:r,schema:is(e,c,r,dr.nil,h,u),anchors:h,dynamicAnchors:u,vocabulary:f,validated:!1},rs[c]},is=(e,t,n,r,s,a)=>{if(Qr(e,"object")){const i="string"==typeof e.$schema?Xr(e.$schema)[0]:n,o=ns(i,"embeddedToken"),c=ns(i,"anchorToken");if("string"==typeof e[o]&&(o!==c||"#"!==e[o][0])){const r=Zr(t,e[o]);return e[o]=r,as(e,r,n),vr(e[o],e)}const l=ns(n,"anchorToken"),u=ns(n,"dynamicAnchorToken");"string"==typeof e[u]&&(a[e[u]]=t,s[e[u]]=r,delete e[u]);const p=ns(n,"embeddedToken");if("string"==typeof e[l]){const t=l!==p?e[l]:e[l].slice(1);s[t]=r,delete e[l]}const f=ns(n,"jrefToken");if("string"==typeof e[f])return vr(e[f],e);for(let i in e)e[i]=is(e[i],t,n,dr.append(i,r),s,a);return e}return Array.isArray(e)?e.map(((e,i)=>is(e,t,n,dr.append(i,r),s,a))):e},os=e=>rs[ss[e]]||rs[e],cs=Object.freeze({id:"",schemaVersion:void 0,vocabulary:{},pointer:dr.nil,schema:void 0,value:void 0,anchors:{},dynamicAnchors:{},validated:!0}),ls=async(e,t=cs)=>{const n=Zr(fs(t),e),[r,s]=Xr(n);if(!(e=>e in rs||e in ss)(r)){const e=await Hr(r,{headers:{Accept:"application/schema+json"}});if(e.status>=400)throw await e.text(),Error(`Failed to retrieve schema with id: ${r}`);if(e.headers.has("content-type")){const t=Vr.parse(e.headers.get("content-type")).type;if("application/schema+json"!==t)throw Error(`${r} is not a schema. Found a document with media type: ${t}`)}as(await e.json(),r)}const a=os(r),i="/"!==s[0]?ps(a,s):s,o=Object.freeze({...a,pointer:i,value:dr.get(i,a.schema)});return us(o)},us=e=>br(e.value)?ls($r(e.value),e):e,ps=(e,t)=>{if(!(t in e.anchors))throw Error(`No such anchor '${encodeURI(e.id)}#${encodeURI(t)}'`);return e.anchors[t]},fs=e=>`${e.id}#${encodeURI(e.pointer)}`,ms=e=>br(e.value)?wr(e.value):e.value,hs=(e,t)=>{const n=os(t.id),r=Object.freeze({...t,pointer:dr.append(e,t.pointer),value:ms(t)[e],validated:n.validated});return us(r)},ds=Gn(((e,t)=>Yr.pipeline([ms,Yr.map((async(n,r)=>e(await hs(r,t),r))),Yr.all],t)));var ys={setConfig:(e,t,n)=>{es[e]||(es[e]={}),es[e][t]=n},getConfig:ns,add:as,get:ls,markValidated:e=>{rs[e].validated=!0},uri:fs,value:ms,getAnchorPointer:ps,typeOf:(e,t)=>Qr(ms(e),t),has:(e,t)=>e in ms(t),step:hs,keys:e=>Object.keys(ms(e)),entries:e=>Yr.pipeline([ms,Object.keys,Yr.map((async t=>[t,await hs(t,e)])),Yr.all],e),map:ds,length:e=>ms(e).length};ys.setConfig,ys.getConfig,ys.add,ys.get,ys.markValidated,ys.uri,ys.value,ys.getAnchorPointer,ys.typeOf,ys.has,ys.step,ys.keys,ys.entries,ys.map,ys.length;class gs extends Error{constructor(e){super("Invalid Schema"),this.name=this.constructor.name,this.output=e}}var vs=gs;const{splitUrl:bs}=rr,$s="FLAG",ws="BASIC",Ss="DETAILED",Os="VERBOSE";let Es=Ss,ks=!0;const Is=async e=>{const t={metaData:{}};return{ast:t,schemaUri:await Ls(e,t)}},xs=Gn((({ast:e,schemaUri:t},n,r=$s)=>{if(![$s,ws,Ss,Os].includes(r))throw Error(`The '${r}' error format is not supported`);let s=[];const a=Yn.subscribe("result",js(r,s));return Rs(t,n,e,{}),Yn.unsubscribe(a),s[0]})),js=(e,t)=>{const n=[];return(r,s)=>{if("result"===r){const{keyword:e,absoluteKeywordLocation:t,instanceLocation:r,valid:a}=s,i={keyword:e,absoluteKeywordLocation:t,instanceLocation:r,valid:a,errors:[]};n.push(i)}else if("result.start"===r)n.push(r);else if("result.end"===r){const r=n.pop();for(;"result.start"!==n[n.length-1];){const t=n.pop(),s=[t];e===ws&&(s.push(...t.errors),delete t.errors),(e===Os||e!==$s&&!t.valid)&&r.errors.unshift(...s)}n[n.length-1]=r,t[0]=r}}},Ns={},As=e=>Ns[e],Ts=e=>e in Ns,Cs={},Ps={},Ls=async(e,t)=>{if(!Ts(`${e.schemaVersion}#validate`)){const t=await ys.get(e.schemaVersion);(ys.getConfig(t.id,"mandatoryVocabularies")||[]).forEach((e=>{if(!t.vocabulary[e])throw Error(`Vocabulary '${e}' must be explicitly declared and required`)})),Object.entries(t.vocabulary).forEach((([e,n])=>{if(e in Cs)Object.entries(Cs[e]).forEach((([e,n])=>{((e,t)=>{Ns[e]={collectEvaluatedItems:(e,n,r)=>t.interpret(e,n,r)&&new Set,collectEvaluatedProperties:(e,n,r)=>t.interpret(e,n,r)&&[],...t}})(`${t.id}#${e}`,n)}));else if(n)throw Error(`Missing required vocabulary: ${e}`)}))}if(ks&&!e.validated){if(ys.markValidated(e.id),!(e.schemaVersion in Ps)){const t=await ys.get(e.schemaVersion),n={metaData:{}},r=await Ls(t,n);Ps[t.id]=xs({ast:n,schemaUri:r})}const t=Cr.cons(e.schema,e.id),n=Ps[e.schemaVersion](t,Es);if(!n.valid)throw new vs(n)}return e.id in t.metaData||(t.metaData[e.id]={id:e.id,dynamicAnchors:e.dynamicAnchors,anchors:e.anchors}),await As(`${e.schemaVersion}#validate`).compile(e,t),ys.uri(e)},Rs=(e,t,n,r)=>{const s=Ds(e,n),a=bs(e)[0];return As(s).interpret(e,t,n,{...n.metaData[a].dynamicAnchors,...r})},Ds=(e,t)=>{if(!(e in t))throw Error(`No schema found at ${e}`);return t[e][0]};var Ms={validate:async(e,t,n)=>{const r=await Is(e),s=(e,t=$s)=>xs(r,Cr.cons(e),t);return void 0===t?s:s(t,n)},compile:Is,interpret:xs,setMetaOutputFormat:e=>{Es=e},setShouldMetaValidate:e=>{ks=e},FLAG:$s,BASIC:ws,DETAILED:Ss,VERBOSE:Os,add:(e,t="",n="")=>{const{id:r}=ys.add(e,t,n);delete Ps[r]},getKeyword:As,hasKeyword:Ts,defineVocabulary:(e,t)=>{Cs[e]=t},compileSchema:Ls,interpretSchema:Rs,collectEvaluatedProperties:(e,t,n,r,s)=>{const a=Ds(e,n);return As(a).collectEvaluatedProperties(e,t,n,r,s)},collectEvaluatedItems:(e,t,n,r,s)=>{const a=Ds(e,n);return As(a).collectEvaluatedItems(e,t,n,r,s)}};var qs={compile:e=>ys.value(e),interpret:()=>!0};var _s={compile:async(e,t)=>{const n=ys.uri(e);if(!(n in t)){t[n]=!1;const r=ys.value(e);if(!["object","boolean"].includes(typeof r))throw Error(`No schema found at '${ys.uri(e)}'`);t[n]=[`${e.schemaVersion}#validate`,ys.uri(e),"boolean"==typeof r?r:await Yr.pipeline([ys.entries,Yr.map((([t,n])=>[`${e.schemaVersion}#${t}`,n])),Yr.filter((([t])=>Ms.hasKeyword(t)&&t!==`${e.schemaVersion}#validate`)),Yr.map((async([n,r])=>{const s=await Ms.getKeyword(n).compile(r,t,e);return[n,ys.uri(r),s]})),Yr.all],e)]}return n},interpret:(e,t,n,r)=>{const[s,a,i]=n[e];Yn.publishSync("result.start");const o="boolean"==typeof i?i:i.every((([e,s,a])=>{Yn.publishSync("result.start");const i=Ms.getKeyword(e).interpret(a,t,n,r);return Yn.publishSync("result",{keyword:e,absoluteKeywordLocation:s,instanceLocation:Cr.uri(t),valid:i,ast:a}),Yn.publishSync("result.end"),i}));return Yn.publishSync("result",{keyword:s,absoluteKeywordLocation:a,instanceLocation:Cr.uri(t),valid:o,ast:e}),Yn.publishSync("result.end"),o},collectEvaluatedProperties:(e,t,n,r,s=!1)=>{const a=n[e][2];return"boolean"==typeof a?!!a&&[]:a.filter((([e])=>!s||!e.endsWith("#unevaluatedProperties"))).reduce(((e,[s,,a])=>{const i=e&&Ms.getKeyword(s).collectEvaluatedProperties(a,t,n,r);return!1!==i&&[...e,...i]}),[])},collectEvaluatedItems:(e,t,n,r,s=!1)=>{const a=n[e][2];return"boolean"==typeof a?!!a&&new Set:a.filter((([e])=>!s||!e.endsWith("#unevaluatedItems"))).reduce(((e,[s,,a])=>{const i=!1!==e&&Ms.getKeyword(s).collectEvaluatedItems(a,t,n,r);return!1!==i&&new Set([...e,...i])}),new Set)}},Bs={metaData:qs,validate:_s},Vs={Core:Ms,Schema:ys,Instance:Cr,Keywords:Bs};const{Core:Ks,Schema:Us,Instance:Fs}=Vs;var Js={compile:async(e,t,n)=>{const r=await Us.step("items",n),s=Us.typeOf(r,"array")?Us.length(r):Number.MAX_SAFE_INTEGER;return Us.typeOf(e,"boolean")?[s,Us.value(e)]:[s,await Ks.compileSchema(e,t)]},interpret:([e,t],n,r,s)=>!Fs.typeOf(n,"array")||("string"==typeof t?Fs.every(((n,a)=>a<e||Ks.interpretSchema(t,n,r,s)),n):Fs.every(((n,r)=>r<e||t),n))};const{Core:Gs,Schema:zs,Instance:Ws}=Vs,Ys=([e,t],n,r,s)=>!Ws.typeOf(n,"array")||Ws.every(((n,a)=>a<e||Gs.interpretSchema(t,n,r,s)),n);var Hs={compile:async(e,t,n)=>{const r=await zs.step("items",n);return[zs.typeOf(r,"array")?zs.length(r):Number.MAX_SAFE_INTEGER,await Gs.compileSchema(e,t)]},interpret:Ys,collectEvaluatedItems:(e,t,n,r)=>Ys(e,t,n,r)&&new Set(Ws.map(((e,t)=>t),t))};const{Core:Qs,Schema:Xs,Instance:Zs}=Vs;var ea={compile:async(e,t,n)=>{const r=await Xs.step("properties",n),s=Xs.typeOf(r,"object")?Xs.keys(r):[],a=await Xs.step("patternProperties",n),i=Xs.typeOf(a,"object")?Xs.keys(a).map((e=>new RegExp(e))):[];return Xs.typeOf(e,"boolean")?[s,i,Xs.value(e)]:[s,i,await Qs.compileSchema(e,t)]},interpret:([e,t,n],r,s,a)=>{if(!Zs.typeOf(r,"object"))return!0;const i=Zs.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n)))));return"string"==typeof n?i.every((([,e])=>Qs.interpretSchema(n,e,s,a))):0===i.length||n}};const{Core:ta,Schema:na,Instance:ra}=Vs,sa=([e,t,n],r,s,a)=>!ra.typeOf(r,"object")||ra.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n))))).every((([,e])=>ta.interpretSchema(n,e,s,a)));var aa={compile:async(e,t,n)=>{const r=await na.step("properties",n),s=na.typeOf(r,"object")?na.keys(r):[],a=await na.step("patternProperties",n);return[s,na.typeOf(a,"object")?na.keys(a).map((e=>new RegExp(e))):[],await ta.compileSchema(e,t)]},interpret:sa,collectEvaluatedProperties:(e,t,n,r)=>sa(e,t,n,r)&&[new RegExp("")]};const{Core:ia,Schema:oa}=Vs;var ca={compile:(e,t)=>Yr.pipeline([oa.map((async e=>ia.compileSchema(await e,t))),Yr.all],e),interpret:(e,t,n,r)=>e.every((e=>ia.interpretSchema(e,t,n,r))),collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,s)=>{const a=e&&ia.collectEvaluatedProperties(s,t,n,r);return!1!==a&&[...e,...a]}),[]),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,s)=>{const a=!1!==e&&ia.collectEvaluatedItems(s,t,n,r);return!1!==a&&new Set([...e,...a])}),new Set)};const{Core:la,Schema:ua}=Vs;var pa={compile:(e,t)=>Yr.pipeline([ua.map((async e=>la.compileSchema(await e,t))),Yr.all],e),interpret:(e,t,n,r)=>e.filter((e=>la.interpretSchema(e,t,n,r))).length>0,collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,s)=>{const a=la.collectEvaluatedProperties(s,t,n,r);return!1!==a?[...e||[],...a]:e}),!1),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,s)=>{const a=la.collectEvaluatedItems(s,t,n,r);return!1!==a?new Set([...e||[],...a]):e}),!1)},fa=Object.keys,ma=JSON.stringify;function ha(e,t){var n,r,s,a,i,o,c;if("string"===(c=typeof e))return ma(e);if(!0===e)return"true";if(!1===e)return"false";if(null===e)return"null";if(e instanceof Array){for(s="[",r=e.length-1,n=0;n<r;n++)s+=ha(e[n],!1)+",";return r>-1&&(s+=ha(e[n],!1)),s+"]"}if(e instanceof Object){if("function"==typeof e.toJSON)return ha(e.toJSON(),t);for(r=(a=fa(e).sort()).length,s="",n=0;n<r;)void 0!==(o=ha(e[i=a[n]],!0))&&(n&&""!==s&&(s+=","),s+=ma(i)+":"+o),n++;return"{"+s+"}"}switch(c){case"function":case"undefined":return t?void 0:null;default:return isFinite(e)?e:null}}var da=function(e){return""+ha(e,!1)};const{Schema:ya,Instance:ga}=Vs;var va={compile:e=>da(ya.value(e)),interpret:(e,t)=>da(ga.value(t))===e};const{Core:ba,Instance:$a}=Vs;var wa={compile:(e,t)=>ba.compileSchema(e,t),interpret:(e,t,n,r)=>!$a.typeOf(t,"array")||$a.some((t=>ba.interpretSchema(e,t,n,r)),t)};const{Core:Sa,Schema:Oa,Instance:Ea}=Vs,ka=({contains:e,minContains:t,maxContains:n},r,s,a)=>{if(!Ea.typeOf(r,"array"))return!0;const i=Ea.reduce(((t,n)=>Sa.interpretSchema(e,n,s,a)?t+1:t),0,r);return i>=t&&i<=n};var Ia={compile:async(e,t,n)=>{const r=await Sa.compileSchema(e,t),s=await Oa.step("minContains",n),a=Oa.typeOf(s,"number")?Oa.value(s):1,i=await Oa.step("maxContains",n);return{contains:r,minContains:a,maxContains:Oa.typeOf(i,"number")?Oa.value(i):Number.MAX_SAFE_INTEGER}},interpret:ka,collectEvaluatedItems:(e,t,n,r)=>ka(e,t,n,r)&&Ea.reduce(((t,s,a)=>Sa.interpretSchema(e.contains,s,n,r)?t.add(a):t),new Set,t)};const{Core:xa,Schema:ja}=Vs;var Na={compile:async(e,t)=>{await Yr.pipeline([ja.entries,Yr.map((([,e])=>xa.compileSchema(e,t))),Yr.all],e)},interpret:()=>!0};const{Core:Aa,Schema:Ta,Instance:Ca}=Vs;var Pa={compile:(e,t)=>Yr.pipeline([Ta.entries,Yr.map((async([e,n])=>[e,Ta.typeOf(n,"array")?Ta.value(n):await Aa.compileSchema(n,t)])),Yr.all],e),interpret:(e,t,n,r)=>{const s=Ca.value(t);return!Ca.typeOf(t,"object")||e.every((([e,a])=>!(e in s)||(Array.isArray(a)?a.every((e=>e in s)):Aa.interpretSchema(a,t,n,r))))}};const{Schema:La,Instance:Ra}=Vs;var Da={compile:e=>Yr.pipeline([La.entries,Yr.map((([e,t])=>[e,La.value(t)])),Yr.all],e),interpret:(e,t)=>{const n=Ra.value(t);return!Ra.typeOf(t,"object")||e.every((([e,t])=>!(e in n)||t.every((e=>e in n))))}};const{Core:Ma,Schema:qa,Instance:_a}=Vs;var Ba={compile:(e,t)=>Yr.pipeline([qa.entries,Yr.map((async([e,n])=>[e,await Ma.compileSchema(n,t)])),Yr.all],e),interpret:(e,t,n,r)=>{const s=_a.value(t);return!_a.typeOf(t,"object")||e.every((([e,a])=>!(e in s)||Ma.interpretSchema(a,t,n,r)))},collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,[s,a])=>{if(!e||!_a.has(s,t))return e;const i=Ma.collectEvaluatedProperties(a,t,n,r);return!1!==i&&e.concat(i)}),[])};const{Schema:Va,Instance:Ka}=Vs;var Ua={compile:e=>Va.value(e).map(da),interpret:(e,t)=>e.some((e=>da(Ka.value(t))===e))};const{Schema:Fa,Instance:Ja}=Vs;var Ga={compile:async e=>Fa.value(e),interpret:(e,t)=>!Ja.typeOf(t,"number")||Ja.value(t)<e};const{Schema:za,Instance:Wa}=Vs;var Ya={compile:async e=>za.value(e),interpret:(e,t)=>!Wa.typeOf(t,"number")||Wa.value(t)>e};const{Core:Ha}=Vs;var Qa={compile:(e,t)=>Ha.compileSchema(e,t),interpret:(e,t,n,r)=>(Ha.interpretSchema(e,t,n,r),!0),collectEvaluatedProperties:(e,t,n,r)=>Ha.collectEvaluatedProperties(e,t,n,r)||[],collectEvaluatedItems:(e,t,n,r)=>Ha.collectEvaluatedItems(e,t,n,r)||new Set};const{Core:Xa,Schema:Za}=Vs,ei=(e,t,n,r)=>{const s=n[e][2];return"boolean"==typeof s?s:s.every((([e,,s])=>Xa.getKeyword(e).interpret(s,t,n,r)))};var ti={compile:async(e,t,n)=>{if(Za.has("if",n)){const r=await Za.step("if",n);return[await Xa.compileSchema(r,t),await Xa.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,s)=>void 0===e||!ei(e,n,r,s)||Xa.interpretSchema(t,n,r,s),collectEvaluatedProperties:([e,t],n,r,s)=>void 0!==e&&ei(e,n,r,s)?Xa.collectEvaluatedProperties(t,n,r,s):[],collectEvaluatedItems:([e,t],n,r,s)=>void 0!==e&&ei(e,n,r,s)?Xa.collectEvaluatedItems(t,n,r,s):new Set};const{Core:ni,Schema:ri}=Vs,si=(e,t,n,r)=>{const s=n[e][2];return"boolean"==typeof s?s:s.every((([e,,s])=>ni.getKeyword(e).interpret(s,t,n,r)))};var ai={compile:async(e,t,n)=>{if(ri.has("if",n)){const r=await ri.step("if",n);return[await ni.compileSchema(r,t),await ni.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,s)=>void 0===e||si(e,n,r,s)||ni.interpretSchema(t,n,r,s),collectEvaluatedProperties:([e,t],n,r,s)=>void 0===e||si(e,n,r,s)?[]:ni.collectEvaluatedProperties(t,n,r,s),collectEvaluatedItems:([e,t],n,r,s)=>void 0===e||si(e,n,r,s)?new Set:ni.collectEvaluatedItems(t,n,r,s)};const{Core:ii,Schema:oi,Instance:ci}=Vs,li=(e,t,n,r)=>!ci.typeOf(t,"array")||("string"==typeof e?ci.every((t=>ii.interpretSchema(e,t,n,r)),t):ci.every(((t,s)=>!(s in e)||ii.interpretSchema(e[s],t,n,r)),t));var ui={compile:(e,t)=>oi.typeOf(e,"array")?Yr.pipeline([oi.map((e=>ii.compileSchema(e,t))),Yr.all],e):ii.compileSchema(e,t),interpret:li,collectEvaluatedItems:(e,t,n,r)=>li(e,t,n,r)&&("string"==typeof e?new Set(ci.map(((e,t)=>t),t)):new Set(e.map(((e,t)=>t))))};const{Core:pi,Schema:fi,Instance:mi}=Vs,hi=([e,t],n,r,s)=>!mi.typeOf(n,"array")||mi.every(((n,a)=>a<e||pi.interpretSchema(t,n,r,s)),n);var di={compile:async(e,t,n)=>{const r=await fi.step("prefixItems",n);return[fi.typeOf(r,"array")?fi.length(r):0,await pi.compileSchema(e,t)]},interpret:hi,collectEvaluatedItems:(e,t,n,r)=>hi(e,t,n,r)&&new Set(mi.map(((e,t)=>t),t))};const{Schema:yi,Instance:gi}=Vs;var vi={compile:e=>yi.value(e),interpret:(e,t)=>!gi.typeOf(t,"array")||gi.length(t)<=e};const{Schema:bi,Instance:$i}=Vs;var wi={compile:e=>bi.value(e),interpret:(e,t)=>!$i.typeOf(t,"string")||$i.length(t)<=e};const{Schema:Si,Instance:Oi}=Vs;var Ei={compile:e=>Si.value(e),interpret:(e,t)=>!Oi.typeOf(t,"string")||[...Oi.value(t)].length<=e};const{Schema:ki,Instance:Ii}=Vs;var xi={compile:e=>ki.value(e),interpret:(e,t)=>!Ii.typeOf(t,"object")||Ii.keys(t).length<=e};const{Schema:ji,Instance:Ni}=Vs;var Ai={compile:async(e,t,n)=>{const r=await ji.step("exclusiveMaximum",n),s=ji.value(r);return[ji.value(e),s]},interpret:([e,t],n)=>{if(!Ni.typeOf(n,"number"))return!0;const r=Ni.value(n);return t?r<e:r<=e}};const{Schema:Ti,Instance:Ci}=Vs;var Pi={compile:async e=>Ti.value(e),interpret:(e,t)=>!Ci.typeOf(t,"number")||Ci.value(t)<=e};const{Schema:Li,Instance:Ri}=Vs;var Di={compile:e=>Li.value(e),interpret:(e,t)=>!Ri.typeOf(t,"array")||Ri.length(t)>=e};const{Schema:Mi,Instance:qi}=Vs;var _i={compile:e=>Mi.value(e),interpret:(e,t)=>!qi.typeOf(t,"string")||qi.value(t).length>=e};const{Schema:Bi,Instance:Vi}=Vs;var Ki={compile:e=>Bi.value(e),interpret:(e,t)=>!Vi.typeOf(t,"string")||[...Vi.value(t)].length>=e};const{Schema:Ui,Instance:Fi}=Vs;var Ji={compile:e=>Ui.value(e),interpret:(e,t)=>{const n=Fi.value(t);return!Fi.typeOf(t,"object")||Object.keys(n).length>=e}};const{Schema:Gi,Instance:zi}=Vs;var Wi={compile:async(e,t,n)=>{const r=await Gi.step("exclusiveMinimum",n),s=Gi.value(r);return[Gi.value(e),s]},interpret:([e,t],n)=>{if(!zi.typeOf(n,"number"))return!0;const r=zi.value(n);return t?r>e:r>=e}};const{Schema:Yi,Instance:Hi}=Vs;var Qi={compile:async e=>Yi.value(e),interpret:(e,t)=>!Hi.typeOf(t,"number")||Hi.value(t)>=e};const{Schema:Xi,Instance:Zi}=Vs,eo=(e,t)=>Math.abs(e-t)<1.1920929e-7;var to={compile:e=>Xi.value(e),interpret:(e,t)=>{if(!Zi.typeOf(t,"number"))return!0;const n=Zi.value(t)%e;return eo(0,n)||eo(e,n)}};const{Core:no}=Vs;var ro={compile:no.compileSchema,interpret:(e,t,n,r)=>!no.interpretSchema(e,t,n,r)};const{Core:so,Schema:ao}=Vs;var io={compile:(e,t)=>Yr.pipeline([ao.map((async e=>so.compileSchema(await e,t))),Yr.all],e),interpret:(e,t,n,r)=>{let s=0;for(const a of e)if(so.interpretSchema(a,t,n,r)&&s++,s>1)break;return 1===s},collectEvaluatedProperties:(e,t,n,r)=>{let s=0;return e.reduce(((e,a)=>{if(s>1)return!1;const i=so.collectEvaluatedProperties(a,t,n,r);return i?0==s++&&i:e}),!1)},collectEvaluatedItems:(e,t,n,r)=>{let s=0;return e.reduce(((e,a)=>{if(s>1)return!1;const i=so.collectEvaluatedItems(a,t,n,r);return i?0==s++&&i:e}),!1)}};const{Schema:oo,Instance:co}=Vs;var lo={compile:e=>new RegExp(oo.value(e),"u"),interpret:(e,t)=>!co.typeOf(t,"string")||e.test(co.value(t))};const{Core:uo,Schema:po,Instance:fo}=Vs,mo=(e,t,n,r)=>!fo.typeOf(t,"object")||e.every((([e,s])=>fo.entries(t).filter((([t])=>e.test(t))).every((([,e])=>uo.interpretSchema(s,e,n,r)))));var ho={compile:(e,t)=>Yr.pipeline([po.entries,Yr.map((async([e,n])=>[new RegExp(e,"u"),await uo.compileSchema(n,t)])),Yr.all],e),interpret:mo,collectEvaluatedProperties:(e,t,n,r)=>mo(e,t,n,r)&&e.map((([e])=>e))};var yo={isObject:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,escapeRegExp:e=>e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")};const{Core:go,Schema:vo,Instance:bo}=Vs,{escapeRegExp:$o}=yo,wo=(e,t,n,r)=>!bo.typeOf(t,"object")||bo.entries(t).filter((([t])=>t in e)).every((([t,s])=>go.interpretSchema(e[t],s,n,r)));var So={compile:(e,t)=>Yr.pipeline([vo.entries,Yr.reduce((async(e,[n,r])=>(e[n]=await go.compileSchema(r,t),e)),Object.create(null))],e),interpret:wo,collectEvaluatedProperties:(e,t,n,r)=>wo(e,t,n,r)&&Object.keys(e).map((e=>new RegExp(`^${$o(e)}$`)))};const{Core:Oo,Instance:Eo}=Vs;var ko={compile:(e,t)=>Oo.compileSchema(e,t),interpret:(e,t,n,r)=>!Eo.typeOf(t,"object")||Eo.keys(t).every((t=>Oo.interpretSchema(e,Eo.cons(t),n,r)))};const{Core:Io,Schema:xo}=Vs,{safeResolveUrl:jo,splitUrl:No}=rr;var Ao={compile:e=>{const t=jo(e.id,xo.value(e));return No(t)},interpret:([e,t],n,r,s)=>{const a=t in r.metaData[e].dynamicAnchors?s[t]:e,i=xo.getAnchorPointer(r.metaData[a],t);return Io.interpretSchema(`${a}#${i}`,n,r,s)},collectEvaluatedProperties:Io.collectEvaluatedProperties,collectEvaluatedItems:Io.collectEvaluatedItems};const{Core:To,Schema:Co}=Vs;var Po={compile:async(e,t)=>{const n=await Co.get(Co.value(e),e);return To.compileSchema(n,t)},interpret:To.interpretSchema,collectEvaluatedProperties:To.collectEvaluatedProperties,collectEvaluatedItems:To.collectEvaluatedItems};const{Schema:Lo,Instance:Ro}=Vs;var Do={compile:e=>Lo.value(e),interpret:(e,t)=>!Ro.typeOf(t,"object")||e.every((e=>Ro.value(t).hasOwnProperty(e)))};const{Core:Mo,Schema:qo,Instance:_o}=Vs,Bo=(e,t,n,r)=>!_o.typeOf(t,"array")||_o.every(((t,s)=>!(s in e)||Mo.interpretSchema(e[s],t,n,r)),t);var Vo={compile:(e,t)=>Yr.pipeline([qo.map((e=>Mo.compileSchema(e,t))),Yr.all],e),interpret:Bo,collectEvaluatedItems:(e,t,n,r)=>Bo(e,t,n,r)&&new Set(e.map(((e,t)=>t)))};const{Schema:Ko,Instance:Uo}=Vs;var Fo={compile:e=>Ko.value(e),interpret:(e,t)=>"string"==typeof e?Uo.typeOf(t,e):e.some(Uo.typeOf(t))};const{Core:Jo,Schema:Go,Instance:zo}=Vs,Wo=([e,t],n,r,s)=>{if(!zo.typeOf(n,"array"))return!0;const a=Jo.collectEvaluatedItems(e,n,r,s,!0);return!1===a||zo.every(((e,i)=>a.has(i)||Jo.interpretSchema(t,zo.step(i,n),r,s)),n)};var Yo={compile:async(e,t,n)=>[Go.uri(n),await Jo.compileSchema(e,t)],interpret:Wo,collectEvaluatedItems:(e,t,n,r)=>Wo(e,t,n,r)&&new Set(zo.map(((e,t)=>t),t))};const{Core:Ho,Schema:Qo,Instance:Xo}=Vs,Zo=([e,t],n,r,s)=>{if(!Xo.typeOf(n,"object"))return!0;const a=Ho.collectEvaluatedProperties(e,n,r,s,!0);return!a||Xo.entries(n).filter((([e])=>!a.some((t=>e.match(t))))).every((([,e])=>Ho.interpretSchema(t,e,r,s)))};var ec={compile:async(e,t,n)=>[Qo.uri(n),await Ho.compileSchema(e,t)],interpret:Zo,collectEvaluatedProperties:(e,t,n,r)=>Zo(e,t,n,r)&&[new RegExp("")]};const{Schema:tc,Instance:nc}=Vs;var rc={compile:e=>tc.value(e),interpret:(e,t)=>{if(!nc.typeOf(t,"array")||!1===e)return!0;const n=nc.map((e=>da(nc.value(e))),t);return new Set(n).size===n.length}};const{Keywords:sc}=Vs;var ac={additionalItems:Js,additionalItems6:Hs,additionalProperties:ea,additionalProperties6:aa,allOf:ca,anyOf:pa,const:va,contains:wa,containsMinContainsMaxContains:Ia,definitions:Na,dependencies:Pa,dependentRequired:Da,dependentSchemas:Ba,enum:Ua,exclusiveMaximum:Ga,exclusiveMinimum:Ya,if:Qa,then:ti,else:ai,items:ui,items202012:di,maxItems:vi,maxLength:wi,maxLength6:Ei,maxProperties:xi,maximumExclusiveMaximum:Ai,maximum:Pi,metaData:sc.metaData,minItems:Di,minLength:_i,minLength6:Ki,minProperties:Ji,minimumExclusiveMinimum:Wi,minimum:Qi,multipleOf:to,not:ro,oneOf:io,pattern:lo,patternProperties:ho,properties:So,propertyNames:ko,dynamicRef:Ao,ref:Po,required:Do,tupleItems:Vo,type:Fo,unevaluatedItems:Yo,unevaluatedProperties:ec,uniqueItems:rc,validate:sc.validate};const{Core:ic,Schema:oc}=Vs,cc="http://json-schema.org/draft-04/schema";oc.setConfig(cc,"baseToken","id"),oc.setConfig(cc,"embeddedToken","id"),oc.setConfig(cc,"anchorToken","id"),oc.setConfig(cc,"jrefToken","$ref"),oc.add(JSON.parse('{\n    "id": "http://json-schema.org/draft-04/schema#",\n    "$schema": "http://json-schema.org/draft-04/schema#",\n    "description": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "positiveInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "positiveIntegerDefault0": {\n            "allOf": [ { "$ref": "#/definitions/positiveInteger" }, { "default": 0 } ]\n        },\n        "simpleTypes": {\n            "enum": [ "array", "boolean", "integer", "null", "number", "object", "string" ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "minItems": 1,\n            "uniqueItems": true\n        }\n    },\n    "type": "object",\n    "properties": {\n        "id": {\n            "type": "string"\n        },\n        "$schema": {\n            "type": "string"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": {},\n        "multipleOf": {\n            "type": "number",\n            "minimum": 0,\n            "exclusiveMinimum": true\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "boolean",\n            "default": false\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxLength": { "$ref": "#/definitions/positiveInteger" },\n        "minLength": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": {\n            "anyOf": [\n                { "type": "boolean" },\n                { "$ref": "#" }\n            ],\n            "default": {}\n        },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": {}\n        },\n        "maxItems": { "$ref": "#/definitions/positiveInteger" },\n        "minItems": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxProperties": { "$ref": "#/definitions/positiveInteger" },\n        "minProperties": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": {\n            "anyOf": [\n                { "type": "boolean" },\n                { "$ref": "#" }\n            ],\n            "default": {}\n        },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "enum": {\n            "type": "array",\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "dependencies": {\n        "exclusiveMaximum": [ "maximum" ],\n        "exclusiveMinimum": [ "minimum" ]\n    },\n    "default": {}\n}')),ic.defineVocabulary(cc,{validate:ac.validate,additionalItems:ac.additionalItems,additionalProperties:ac.additionalProperties,allOf:ac.allOf,anyOf:ac.anyOf,default:ac.metaData,definitions:ac.definitions,dependencies:ac.dependencies,description:ac.metaData,enum:ac.enum,format:ac.metaData,items:ac.items,maxItems:ac.maxItems,maxLength:ac.maxLength,maxProperties:ac.maxProperties,maximum:ac.maximumExclusiveMaximum,minItems:ac.minItems,minLength:ac.minLength,minProperties:ac.minProperties,minimum:ac.minimumExclusiveMinimum,multipleOf:ac.multipleOf,not:ac.not,oneOf:ac.oneOf,pattern:ac.pattern,patternProperties:ac.patternProperties,properties:ac.properties,required:ac.required,title:ac.metaData,type:ac.type,uniqueItems:ac.uniqueItems});const lc="http://json-schema.org/draft-04/hyper-schema";oc.setConfig(lc,"baseToken","id"),oc.setConfig(lc,"embeddedToken","id"),oc.setConfig(lc,"anchorToken","id"),oc.setConfig(lc,"jrefToken","$ref"),oc.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-04/hyper-schema#",\n    "id": "http://json-schema.org/draft-04/hyper-schema#",\n    "title": "JSON Hyper-Schema",\n    "allOf": [\n        {"$ref": "http://json-schema.org/draft-04/schema#"}\n    ],\n    "properties": {\n        "additionalItems": {\n            "anyOf": [\n                {"type": "boolean"},\n                {"$ref": "#"}\n            ]\n        },\n        "additionalProperties": {\n            "anyOf": [\n                {"type": "boolean"},\n                {"$ref": "#"}\n            ]\n        },\n        "dependencies": {\n            "additionalProperties": {\n                "anyOf": [\n                    {"$ref": "#"},\n                    {"type": "array"}\n                ]\n            }\n        },\n        "items": {\n            "anyOf": [\n                {"$ref": "#"},\n                {"$ref": "#/definitions/schemaArray"}\n            ]\n        },\n        "definitions": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "patternProperties": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "properties": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "allOf": {"$ref": "#/definitions/schemaArray"},\n        "anyOf": {"$ref": "#/definitions/schemaArray"},\n        "oneOf": {"$ref": "#/definitions/schemaArray"},\n        "not": { "$ref": "#" },\n\n        "links": {\n            "type": "array",\n            "items": {"$ref": "#/definitions/linkDescription"}\n        },\n        "fragmentResolution": {\n            "type": "string"\n        },\n        "media": {\n            "type": "object",\n            "properties": {\n                "type": {\n                    "description": "A media type, as described in RFC 2046",\n                    "type": "string"\n                },\n                "binaryEncoding": {\n                    "description": "A content encoding scheme, as described in RFC 2045",\n                    "type": "string"\n                }\n            }\n        },\n        "pathStart": {\n            "description": "Instances\' URIs must start with this value for this schema to apply to them",\n            "type": "string",\n            "format": "uri"\n        }\n    },\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "items": {"$ref": "#"}\n        },\n        "linkDescription": {\n            "title": "Link Description Object",\n            "type": "object",\n            "required": ["href", "rel"],\n            "properties": {\n                "href": {\n                    "description": "a URI template, as defined by RFC 6570, with the addition of the $, ( and ) characters for pre-processing",\n                    "type": "string"\n                },\n                "rel": {\n                    "description": "relation to the target resource of the link",\n                    "type": "string"\n                },\n                "title": {\n                    "description": "a title for the link",\n                    "type": "string"\n                },\n                "targetSchema": {\n                    "description": "JSON Schema describing the link target",\n                    "$ref": "#"\n                },\n                "mediaType": {\n                    "description": "media type (as defined by RFC 2046) describing the link target",\n                    "type": "string"\n                },\n                "method": {\n                    "description": "method for requesting the target of the link (e.g. for HTTP this might be \\"GET\\" or \\"DELETE\\")",\n                    "type": "string"\n                },\n                "encType": {\n                    "description": "The media type in which to submit data along with the request",\n                    "type": "string",\n                    "default": "application/json"\n                },\n                "schema": {\n                    "description": "Schema describing the data to submit along with the request",\n                    "$ref": "#"\n                }\n            }\n        },\n        "readOnly": {\n            "description": "If true, indicates that the value of this property is controlled by the server.",\n            "type": "boolean",\n            "default": false\n        }\n    },\n    "links": [\n        {\n            "rel": "self",\n            "href": "{+id}"\n        },\n        {\n            "rel": "full",\n            "href": "{+($ref)}"\n        }\n    ]\n}')),ic.defineVocabulary(lc,{validate:ac.validate,additionalItems:ac.additionalItems,additionalProperties:ac.additionalProperties,allOf:ac.allOf,anyOf:ac.anyOf,default:ac.metaData,definitions:ac.definitions,dependencies:ac.dependencies,description:ac.metaData,enum:ac.enum,format:ac.metaData,fragmentResolution:ac.metaData,items:ac.items,maxItems:ac.maxItems,minProperties:ac.minProperties,maxProperties:ac.maxProperties,maximum:ac.maximumExclusiveMaximum,media:ac.metaData,minItems:ac.minItems,minLength:ac.minLength,maxLength:ac.maxLength,minimum:ac.minimumExclusiveMinimum,multipleOf:ac.multipleOf,links:ac.metaData,not:ac.not,oneOf:ac.oneOf,pathStart:ac.metaData,pattern:ac.pattern,patternProperties:ac.patternProperties,properties:ac.properties,readOnly:ac.metaData,required:ac.required,title:ac.metaData,type:ac.type,uniqueItems:ac.uniqueItems});const{Core:uc,Schema:pc}=Vs,fc="http://json-schema.org/draft-06/schema";pc.setConfig(fc,"baseToken","$id"),pc.setConfig(fc,"embeddedToken","$id"),pc.setConfig(fc,"anchorToken","$id"),pc.setConfig(fc,"jrefToken","$ref"),pc.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-06/schema#",\n    "$id": "http://json-schema.org/draft-06/schema#",\n    "title": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "allOf": [\n                { "$ref": "#/definitions/nonNegativeInteger" },\n                { "default": 0 }\n            ]\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    },\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": {},\n        "examples": {\n            "type": "array",\n            "items": {}\n        },\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minLength": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": { "$ref": "#" },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": {}\n        },\n        "maxItems": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minItems": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "contains": { "$ref": "#" },\n        "maxProperties": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": { "$ref": "#" },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "propertyNames": { "$ref": "#" },\n        "const": {},\n        "enum": {\n            "type": "array",\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "default": {}\n}')),uc.defineVocabulary(fc,{validate:ac.validate,additionalItems:ac.additionalItems6,additionalProperties:ac.additionalProperties6,allOf:ac.allOf,anyOf:ac.anyOf,const:ac.const,contains:ac.contains,default:ac.metaData,definitions:ac.definitions,dependencies:ac.dependencies,description:ac.metaData,enum:ac.enum,examples:ac.metaData,exclusiveMaximum:ac.exclusiveMaximum,exclusiveMinimum:ac.exclusiveMinimum,format:ac.metaData,items:ac.items,maxItems:ac.maxItems,maxLength:ac.maxLength6,maxProperties:ac.maxProperties,maximum:ac.maximum,minItems:ac.minItems,minLength:ac.minLength6,minProperties:ac.minProperties,minimum:ac.minimum,multipleOf:ac.multipleOf,not:ac.not,oneOf:ac.oneOf,pattern:ac.pattern,patternProperties:ac.patternProperties,properties:ac.properties,propertyNames:ac.propertyNames,required:ac.required,title:ac.metaData,type:ac.type,uniqueItems:ac.uniqueItems});const{Core:mc,Schema:hc}=Vs,dc="http://json-schema.org/draft-07/schema";hc.setConfig(dc,"baseToken","$id"),hc.setConfig(dc,"embeddedToken","$id"),hc.setConfig(dc,"anchorToken","$id"),hc.setConfig(dc,"jrefToken","$ref"),hc.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-07/schema#",\n    "$id": "http://json-schema.org/draft-07/schema#",\n    "title": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "allOf": [\n                { "$ref": "#/definitions/nonNegativeInteger" },\n                { "default": 0 }\n            ]\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    },\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        },\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minLength": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": { "$ref": "#" },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": true\n        },\n        "maxItems": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minItems": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "contains": { "$ref": "#" },\n        "maxProperties": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": { "$ref": "#" },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "propertyNames": { "$ref": "#" },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true,\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "if": { "$ref": "#" },\n        "then": { "$ref": "#" },\n        "else": { "$ref": "#" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "default": true\n}')),mc.defineVocabulary(dc,{validate:ac.validate,additionalItems:ac.additionalItems6,additionalProperties:ac.additionalProperties6,allOf:ac.allOf,anyOf:ac.anyOf,const:ac.const,contains:ac.contains,default:ac.metaData,definitions:ac.definitions,dependencies:ac.dependencies,description:ac.metaData,enum:ac.enum,exclusiveMaximum:ac.exclusiveMaximum,exclusiveMinimum:ac.exclusiveMinimum,format:ac.metaData,if:ac.if,then:ac.then,else:ac.else,items:ac.items,maxItems:ac.maxItems,maxLength:ac.maxLength6,maxProperties:ac.maxProperties,maximum:ac.maximum,minItems:ac.minItems,minLength:ac.minLength6,minProperties:ac.minProperties,minimum:ac.minimum,multipleOf:ac.multipleOf,not:ac.not,oneOf:ac.oneOf,pattern:ac.pattern,patternProperties:ac.patternProperties,properties:ac.properties,propertyNames:ac.propertyNames,readOnly:ac.metaData,required:ac.required,title:ac.metaData,type:ac.type,uniqueItems:ac.uniqueItems,writeOnly:ac.metaData});const{Core:yc,Schema:gc}=Vs,vc="https://json-schema.org/draft/2019-09/schema";gc.setConfig(vc,"baseToken","$id"),gc.setConfig(vc,"embeddedToken","$id"),gc.setConfig(vc,"anchorToken","$anchor"),gc.setConfig(vc,"recursiveAnchorToken","$recursiveAnchor"),gc.setConfig(vc,"vocabularyToken","$vocabulary"),gc.setConfig(vc,"mandatoryVocabularies",["https://json-schema.org/draft/2019-09/vocab/core"]),gc.add(JSON.parse('{\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$id": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2019-09/vocab/core": true,\n        "https://json-schema.org/draft/2019-09/vocab/applicator": true,\n        "https://json-schema.org/draft/2019-09/vocab/validation": true,\n        "https://json-schema.org/draft/2019-09/vocab/meta-data": true,\n        "https://json-schema.org/draft/2019-09/vocab/format": false,\n        "https://json-schema.org/draft/2019-09/vocab/content": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        {"$ref": "meta/core"},\n        {"$ref": "meta/applicator"},\n        {"$ref": "meta/validation"},\n        {"$ref": "meta/meta-data"},\n        {"$ref": "meta/format"},\n        {"$ref": "meta/content"}\n    ],\n    "type": ["object", "boolean"],\n    "properties": {\n        "definitions": {\n            "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "$comment": "\\"dependencies\\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \\"dependentSchemas\\" and \\"dependentRequired\\"",\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$recursiveRef": "#" },\n                    { "$ref": "meta/validation#/$defs/stringArray" }\n                ]\n            }\n        }\n    }\n}')),gc.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/core",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/core": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference",\n            "$comment": "Non-empty fragments not allowed.",\n            "pattern": "^[^#]*#?$"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$anchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z][-A-Za-z0-9.:_]*$"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$recursiveRef": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$recursiveAnchor": {\n            "type": "boolean",\n            "default": false\n        },\n        "$vocabulary": {\n            "type": "object",\n            "propertyNames": {\n                "type": "string",\n                "format": "uri"\n            },\n            "additionalProperties": {\n                "type": "boolean"\n            }\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "$defs": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        }\n    }\n}')),yc.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/core",{validate:ac.validate,$defs:ac.definitions,$recursiveRef:ac.dynamicRef,$ref:ac.ref}),gc.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/applicator",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2019-09/vocab/applicator": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Applicator vocabulary meta-schema",\n    "properties": {\n        "additionalItems": { "$recursiveRef": "#" },\n        "unevaluatedItems": { "$recursiveRef": "#" },\n        "items": {\n            "anyOf": [\n                { "$recursiveRef": "#" },\n                { "$ref": "#/$defs/schemaArray" }\n            ]\n        },\n        "contains": { "$recursiveRef": "#" },\n        "additionalProperties": { "$recursiveRef": "#" },\n        "unevaluatedProperties": { "$recursiveRef": "#" },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependentSchemas": {\n            "type": "object",\n            "additionalProperties": {\n                "$recursiveRef": "#"\n            }\n        },\n        "propertyNames": { "$recursiveRef": "#" },\n        "if": { "$recursiveRef": "#" },\n        "then": { "$recursiveRef": "#" },\n        "else": { "$recursiveRef": "#" },\n        "allOf": { "$ref": "#/$defs/schemaArray" },\n        "anyOf": { "$ref": "#/$defs/schemaArray" },\n        "oneOf": { "$ref": "#/$defs/schemaArray" },\n        "not": { "$recursiveRef": "#" }\n    },\n    "$defs": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$recursiveRef": "#" }\n        }\n    }\n}')),yc.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/applicator",{additionalItems:ac.additionalItems6,additionalProperties:ac.additionalProperties6,allOf:ac.allOf,anyOf:ac.anyOf,contains:ac.containsMinContainsMaxContains,dependentSchemas:ac.dependentSchemas,if:ac.if,then:ac.then,else:ac.else,items:ac.items,not:ac.not,oneOf:ac.oneOf,patternProperties:ac.patternProperties,properties:ac.properties,propertyNames:ac.propertyNames,unevaluatedItems:ac.unevaluatedItems,unevaluatedProperties:ac.unevaluatedProperties}),gc.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/validation",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/validation": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Validation vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minContains": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 1\n        },\n        "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/$defs/stringArray" },\n        "dependentRequired": {\n            "type": "object",\n            "additionalProperties": {\n                "$ref": "#/$defs/stringArray"\n            }\n        },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/$defs/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/$defs/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        }\n    },\n    "$defs": {\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 0\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    }\n}')),yc.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/validation",{const:ac.const,dependentRequired:ac.dependentRequired,enum:ac.enum,exclusiveMaximum:ac.exclusiveMaximum,exclusiveMinimum:ac.exclusiveMinimum,maxItems:ac.maxItems,maxLength:ac.maxLength6,maxProperties:ac.maxProperties,maximum:ac.maximum,minItems:ac.minItems,minLength:ac.minLength6,minProperties:ac.minProperties,minimum:ac.minimum,multipleOf:ac.multipleOf,pattern:ac.pattern,required:ac.required,type:ac.type,uniqueItems:ac.uniqueItems}),gc.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/meta-data",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/meta-data": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Meta-data vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "deprecated": {\n            "type": "boolean",\n            "default": false\n        },\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        }\n    }\n}')),yc.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/meta-data",{default:ac.metaData,deprecated:ac.metaData,description:ac.metaData,examples:ac.metaData,readOnly:ac.metaData,title:ac.metaData,writeOnly:ac.metaData}),gc.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/format",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/format": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Format vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),gc.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/content",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/content": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Content vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "contentSchema": { "$recursiveRef": "#" }\n    }\n}')),yc.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/content",{contentEncoding:ac.metaData,contentMediaType:ac.metaData,contentSchema:ac.metaData});const{Core:bc,Schema:$c}=Vs,wc="https://json-schema.org/draft/2020-12/schema";$c.setConfig(wc,"baseToken","$id"),$c.setConfig(wc,"embeddedToken","$id"),$c.setConfig(wc,"anchorToken","$anchor"),$c.setConfig(wc,"dynamicAnchorToken","$dynamicAnchor"),$c.setConfig(wc,"vocabularyToken","$vocabulary"),$c.setConfig(wc,"mandatoryVocabularies",["https://json-schema.org/draft/2020-12/vocab/core"]),$c.add(JSON.parse('{\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$id": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/core": true,\n        "https://json-schema.org/draft/2020-12/vocab/applicator": true,\n        "https://json-schema.org/draft/2020-12/vocab/unevaluated": true,\n        "https://json-schema.org/draft/2020-12/vocab/validation": true,\n        "https://json-schema.org/draft/2020-12/vocab/meta-data": true,\n        "https://json-schema.org/draft/2020-12/vocab/format-annotation": true,\n        "https://json-schema.org/draft/2020-12/vocab/content": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        {"$ref": "meta/core"},\n        {"$ref": "meta/applicator"},\n        {"$ref": "meta/unevaluated"},\n        {"$ref": "meta/validation"},\n        {"$ref": "meta/meta-data"},\n        {"$ref": "meta/format-annotation"},\n        {"$ref": "meta/content"}\n    ],\n    "type": ["object", "boolean"],\n    "properties": {\n        "definitions": {\n            "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        },\n        "dependencies": {\n            "$comment": "\\"dependencies\\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \\"dependentSchemas\\" and \\"dependentRequired\\"",\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$dynamicRef": "#meta" },\n                    { "$ref": "meta/validation#/$defs/stringArray" }\n                ]\n            }\n        }\n    }\n}')),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/core",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/core": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Core vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference",\n            "$comment": "Non-empty fragments not allowed.",\n            "pattern": "^[^#]*#?$"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$anchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicRef": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicAnchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$"\n        },\n        "$vocabulary": {\n            "type": "object",\n            "propertyNames": {\n                "type": "string",\n                "format": "uri"\n            },\n            "additionalProperties": {\n                "type": "boolean"\n            }\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "$defs": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        }\n    }\n}')),bc.defineVocabulary("https://json-schema.org/draft/2020-12/vocab/core",{validate:ac.validate,$defs:ac.definitions,$dynamicRef:ac.dynamicRef,$ref:ac.ref}),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/applicator",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/applicator": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Applicator vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "prefixItems": { "$ref": "#/$defs/schemaArray" },\n        "items": { "$dynamicRef": "#meta" },\n        "contains": { "$dynamicRef": "#meta" },\n        "additionalProperties": { "$dynamicRef": "#meta" },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependentSchemas": {\n            "type": "object",\n            "additionalProperties": {\n                "$dynamicRef": "#meta"\n            }\n        },\n        "propertyNames": { "$dynamicRef": "#meta" },\n        "if": { "$dynamicRef": "#meta" },\n        "then": { "$dynamicRef": "#meta" },\n        "else": { "$dynamicRef": "#meta" },\n        "allOf": { "$ref": "#/$defs/schemaArray" },\n        "anyOf": { "$ref": "#/$defs/schemaArray" },\n        "oneOf": { "$ref": "#/$defs/schemaArray" },\n        "not": { "$dynamicRef": "#meta" }\n    },\n    "$defs": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$dynamicRef": "#meta" }\n        }\n    }\n}')),bc.defineVocabulary("https://json-schema.org/draft/2020-12/vocab/applicator",{additionalProperties:ac.additionalProperties6,allOf:ac.allOf,anyOf:ac.anyOf,contains:ac.containsMinContainsMaxContains,dependentSchemas:ac.dependentSchemas,if:ac.if,then:ac.then,else:ac.else,items:ac.items202012,not:ac.not,oneOf:ac.oneOf,patternProperties:ac.patternProperties,prefixItems:ac.tupleItems,properties:ac.properties,propertyNames:ac.propertyNames}),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/validation",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/validation": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Validation vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minContains": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 1\n        },\n        "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/$defs/stringArray" },\n        "dependentRequired": {\n            "type": "object",\n            "additionalProperties": {\n                "$ref": "#/$defs/stringArray"\n            }\n        },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/$defs/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/$defs/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        }\n    },\n    "$defs": {\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 0\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    }\n}')),bc.defineVocabulary("https://json-schema.org/draft/2020-12/vocab/validation",{const:ac.const,dependentRequired:ac.dependentRequired,enum:ac.enum,exclusiveMaximum:ac.exclusiveMaximum,exclusiveMinimum:ac.exclusiveMinimum,maxItems:ac.maxItems,maxLength:ac.maxLength6,maxProperties:ac.maxProperties,maximum:ac.maximum,minItems:ac.minItems,minLength:ac.minLength6,minProperties:ac.minProperties,minimum:ac.minimum,multipleOf:ac.multipleOf,pattern:ac.pattern,required:ac.required,type:ac.type,uniqueItems:ac.uniqueItems}),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/meta-data",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/meta-data": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Meta-data vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "deprecated": {\n            "type": "boolean",\n            "default": false\n        },\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        }\n    }\n}')),bc.defineVocabulary("https://json-schema.org/draft/2020-12/vocab/meta-data",{default:ac.metaData,deprecated:ac.metaData,description:ac.metaData,examples:ac.metaData,readOnly:ac.metaData,title:ac.metaData,writeOnly:ac.metaData}),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/format-annotation",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/format-annotation": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Format vocabulary meta-schema for annotation results",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),bc.defineVocabulary("https://json-schema.org/draft/2020-12/vocab/format-annotation",{format:ac.metaData}),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/format-assertion",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/format-assertion": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Format vocabulary meta-schema for assertion results",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/content",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/content": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Content vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "contentSchema": { "$dynamicRef": "#meta" }\n    }\n}')),bc.defineVocabulary("https://json-schema.org/draft/2020-12/vocab/content",{contentEncoding:ac.metaData,contentMediaType:ac.metaData,contentSchema:ac.metaData}),$c.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2020-12/meta/unevaluated",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/unevaluated": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Unevaluated applicator vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "unevaluatedItems": { "$dynamicRef": "#meta" },\n        "unevaluatedProperties": { "$dynamicRef": "#meta" }\n    }\n}')),bc.defineVocabulary("https://json-schema.org/draft/2020-12/vocab/unevaluated",{unevaluatedItems:ac.unevaluatedItems,unevaluatedProperties:ac.unevaluatedProperties});const{Core:Sc,Schema:Oc}=Vs;var Ec={add:Sc.add,get:Oc.get,validate:Sc.validate,compile:Sc.compile,interpret:Sc.interpret,setMetaOutputFormat:Sc.setMetaOutputFormat,setShouldMetaValidate:Sc.setShouldMetaValidate,FLAG:Sc.FLAG,BASIC:Sc.BASIC,DETAILED:Sc.DETAILED,VERBOSE:Sc.VERBOSE,Keywords:ac};Ec.add,Ec.get,Ec.validate,Ec.compile,Ec.interpret,Ec.setMetaOutputFormat,Ec.setShouldMetaValidate,Ec.FLAG,Ec.BASIC,Ec.DETAILED,Ec.VERBOSE,Ec.Keywords;var kc=Wn((function(e){var t,n;t=zn,n=function(){var e=Object.prototype.hasOwnProperty,t=Object.prototype.toString,n="boolean"==typeof(new RegExp).sticky;function r(e){return e&&"[object RegExp]"===t.call(e)}function s(e){return e&&"object"==typeof e&&!r(e)&&!Array.isArray(e)}function a(e){return"("+e+")"}function i(e){return e.length?"(?:"+e.map((function(e){return"(?:"+e+")"})).join("|")+")":"(?!)"}function o(e){if("string"==typeof e)return"(?:"+e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")+")";if(r(e)){if(e.ignoreCase)throw new Error("RegExp /i flag not allowed");if(e.global)throw new Error("RegExp /g flag is implied");if(e.sticky)throw new Error("RegExp /y flag is implied");if(e.multiline)throw new Error("RegExp /m flag is implied");return e.source}throw new Error("Not a pattern: "+e)}function c(t,n){if(s(n)||(n={match:n}),n.include)throw new Error("Matching rules cannot also include states");var a={defaultType:t,lineBreaks:!!n.error||!!n.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var i in n)e.call(n,i)&&(a[i]=n[i]);if("string"==typeof a.type&&t!==a.type)throw new Error("Type transform cannot be a string (type '"+a.type+"' for token '"+t+"')");var o=a.match;return a.match=Array.isArray(o)?o:o?[o]:[],a.match.sort((function(e,t){return r(e)&&r(t)?0:r(t)?-1:r(e)?1:t.length-e.length})),a}function l(e){return Array.isArray(e)?function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(r.include)for(var s=[].concat(r.include),a=0;a<s.length;a++)t.push({include:s[a]});else{if(!r.type)throw new Error("Rule has no type: "+JSON.stringify(r));t.push(c(r.type,r))}}return t}(e):function(e){for(var t=Object.getOwnPropertyNames(e),n=[],r=0;r<t.length;r++){var a=t[r],i=e[a],o=[].concat(i);if("include"!==a){var l=[];o.forEach((function(e){s(e)?(l.length&&n.push(c(a,l)),n.push(c(a,e)),l=[]):l.push(e)})),l.length&&n.push(c(a,l))}else for(var u=0;u<o.length;u++)n.push({include:o[u]})}return n}(e)}var u=c("error",{lineBreaks:!0,shouldThrow:!0});function p(e,t){for(var s=null,c=Object.create(null),l=!0,p=null,f=[],m=[],h=0;h<e.length;h++)e[h].fallback&&(l=!1);for(h=0;h<e.length;h++){var d=e[h];if(d.include)throw new Error("Inheritance is not allowed in stateless lexers");if(d.error||d.fallback){if(s)throw!d.fallback==!s.fallback?new Error("Multiple "+(d.fallback?"fallback":"error")+" rules not allowed (for token '"+d.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+d.defaultType+"')");s=d}var y=d.match.slice();if(l)for(;y.length&&"string"==typeof y[0]&&1===y[0].length;)c[y.shift().charCodeAt(0)]=d;if(d.pop||d.push||d.next){if(!t)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+d.defaultType+"')");if(d.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+d.defaultType+"')")}if(0!==y.length){l=!1,f.push(d);for(var g=0;g<y.length;g++){var v=y[g];if(r(v))if(null===p)p=v.unicode;else if(p!==v.unicode&&!1===d.fallback)throw new Error("If one rule is /u then all must be")}var b=i(y.map(o)),$=new RegExp(b);if($.test(""))throw new Error("RegExp matches empty string: "+$);if(new RegExp("|"+b).exec("").length-1>0)throw new Error("RegExp has capture groups: "+$+"\nUse (?: … ) instead");if(!d.lineBreaks&&$.test("\n"))throw new Error("Rule should declare lineBreaks: "+$);m.push(a(b))}}var w=s&&s.fallback,S=n&&!w?"ym":"gm",O=n||w?"":"|";return!0===p&&(S+="u"),{regexp:new RegExp(i(m)+O,S),groups:f,fast:c,error:s||u}}function f(e,t,n){var r=e&&(e.push||e.next);if(r&&!n[r])throw new Error("Missing state '"+r+"' (in token '"+e.defaultType+"' of state '"+t+"')");if(e&&e.pop&&1!=+e.pop)throw new Error("pop must be 1 (in token '"+e.defaultType+"' of state '"+t+"')")}var m=function(e,t){this.startState=t,this.states=e,this.buffer="",this.stack=[],this.reset()};m.prototype.reset=function(e,t){return this.buffer=e||"",this.index=0,this.line=t?t.line:1,this.col=t?t.col:1,this.queuedToken=t?t.queuedToken:null,this.queuedThrow=t?t.queuedThrow:null,this.setState(t?t.state:this.startState),this.stack=t&&t.stack?t.stack.slice():[],this},m.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},m.prototype.setState=function(e){if(e&&this.state!==e){this.state=e;var t=this.states[e];this.groups=t.groups,this.error=t.error,this.re=t.regexp,this.fast=t.fast}},m.prototype.popState=function(){this.setState(this.stack.pop())},m.prototype.pushState=function(e){this.stack.push(this.state),this.setState(e)};var h=n?function(e,t){return e.exec(t)}:function(e,t){var n=e.exec(t);return 0===n[0].length?null:n};function d(){return this.value}if(m.prototype._getGroup=function(e){for(var t=this.groups.length,n=0;n<t;n++)if(void 0!==e[n+1])return this.groups[n];throw new Error("Cannot find token type for matched text")},m.prototype.next=function(){var e=this.index;if(this.queuedGroup){var t=this._token(this.queuedGroup,this.queuedText,e);return this.queuedGroup=null,this.queuedText="",t}var n=this.buffer;if(e!==n.length){if(i=this.fast[n.charCodeAt(e)])return this._token(i,n.charAt(e),e);var r=this.re;r.lastIndex=e;var s=h(r,n),a=this.error;if(null==s)return this._token(a,n.slice(e,n.length),e);var i=this._getGroup(s),o=s[0];return a.fallback&&s.index!==e?(this.queuedGroup=i,this.queuedText=o,this._token(a,n.slice(e,s.index),e)):this._token(i,o,e)}},m.prototype._token=function(e,t,n){var r=0;if(e.lineBreaks){var s=/\n/g,a=1;if("\n"===t)r=1;else for(;s.exec(t);)r++,a=s.lastIndex}var i={type:"function"==typeof e.type&&e.type(t)||e.defaultType,value:"function"==typeof e.value?e.value(t):t,text:t,toString:d,offset:n,lineBreaks:r,line:this.line,col:this.col},o=t.length;if(this.index+=o,this.line+=r,0!==r?this.col=o-a+1:this.col+=o,e.shouldThrow)throw new Error(this.formatError(i,"invalid syntax"));return e.pop?this.popState():e.push?this.pushState(e.push):e.next&&this.setState(e.next),i},"undefined"!=typeof Symbol&&Symbol.iterator){var y=function(e){this.lexer=e};y.prototype.next=function(){var e=this.lexer.next();return{value:e,done:!e}},y.prototype[Symbol.iterator]=function(){return this},m.prototype[Symbol.iterator]=function(){return new y(this)}}return m.prototype.formatError=function(e,t){if(null==e){var n=this.buffer.slice(this.index);e={text:n,offset:this.index,lineBreaks:-1===n.indexOf("\n")?0:1,line:this.line,col:this.col}}var r=Math.max(0,e.offset-e.col+1),s=e.lineBreaks?e.text.indexOf("\n"):e.text.length,a=this.buffer.substring(r,e.offset+s);return t+=" at line "+e.line+" col "+e.col+":\n\n",t+="  "+a+"\n",t+="  "+Array(e.col).join(" ")+"^"},m.prototype.clone=function(){return new m(this.states,this.state)},m.prototype.has=function(e){return!0},{compile:function(e){var t=p(l(e));return new m({start:t},"start")},states:function(e,t){var n=e.$all?l(e.$all):[];delete e.$all;var r=Object.getOwnPropertyNames(e);t||(t=r[0]);for(var s=Object.create(null),a=0;a<r.length;a++)s[b=r[a]]=l(e[b]).concat(n);for(a=0;a<r.length;a++)for(var i=s[b=r[a]],o=Object.create(null),c=0;c<i.length;c++){var u=i[c];if(u.include){var h=[c,1];if(u.include!==b&&!o[u.include]){o[u.include]=!0;var d=s[u.include];if(!d)throw new Error("Cannot include nonexistent state '"+u.include+"' (in state '"+b+"')");for(var y=0;y<d.length;y++){var g=d[y];-1===i.indexOf(g)&&h.push(g)}}i.splice.apply(i,h),c--}}var v=Object.create(null);for(a=0;a<r.length;a++){var b;v[b=r[a]]=p(s[b],!0)}for(a=0;a<r.length;a++){var $=r[a],w=v[$],S=w.groups;for(c=0;c<S.length;c++)f(S[c],$,v);var O=Object.getOwnPropertyNames(w.fast);for(c=0;c<O.length;c++)f(w.fast[O[c]],$,v)}return new m(v,t)},error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:function(e){for(var t=Object.create(null),n=Object.create(null),r=Object.getOwnPropertyNames(e),s=0;s<r.length;s++){var a=r[s],i=e[a];(Array.isArray(i)?i:[i]).forEach((function(e){if((n[e.length]=n[e.length]||[]).push(e),"string"!=typeof e)throw new Error("keyword must be string (in keyword '"+a+"')");t[e]=a}))}function o(e){return JSON.stringify(e)}var c="";for(var l in c+="switch (value.length) {\n",n){var u=n[l];c+="case "+l+":\n",c+="switch (value) {\n",u.forEach((function(e){var n=t[e];c+="case "+o(e)+": return "+o(n)+"\n"})),c+="}\n"}return c+="}\n",Function("value",c)}}},e.exports?e.exports=n():t.moo=n()}));const Ic='(?:\\\\["\\/\\\\brfnt]|\\\\u[0-9a-fA-F]{4}|[^"\\\\])';var xc=kc.states({main:{WS:{match:new RegExp("(?:(?:\r?\n)|[ \t])+"),lineBreaks:!0},accent7:new RegExp("true|false|-?(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][-+]?[0-9]+)?"),accent3:["{","}","[","]"],accent6:"null",stringProperty:{match:new RegExp('"(?=[^"]*"\\s*:)'),push:"property"},stringStart:{match:'"',push:"string"},other:/./},string:{accent7:{match:new RegExp(`${Ic}+`),lineBreaks:!0},stringEnd:{match:'"',pop:!0},other:/./},property:{accent1:{match:new RegExp(`${Ic}+`),lineBreaks:!0},propertyEnd:{match:'"',pop:!0},other:/./}});const jc="(?:\"(?:\\\\[\"\\/\\\\brfnt]|\\\\u[0-9a-fA-F]{4}|[^\"\\\\])*\"|'(?:\\\\['\\/\\\\brfnt]|\\\\u[0-9a-fA-F]{4}|[^'\\\\])*')",Nc="-?(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][-+]?[0-9]+)?";var Ac=kc.states({main:{WS:{match:new RegExp("(?:\r?\n)+"),lineBreaks:!0},indent:new RegExp("^[ \\t]+"),comment:new RegExp("#[^\n]*"),inlineArray:{match:"[",type:kc.keywords({accent3:"["}),push:"inlineArray"},inlineObject:{match:["{"],type:kc.keywords({accent3:"{"}),push:"inlineObject"},accent1:new RegExp("-[ \\t]+"),accent7:["true","false","null",new RegExp(jc),new RegExp(Nc)],accent6:new RegExp("[^\\s]+(?=[ \\t]*:(?:[ \\t]+|$))"),accent3:{match:new RegExp("[ \\t]*:(?:[ \\t]+|$)"),lineBreaks:!0,push:"property"},other:/[^#\n]+/},property:{WS:{match:new RegExp("(?:\r?\n)+"),lineBreaks:!0,pop:1},comment:new RegExp("#[^\n]*"),accent7:{match:["true","false","null",new RegExp(jc),new RegExp(Nc)],pop:1},other:/[^#\n]+/},inlineArray:{WS:new RegExp("[ \\t]+"),comment:new RegExp("#[^\n]*"),inlineArray:{match:"[",type:kc.keywords({accent3:"["}),push:"inlineArray"},inlineObject:{match:["{"],type:kc.keywords({accent3:"{"}),push:"inlineObject"},close:{match:"]",type:kc.keywords({accent3:"]"}),pop:1},comma:",",accent7:["true","false","null",new RegExp(jc),new RegExp(Nc)],accent6:new RegExp("[^\\s]+(?=[ \\t]*:)"),accent3:{match:new RegExp("[ \\t]*:"),lineBreaks:!0},other:/[^\]\n,#]+/},inlineObject:{WS:new RegExp("[ \\t]+"),comment:new RegExp("#[^\n]*"),inlineArray:{match:"[",type:kc.keywords({accent3:"["}),push:"inlineArray"},inlineObject:{match:["{"],type:kc.keywords({accent3:"{"}),push:"inlineObject"},close:{match:"}",type:kc.keywords({accent3:"}"}),pop:1},comma:",",accent7:["true","false","null",new RegExp(jc),new RegExp(Nc)],accent6:new RegExp("[^\\s]+(?=[ \\t]*:)"),accent3:{match:new RegExp("[ \\t]*:"),lineBreaks:!0},other:/[^}\n,#]+/}});function Tc(e,t,n){const r=e.slice();return r[10]=t[n],r}function Cc(e,t,n){const r=e.slice();return r[13]=t[n],r[15]=n,r}function Pc(e){let t,n,m=e[15]+1+"";return{c(){t=r("div"),n=s(m),this.h()},l(e){t=a(e,"DIV",{class:!0});var r=i(t);n=o(r,m),r.forEach(c),this.h()},h(){l(t,"class","svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p:f,d(e){e&&c(t)}}}function Lc(e){let t,n=e[10].value+"";return{c(){t=s(n)},l(e){t=o(e,n)},m(e,n){u(e,t,n)},p(e,r){16&r&&n!==(n=e[10].value+"")&&S(t,n)},d(e){e&&c(t)}}}function Rc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent8 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function Dc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent7 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function Mc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent6 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function qc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent5 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function _c(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent4 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function Bc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent3 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function Vc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent2 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function Kc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","accent1 svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function Uc(e){let t,n,f=e[10].value+"";return{c(){t=r("span"),n=s(f),this.h()},l(e){t=a(e,"SPAN",{class:!0});var r=i(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","comment svelte-564293")},m(e,r){u(e,t,r),p(t,n)},p(e,t){16&t&&f!==(f=e[10].value+"")&&S(n,f)},d(e){e&&c(t)}}}function Fc(e){let t;function n(e,t){return"comment"===e[10].type?Uc:"accent1"===e[10].type?Kc:"accent2"===e[10].type?Vc:"accent3"===e[10].type?Bc:"accent4"===e[10].type?_c:"accent5"===e[10].type?qc:"accent6"===e[10].type?Mc:"accent7"===e[10].type?Dc:"accent8"===e[10].type?Rc:Lc}let r=n(e),s=r(e);return{c(){s.c(),t=m()},l(e){s.l(e),t=m()},m(e,n){s.m(e,n),u(e,t,n)},p(e,a){r===(r=n(e))&&s?s.p(e,a):(s.d(1),s=r(e),s&&(s.c(),s.m(t.parentNode,t)))},d(e){s.d(e),e&&c(t)}}}function Jc(e){let t,n,s,o,m,$,w,S,O,E,k=[...Array(e[3])],I=[];for(let t=0;t<k.length;t+=1)I[t]=Pc(Cc(e,k,t));let x=e[4],j=[];for(let t=0;t<x.length;t+=1)j[t]=Fc(Tc(e,x,t));return{c(){t=r("div"),n=r("div");for(let e=0;e<I.length;e+=1)I[e].c();s=h(),o=r("div"),m=r("pre");for(let e=0;e<j.length;e+=1)j[e].c();$=h(),w=r("textarea"),this.h()},l(e){t=a(e,"DIV",{class:!0});var r=i(t);n=a(r,"DIV",{class:!0});var l=i(n);for(let e=0;e<I.length;e+=1)I[e].l(l);l.forEach(c),s=d(r),o=a(r,"DIV",{class:!0});var u=i(o);m=a(u,"PRE",{class:!0});var p=i(m);for(let e=0;e<j.length;e+=1)j[e].l(p);p.forEach(c),$=d(u),w=a(u,"TEXTAREA",{class:!0,"aria-label":!0}),i(w).forEach(c),u.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","line-numbers svelte-564293"),l(m,"class","highlighted svelte-564293"),l(w,"class","src svelte-564293"),l(w,"aria-label","Code Editor"),l(o,"class","editable svelte-564293"),l(t,"class",S="Editor "+e[1]+" svelte-564293")},m(r,a){u(r,t,a),p(t,n);for(let e=0;e<I.length;e+=1)I[e].m(n,null);p(t,s),p(t,o),p(o,m);for(let e=0;e<j.length;e+=1)j[e].m(m,null);p(o,$),p(o,w),e[8](w),y(w,e[0]),O||(E=[g(w,"input",e[9]),g(w,"input",e[7])],O=!0)},p(e,[r]){if(8&r){let t;for(k=[...Array(e[3])],t=0;t<k.length;t+=1){const s=Cc(e,k,t);I[t]?I[t].p(s,r):(I[t]=Pc(s),I[t].c(),I[t].m(n,null))}for(;t<I.length;t+=1)I[t].d(1);I.length=k.length}if(16&r){let t;for(x=e[4],t=0;t<x.length;t+=1){const n=Tc(e,x,t);j[t]?j[t].p(n,r):(j[t]=Fc(n),j[t].c(),j[t].m(m,null))}for(;t<j.length;t+=1)j[t].d(1);j.length=x.length}1&r&&y(w,e[0]),2&r&&S!==(S="Editor "+e[1]+" svelte-564293")&&l(t,"class",S)},i:f,o:f,d(n){n&&c(t),v(I,n),v(j,n),e[8](null),O=!1,b(E)}}}function Gc(e,t,n){let r,s,a,{theme:i="solarized-dark"}=t,{value:o=""}=t,{format:c="json"}=t;return e.$$set=e=>{"theme"in e&&n(1,i=e.theme),"value"in e&&n(0,o=e.value),"format"in e&&n(5,c=e.format)},e.$$.update=()=>{1&e.$$.dirty&&n(3,r=(o.match(/\n/g)||[]).length+1),33&e.$$.dirty&&n(4,s="json"===c?(xc.reset(o),Array.from(xc)):(Ac.reset(o),Array.from(Ac)))},[o,i,a,r,s,c,()=>{a.focus()},function(t){$(e,t)},function(e){w[e?"unshift":"push"]((()=>{a=e,n(2,a)}))},function(){o=this.value,n(0,o)}]}class zc extends e{constructor(e){super(),t(this,e,Gc,Jc,n,{theme:1,value:0,format:5,focus:6})}get focus(){return this.$$.ctx[6]}}function Wc(e,t,n){const r=e.slice();return r[18]=t[n],r[20]=n,r}function Yc(e){let t,n,f,m;function h(){return e[12](e[20])}return{c(){t=r("button"),n=s("×"),this.h()},l(e){t=a(e,"BUTTON",{class:!0});var r=i(t);n=o(r,"×"),r.forEach(c),this.h()},h(){l(t,"class","tab-close svelte-1ylgy73")},m(e,r){u(e,t,r),p(t,n),f||(m=g(t,"click",h),f=!0)},p(t,n){e=t},d(e){e&&c(t),f=!1,m()}}}function Hc(e){let t,n,f,m,y,v,b,$,w=e[18].label+"",E=!e[18].persistent&&e[0].length>e[6]&&Yc(e);function k(){return e[13](e[20])}return{c(){t=r("button"),n=r("span"),f=s(w),m=h(),E&&E.c(),this.h()},l(e){t=a(e,"BUTTON",{role:!0,id:!0,"aria-selected":!0,"aria-controls":!0,class:!0});var r=i(t);n=a(r,"SPAN",{class:!0});var s=i(n);f=o(s,w),s.forEach(c),m=d(r),E&&E.l(r),r.forEach(c),this.h()},h(){l(n,"class","tab-label svelte-1ylgy73"),l(t,"role","tab"),l(t,"id",y=`${e[3]}-tab-${e[20]}`),l(t,"aria-selected",v=e[20]===e[1]),l(t,"aria-controls","tabpanel"),l(t,"class","svelte-1ylgy73"),O(t,"active",e[20]===e[5])},m(e,r){u(e,t,r),p(t,n),p(n,f),p(t,m),E&&E.m(t,null),b||($=g(t,"click",k),b=!0)},p(n,r){e=n,1&r&&w!==(w=e[18].label+"")&&S(f,w),!e[18].persistent&&e[0].length>e[6]?E?E.p(e,r):(E=Yc(e),E.c(),E.m(t,null)):E&&(E.d(1),E=null),8&r&&y!==(y=`${e[3]}-tab-${e[20]}`)&&l(t,"id",y),2&r&&v!==(v=e[20]===e[1])&&l(t,"aria-selected",v),32&r&&O(t,"active",e[20]===e[5])},d(e){e&&c(t),E&&E.d(),b=!1,$()}}}function Qc(e){let t,n,f,m,h,d;return{c(){t=r("button"),n=r("span"),f=s("+"),this.h()},l(e){t=a(e,"BUTTON",{role:!0,id:!0,class:!0});var r=i(t);n=a(r,"SPAN",{class:!0});var s=i(n);f=o(s,"+"),s.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","tab-label svelte-1ylgy73"),l(t,"role","tab"),l(t,"id",m=`${e[3]}-tab-${e[0].length}`),l(t,"class","svelte-1ylgy73")},m(r,s){u(r,t,s),p(t,n),p(n,f),h||(d=g(t,"click",e[10]),h=!0)},p(e,n){9&n&&m!==(m=`${e[3]}-tab-${e[0].length}`)&&l(t,"id",m)},d(e){e&&c(t),h=!1,d()}}}function Xc(e){let t,n,s,o,f,m,y,g,b,$=e[0],S=[];for(let t=0;t<$.length;t+=1)S[t]=Hc(Wc(e,$,t));let O=e[4]&&Qc(e);function C(t){e[15](t)}function P(t){e[16](t)}let L={};return void 0!==e[0][e[1]].text&&(L.value=e[0][e[1]].text),void 0!==e[2]&&(L.format=e[2]),f=new zc({props:L}),e[14](f),w.push((()=>E(f,"value",C))),w.push((()=>E(f,"format",P))),f.$on("input",e[17]),{c(){t=r("div");for(let e=0;e<S.length;e+=1)S[e].c();n=h(),O&&O.c(),s=h(),o=r("div"),k(f.$$.fragment),this.h()},l(e){t=a(e,"DIV",{role:!0,class:!0});var r=i(t);for(let e=0;e<S.length;e+=1)S[e].l(r);n=d(r),O&&O.l(r),r.forEach(c),s=d(e),o=a(e,"DIV",{role:!0,id:!0,"aria-labelledby":!0,class:!0});var l=i(o);I(f.$$.fragment,l),l.forEach(c),this.h()},h(){l(t,"role","tablist"),l(t,"class","svelte-1ylgy73"),l(o,"role","tabpanel"),l(o,"id","tabpanel"),l(o,"aria-labelledby",g=`${e[3]}-tab-${e[1]}`),l(o,"class","svelte-1ylgy73")},m(e,r){u(e,t,r);for(let e=0;e<S.length;e+=1)S[e].m(t,null);p(t,n),O&&O.m(t,null),u(e,s,r),u(e,o,r),x(f,o,null),b=!0},p(e,[r]){if(2667&r){let s;for($=e[0],s=0;s<$.length;s+=1){const a=Wc(e,$,s);S[s]?S[s].p(a,r):(S[s]=Hc(a),S[s].c(),S[s].m(t,n))}for(;s<S.length;s+=1)S[s].d(1);S.length=$.length}e[4]?O?O.p(e,r):(O=Qc(e),O.c(),O.m(t,null)):O&&(O.d(1),O=null);const s={};!m&&3&r&&(m=!0,s.value=e[0][e[1]].text,j((()=>m=!1))),!y&&4&r&&(y=!0,s.format=e[2],j((()=>y=!1))),f.$set(s),(!b||10&r&&g!==(g=`${e[3]}-tab-${e[1]}`))&&l(o,"aria-labelledby",g)},i(e){b||(N(f.$$.fragment,e),b=!0)},o(e){A(f.$$.fragment,e),b=!1},d(n){n&&c(t),v(S,n),O&&O.d(),n&&c(s),n&&c(o),e[14](null),T(f)}}}function Zc(e,t,n){let r,{ns:s=""}=t,{tabs:a=[]}=t,{newTab:i}=t,{active:o=0}=t,{selected:c=0}=t,{minTabs:l=1}=t,{format:u="json"}=t;const p=C();function f(e){n(1,c=e),r.focus()}function m(e){c>=e&&c>0&&n(1,c-=1),a.splice(e,1),n(0,a),r.focus()}return e.$$set=e=>{"ns"in e&&n(3,s=e.ns),"tabs"in e&&n(0,a=e.tabs),"newTab"in e&&n(4,i=e.newTab),"active"in e&&n(5,o=e.active),"selected"in e&&n(1,c=e.selected),"minTabs"in e&&n(6,l=e.minTabs),"format"in e&&n(2,u=e.format)},[a,c,u,s,i,o,l,r,p,f,function(){n(0,a[a.length]=i(),a),n(1,c=a.length-1),r.focus()},m,e=>m(e),e=>f(e),function(e){w[e?"unshift":"push"]((()=>{r=e,n(7,r)}))},function(t){e.$$.not_equal(a[c].text,t)&&(a[c].text=t,n(0,a))},function(e){u=e,n(2,u)},e=>p("input",a)]}class el extends e{constructor(e){super(),t(this,e,Zc,Xc,n,{ns:3,tabs:0,newTab:4,active:5,selected:1,minTabs:6,format:2})}}function tl(e,t,n){const r=e.slice();return r[2]=t[n],r}function nl(e){let t;function n(e,t){return e[1].output?sl:rl}let r=n(e),s=r(e);return{c(){s.c(),t=m()},l(e){s.l(e),t=m()},m(e,n){s.m(e,n),u(e,t,n)},p(e,a){r===(r=n(e))&&s?s.p(e,a):(s.d(1),s=r(e),s&&(s.c(),s.m(t.parentNode,t)))},d(e){s.d(e),e&&c(t)}}}function rl(e){let t,n=e[1]+"";return{c(){t=s(n)},l(e){t=o(e,n)},m(e,n){u(e,t,n)},p(e,r){1&r&&n!==(n=e[1]+"")&&S(t,n)},d(e){e&&c(t)}}}function sl(e){let t,n,l=e[1].output.errors,p=[];for(let t=0;t<l.length;t+=1)p[t]=il(tl(e,l,t));return{c(){t=s("Invalid\n    "),n=r("ul");for(let e=0;e<p.length;e+=1)p[e].c()},l(e){t=o(e,"Invalid\n    "),n=a(e,"UL",{});var r=i(n);for(let e=0;e<p.length;e+=1)p[e].l(r);r.forEach(c)},m(e,r){u(e,t,r),u(e,n,r);for(let e=0;e<p.length;e+=1)p[e].m(n,null)},p(e,t){if(1&t){let r;for(l=e[1].output.errors,r=0;r<l.length;r+=1){const s=tl(e,l,r);p[r]?p[r].p(s,t):(p[r]=il(s),p[r].c(),p[r].m(n,null))}for(;r<p.length;r+=1)p[r].d(1);p.length=l.length}},d(e){e&&c(t),e&&c(n),v(p,e)}}}function al(e){let t,n,f,m,h,d,y=e[2].instanceLocation+"",g=e[2].absoluteKeywordLocation+"";return{c(){t=r("li"),n=r("code"),f=s(y),m=s(" fails schema constraint "),h=r("code"),d=s(g),this.h()},l(e){t=a(e,"LI",{class:!0});var r=i(t);n=a(r,"CODE",{class:!0});var s=i(n);f=o(s,y),s.forEach(c),m=o(r," fails schema constraint "),h=a(r,"CODE",{class:!0});var l=i(h);d=o(l,g),l.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","svelte-1sdf2dp"),l(h,"class","svelte-1sdf2dp"),l(t,"class","svelte-1sdf2dp")},m(e,r){u(e,t,r),p(t,n),p(n,f),p(t,m),p(t,h),p(h,d)},p(e,t){1&t&&y!==(y=e[2].instanceLocation+"")&&S(f,y),1&t&&g!==(g=e[2].absoluteKeywordLocation+"")&&S(d,g)},d(e){e&&c(t)}}}function il(e){let t,n=!e[2].valid&&!e[2].keyword.endsWith("#validate"),r=n&&al(e);return{c(){r&&r.c(),t=m()},l(e){r&&r.l(e),t=m()},m(e,n){r&&r.m(e,n),u(e,t,n)},p(e,s){1&s&&(n=!e[2].valid&&!e[2].keyword.endsWith("#validate")),n?r?r.p(e,s):(r=al(e),r.c(),r.m(t.parentNode,t)):r&&(r.d(1),r=null)},d(e){r&&r.d(e),e&&c(t)}}}function ol(e){let t,n=e[0]?"Valid":"";return{c(){t=s(n)},l(e){t=o(e,n)},m(e,n){u(e,t,n)},p(e,r){1&r&&n!==(n=e[0]?"Valid":"")&&S(t,n)},d(e){e&&c(t)}}}function cl(e){let t;return{c(){t=s("Validating ...")},l(e){t=o(e,"Validating ...")},m(e,n){u(e,t,n)},p:f,d(e){e&&c(t)}}}function ll(e){let t,n,r={ctx:e,current:null,token:null,hasCatch:!0,pending:cl,then:ol,catch:nl,value:0,error:1};return P(n=e[0],r),{c(){t=m(),r.block.c()},l(e){t=m(),r.block.l(e)},m(e,n){u(e,t,n),r.block.m(e,r.anchor=n),r.mount=()=>t.parentNode,r.anchor=t},p(t,[s]){e=t,r.ctx=e,1&s&&n!==(n=e[0])&&P(n,r)||L(r,e,s)},i:f,o:f,d(e){e&&c(t),r.block.d(e),r.token=null,r=null}}}function ul(e,t,n){let{results:r}=t;return e.$$set=e=>{"results"in e&&n(0,r=e.results)},[r]}class pl extends e{constructor(e){super(),t(this,e,ul,ll,n,{results:0})}}function fl(e){let t,n,s,o,f;const m=e[2].default,y=R(m,e,e[1],null);return{c(){t=r("a"),n=D("svg"),s=D("path"),o=h(),y&&y.c(),this.h()},l(e){t=a(e,"A",{href:!0,class:!0});var r=i(t);n=a(r,"svg",{height:!0,viewBox:!0,version:!0,"aria-hidden":!0,class:!0},1);var l=i(n);s=a(l,"path",{"fill-rule":!0,d:!0},1),i(s).forEach(c),l.forEach(c),o=d(r),y&&y.l(r),r.forEach(c),this.h()},h(){l(s,"fill-rule","evenodd"),l(s,"d","M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"),l(n,"height","1.5em"),l(n,"viewBox","0 0 16 16"),l(n,"version","1.1"),l(n,"aria-hidden","true"),l(n,"class","svelte-i8toq"),l(t,"href",e[0]),l(t,"class","svelte-i8toq")},m(e,r){u(e,t,r),p(t,n),p(n,s),p(t,o),y&&y.m(t,null),f=!0},p(e,[n]){y&&y.p&&(!f||2&n)&&M(y,m,e,e[1],n,null,null),(!f||1&n)&&l(t,"href",e[0])},i(e){f||(N(y,e),f=!0)},o(e){A(y,e),f=!1},d(e){e&&c(t),y&&y.d(e)}}}function ml(e,t,n){let{$$slots:r={},$$scope:s}=t,{href:a=""}=t;return e.$$set=e=>{"href"in e&&n(0,a=e.href),"$$scope"in e&&n(1,s=e.$$scope)},[a,s,r]}class hl extends e{constructor(e){super(),t(this,e,ml,fl,n,{href:0})}}function dl(e){let t,n,s,o,f;const m=e[2].default,y=R(m,e,e[1],null);return{c(){t=r("a"),n=D("svg"),s=D("path"),o=h(),y&&y.c(),this.h()},l(e){t=a(e,"A",{href:!0,class:!0});var r=i(t);n=a(r,"svg",{height:!0,viewBox:!0,version:!0,"aria-hidden":!0,class:!0},1);var l=i(n);s=a(l,"path",{d:!0},1),i(s).forEach(c),l.forEach(c),o=d(r),y&&y.l(r),r.forEach(c),this.h()},h(){l(s,"d","M240,250h100v-50h100V0H240V250z M340,50h50v100h-50V50z M480,0v200h100V50h50v150h50V50h50v150h50V0H480z M0,200h100V50h50v150h50V0H0V200z"),l(n,"height","1em"),l(n,"viewBox","0 0 780 250"),l(n,"version","1.1"),l(n,"aria-hidden","true"),l(n,"class","svelte-wj8h0n"),l(t,"href",e[0]),l(t,"class","svelte-wj8h0n")},m(e,r){u(e,t,r),p(t,n),p(n,s),p(t,o),y&&y.m(t,null),f=!0},p(e,[n]){y&&y.p&&(!f||2&n)&&M(y,m,e,e[1],n,null,null),(!f||1&n)&&l(t,"href",e[0])},i(e){f||(N(y,e),f=!0)},o(e){A(y,e),f=!1},d(e){e&&c(t),y&&y.d(e)}}}function yl(e,t,n){let{$$slots:r={},$$scope:s}=t,{href:a=""}=t;return e.$$set=e=>{"href"in e&&n(0,a=e.href),"$$scope"in e&&n(1,s=e.$$scope)},[a,s,r]}class gl extends e{constructor(e){super(),t(this,e,yl,dl,n,{href:0})}}function vl(e){let t,n,s,o,f,m,y,g,v;const b=e[2].default,$=R(b,e,e[1],null);return{c(){t=r("a"),n=D("svg"),s=D("g"),o=D("path"),f=D("path"),m=D("path"),y=D("path"),g=h(),$&&$.c(),this.h()},l(e){t=a(e,"A",{href:!0,class:!0});var r=i(t);n=a(r,"svg",{version:!0,viewBox:!0,height:!0,class:!0},1);var l=i(n);s=a(l,"g",{transform:!0,id:!0},1);var u=i(s);o=a(u,"path",{id:!0,d:!0,style:!0},1),i(o).forEach(c),f=a(u,"path",{id:!0,d:!0,style:!0},1),i(f).forEach(c),m=a(u,"path",{id:!0,d:!0,style:!0},1),i(m).forEach(c),y=a(u,"path",{id:!0,d:!0,style:!0},1),i(y).forEach(c),u.forEach(c),l.forEach(c),g=d(r),$&&$.l(r),r.forEach(c),this.h()},h(){l(o,"id","path4544"),l(o,"d","m 122.99401,114.18985 c -4.32897,-0.9404 -7.58044,-3.47848 -8.71251,-6.80095 -0.78921,-2.31618 -0.67682,-6.07238 0.33363,-11.150598 0.48507,-2.437836 0.88169,-5.347843 0.88139,-6.466688 -9.8e-4,-3.718098 -1.71106,-5.735418 -5.1001,-6.016462 l -1.9549,-0.162116 v -2.392655 -2.392657 l 1.85208,-0.250855 c 2.70243,-0.366031 3.74441,-1.02838 4.57629,-2.908984 0.61121,-1.381726 0.68884,-2.068648 0.50552,-4.472869 -0.11913,-1.562244 -0.53527,-4.348568 -0.92477,-6.191832 -0.98954,-4.682868 -0.94822,-8.485471 0.11707,-10.773163 1.56862,-3.368589 5.43705,-5.854553 9.93248,-6.382903 l 1.93299,-0.227185 v 2.518015 2.518015 h -1.29973 c -1.77186,0 -4.2497,1.262413 -4.8835,2.488054 -0.60797,1.175674 -0.65405,2.864146 -0.15834,5.802223 0.78343,4.643508 1.04707,9.098344 0.67592,11.421636 -0.42464,2.658142 -1.97477,5.796328 -3.6791,7.448236 l -1.18012,1.143813 1.61497,1.982752 c 1.99051,2.443801 2.76458,4.148744 3.24284,7.142561 0.37835,2.368341 0.0844,7.282673 -0.67072,11.213982 -1.05359,5.48514 0.1623,7.65141 4.66209,8.30613 l 1.67569,0.24382 v 2.44782 c 0,2.79211 0.17086,2.69708 -3.43917,1.91286 z"),q(o,"fill","stroke-width:0.35277775"),l(f,"id","path4546"),l(f,"d","m 152.2304,112.24932 v -2.42987 l 2.04969,-0.42336 c 2.26276,-0.46736 4.054,-1.8634 4.45842,-3.47475 0.1274,-0.50758 -0.11267,-3.16398 -0.53347,-5.90311 -1.37183,-8.929552 -0.6114,-13.537042 2.85482,-17.297452 l 1.48237,-1.60818 -1.1108,-1.26512 c -3.97855,-4.53132 -4.66885,-8.552208 -3.15364,-18.369547 0.76342,-4.946305 0.76409,-4.994322 0.087,-6.173611 -0.79713,-1.388278 -3.28385,-2.776033 -4.97438,-2.776033 h -1.15997 v -2.469445 c 0,-2.811057 -0.0583,-2.773846 3.24583,-2.072788 3.9645,0.841179 6.80448,2.853272 8.27787,5.864775 0.84544,1.728026 0.97275,2.400136 0.94911,5.010889 -0.015,1.658349 -0.35758,4.682054 -0.76125,6.719346 -1.49867,7.563594 -1.3651,9.576204 0.7654,11.532814 0.98915,0.90842 1.64012,1.17274 3.37032,1.36849 l 2.14439,0.24261 v 2.42387 2.42388 l -1.6757,7.1e-4 c -2.1517,7e-4 -3.9323,0.90924 -4.83869,2.46889 -0.95194,1.63803 -0.89239,5.20675 0.17364,10.40695 0.90648,4.421902 1.05253,8.458452 0.3882,10.728752 -0.70059,2.39406 -3.81995,5.29609 -6.74745,6.27718 -1.26118,0.42266 -2.96775,0.87096 -3.79236,0.99623 l -1.49931,0.22775 z"),q(f,"stroke-width","0.35277778"),l(m,"id","path4548"),l(m,"d","m 131.74239,108.26592 c -1.02163,-1.2988 -0.87294,-3.53652 0.38087,-5.73185 0.92776,-1.62446 4.80862,-6.948549 7.61066,-10.440949 l 1.13094,-1.40958 -1.80213,-5.22523 c -2.02147,-5.86123 -2.0098,-5.97467 0.65581,-6.37225 l 1.46834,-0.219 1.64076,3.3506 c 0.90242,1.84283 1.76982,3.35061 1.92755,3.35061 0.15774,0 1.77489,-1.75542 3.59368,-3.90092 3.15918,-3.72667 3.35688,-3.89165 4.42591,-3.69334 0.64552,0.11974 1.21858,0.0465 1.35432,-0.17316 0.31818,-0.51481 1.23083,0.24704 1.23083,1.02746 0,0.32009 -0.45438,1.13409 -1.00972,1.80888 -2.26771,2.75549 -7.10417,9.27155 -7.10417,9.5713 0,0.17685 0.97502,2.45302 2.16671,5.05816 l 2.1667,4.736609 -0.65823,0.98459 c -0.36203,0.54152 -0.66236,1.12603 -0.6674,1.29891 -0.005,0.17288 -0.27769,0.48371 -0.60588,0.69073 -0.83174,0.52464 -1.44656,-0.11541 -3.9894,-4.153119 -1.16417,-1.84856 -2.23163,-3.36491 -2.37215,-3.36967 -0.31309,-0.0106 -3.7911,5.131969 -6.47955,9.580639 -2.37093,3.92324 -1.93885,3.4204 -3.26614,3.80106 -0.95533,0.27398 -1.19348,0.19843 -1.79831,-0.57048 z"),q(m,"stroke-width","0.35277775"),l(y,"id","path4550"),l(y,"d","m 131.98567,83.677091 c -2.15148,-3.8472 -6.0183,-9.42829 -7.57842,-10.93815 -0.79252,-0.76698 -1.44094,-1.57494 -1.44094,-1.79546 0,-0.6016 1.61695,-1.21975 3.19058,-1.21975 1.69822,0 3.49597,1.47777 5.0997,4.19203 0.58208,0.98515 1.15641,1.79434 1.27629,1.79819 0.11988,0.004 0.80873,-1.65116 1.53078,-3.67779 1.5464,-4.34039 5.62351,-12.777999 7.22453,-14.951229 1.3726,-1.86316 3.42936,-2.865165 5.90274,-2.875676 3.23375,-0.01374 3.24268,0.130067 0.20474,3.296663 -4.63599,4.832327 -6.76321,8.809632 -11.25155,21.037252 -1.24637,3.39549 -2.39032,6.47895 -2.54212,6.85214 -0.23022,0.56597 -0.49833,0.28096 -1.61633,-1.71822 z"),q(y,"stroke-width","0.35277775"),l(s,"transform","translate(-104.22785,-45.507923)"),l(s,"id","layer1"),l(n,"version","1.1"),l(n,"viewBox","0 0 70.423268 70.42326"),l(n,"height","1.25em"),l(n,"class","svelte-27u907"),l(t,"href",e[0]),l(t,"class","svelte-27u907")},m(e,r){u(e,t,r),p(t,n),p(n,s),p(s,o),p(s,f),p(s,m),p(s,y),p(t,g),$&&$.m(t,null),v=!0},p(e,[n]){$&&$.p&&(!v||2&n)&&M($,b,e,e[1],n,null,null),(!v||1&n)&&l(t,"href",e[0])},i(e){v||(N($,e),v=!0)},o(e){A($,e),v=!1},d(e){e&&c(t),$&&$.d(e)}}}function bl(e,t,n){let{$$slots:r={},$$scope:s}=t,{href:a=""}=t;return e.$$set=e=>{"href"in e&&n(0,a=e.href),"$$scope"in e&&n(1,s=e.$$scope)},[a,s,r]}class $l extends e{constructor(e){super(),t(this,e,bl,vl,n,{href:0})}}function wl(e){let t;return{c(){t=s("hyperjump-io/json-schema.hyperjump.io")},l(e){t=o(e,"hyperjump-io/json-schema.hyperjump.io")},m(e,n){u(e,t,n)},d(e){e&&c(t)}}}function Sl(e){let t;return{c(){t=s("hyperjump-io/json-schema-validator")},l(e){t=o(e,"hyperjump-io/json-schema-validator")},m(e,n){u(e,t,n)},d(e){e&&c(t)}}}function Ol(e){let t;return{c(){t=s("@hyperjump/json-schema")},l(e){t=o(e,"@hyperjump/json-schema")},m(e,n){u(e,t,n)},d(e){e&&c(t)}}}function El(e){let t;return{c(){t=s("@hyperjump/json-schema-core")},l(e){t=o(e,"@hyperjump/json-schema-core")},m(e,n){u(e,t,n)},d(e){e&&c(t)}}}function kl(e){let t;return{c(){t=s("JSON Schema")},l(e){t=o(e,"JSON Schema")},m(e,n){u(e,t,n)},d(e){e&&c(t)}}}function Il(e){let t,n,s,o,f,m,y,g,v,b,$,w,S,O,E,j,C;return o=new hl({props:{href:"https://github.com/hyperjump-io/json-schema.hyperjump.io",$$slots:{default:[wl]},$$scope:{ctx:e}}}),y=new hl({props:{href:"https://github.com/hyperjump-io/json-schema-validator",$$slots:{default:[Sl]},$$scope:{ctx:e}}}),b=new gl({props:{href:"https://www.npmjs.com/package/@hyperjump/json-schema",$$slots:{default:[Ol]},$$scope:{ctx:e}}}),S=new gl({props:{href:"https://www.npmjs.com/package/@hyperjump/json-schema-core",$$slots:{default:[El]},$$scope:{ctx:e}}}),j=new $l({props:{href:"https://json-schema.org",$$slots:{default:[kl]},$$scope:{ctx:e}}}),{c(){t=r("footer"),n=r("ul"),s=r("li"),k(o.$$.fragment),f=h(),m=r("li"),k(y.$$.fragment),g=h(),v=r("li"),k(b.$$.fragment),$=h(),w=r("li"),k(S.$$.fragment),O=h(),E=r("li"),k(j.$$.fragment),this.h()},l(e){t=a(e,"FOOTER",{class:!0});var r=i(t);n=a(r,"UL",{class:!0});var l=i(n);s=a(l,"LI",{class:!0});var u=i(s);I(o.$$.fragment,u),u.forEach(c),f=d(l),m=a(l,"LI",{class:!0});var p=i(m);I(y.$$.fragment,p),p.forEach(c),g=d(l),v=a(l,"LI",{class:!0});var h=i(v);I(b.$$.fragment,h),h.forEach(c),$=d(l),w=a(l,"LI",{class:!0});var k=i(w);I(S.$$.fragment,k),k.forEach(c),O=d(l),E=a(l,"LI",{class:!0});var x=i(E);I(j.$$.fragment,x),x.forEach(c),l.forEach(c),r.forEach(c),this.h()},h(){l(s,"class","svelte-17tbtsq"),l(m,"class","svelte-17tbtsq"),l(v,"class","svelte-17tbtsq"),l(w,"class","svelte-17tbtsq"),l(E,"class","svelte-17tbtsq"),l(n,"class","links svelte-17tbtsq"),l(t,"class","svelte-17tbtsq")},m(e,r){u(e,t,r),p(t,n),p(n,s),x(o,s,null),p(n,f),p(n,m),x(y,m,null),p(n,g),p(n,v),x(b,v,null),p(n,$),p(n,w),x(S,w,null),p(n,O),p(n,E),x(j,E,null),C=!0},p(e,[t]){const n={};1&t&&(n.$$scope={dirty:t,ctx:e}),o.$set(n);const r={};1&t&&(r.$$scope={dirty:t,ctx:e}),y.$set(r);const s={};1&t&&(s.$$scope={dirty:t,ctx:e}),b.$set(s);const a={};1&t&&(a.$$scope={dirty:t,ctx:e}),S.$set(a);const i={};1&t&&(i.$$scope={dirty:t,ctx:e}),j.$set(i)},i(e){C||(N(o.$$.fragment,e),N(y.$$.fragment,e),N(b.$$.fragment,e),N(S.$$.fragment,e),N(j.$$.fragment,e),C=!0)},o(e){A(o.$$.fragment,e),A(y.$$.fragment,e),A(b.$$.fragment,e),A(S.$$.fragment,e),A(j.$$.fragment,e),C=!1},d(e){e&&c(t),T(o),T(y),T(b),T(S),T(j)}}}class xl extends e{constructor(e){super(),t(this,e,null,Il,n,{})}}const{Core:jl,Keywords:Nl,Schema:Al}=Vs;Al.add(JSON.parse('{\n    "$id": "https://spec.openapis.org/oas/3.1/dialect/base",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2020-12/vocab/core": true,\n        "https://json-schema.org/draft/2020-12/vocab/applicator": true,\n        "https://json-schema.org/draft/2020-12/vocab/unevaluated": true,\n        "https://json-schema.org/draft/2020-12/vocab/validation": true,\n        "https://json-schema.org/draft/2020-12/vocab/meta-data": true,\n        "https://json-schema.org/draft/2020-12/vocab/format-annotation": true,\n        "https://json-schema.org/draft/2020-12/vocab/content": true,\n        "https://spec.openapis.org/oas/3.1/vocab/base": false\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "OpenAPI 3.1 Schema Object Dialect",\n    "allOf": [\n        { "$ref": "https://json-schema.org/draft/2020-12/schema" },\n        { "$ref": "https://spec.openapis.org/oas/3.1/meta/base" }\n    ]\n}')),Al.add(JSON.parse('{\n    "$id": "https://spec.openapis.org/oas/3.1/meta/base",\n    "$schema": "https://json-schema.org/draft/2020-12/schema",\n    "$vocabulary": {\n        "https://spec.openapis.org/oas/3.1/vocab/base": true\n    },\n    "$dynamicAnchor": "meta",\n    "title": "OAS Base vocabulary",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "example": true,\n        "discriminator": { "$ref": "#/$defs/discriminator" },\n        "externalDocs": { "$ref": "#/$defs/external-docs" },\n        "xml": { "$ref": "#/$defs/xml" }\n    },\n    "$defs": {\n        "extensible": {\n            "patternProperties": {\n                "^x-": true\n            }\n        },\n        "discriminator": {\n            "$ref": "#/$defs/extensible",\n            "type": "object",\n            "properties": {\n                "propertyName": {\n                    "type": "string"\n                },\n                "mapping": {\n                    "type": "object",\n                    "additionalProperties": {\n                        "type": "string"\n                    }\n                }\n            },\n            "required": ["propertyName"],\n            "unevaluatedProperties": false\n        },\n        "external-docs": {\n            "$ref": "#/$defs/extensible",\n            "type": "object",\n            "properties": {\n                "url": {\n                    "type": "string",\n                    "format": "uri-reference"\n                },\n                "description": {\n                    "type": "string"\n                }\n            },\n            "required": ["url"],\n            "unevaluatedProperties": false\n        },\n        "xml": {\n            "$ref": "#/$defs/extensible",\n            "type": "object",\n            "properties": {\n                "name": {\n                    "type": "string"\n                },\n                "namespace": {\n                    "type": "string",\n                    "format": "uri"\n                },\n                "prefix": {\n                    "type": "string"\n                },\n                "attribute": {\n                    "type": "boolean"\n                },\n                "wrapped": {\n                    "type": "boolean"\n                }\n            },\n            "unevaluatedProperties": false\n        }\n    }\n}')),jl.defineVocabulary("https://spec.openapis.org/oas/3.1/vocab/extensions",{example:Nl.metaData,discriminator:Nl.metaData,externalDocs:Nl.metaData,xml:Nl.metaData});const{Core:Tl,Schema:Cl}=Vs;Tl.add,Cl.get,Tl.validate,Tl.setMetaOutputFormat,Tl.setShouldMetaValidate,Tl.FLAG,Tl.BASIC,Tl.DETAILED,Tl.VERBOSE;const{Core:Pl,Schema:Ll,Instance:Rl}=Vs;var Dl={compile:async(e,t,n)=>{const r=await Ll.step("items",n),s=Ll.typeOf(r,"array")?Ll.length(r):Number.MAX_SAFE_INTEGER;return Ll.typeOf(e,"boolean")?[s,Ll.value(e)]:[s,await Pl.compileSchema(e,t)]},interpret:([e,t],n,r,s)=>!Rl.typeOf(n,"array")||("string"==typeof t?Rl.every(((n,a)=>a<e||Pl.interpretSchema(t,n,r,s)),n):Rl.every(((n,r)=>r<e||t),n))};const{Core:Ml,Schema:ql,Instance:_l}=Vs,Bl=([e,t],n,r,s)=>!_l.typeOf(n,"array")||_l.every(((n,a)=>a<e||Ml.interpretSchema(t,n,r,s)),n);var Vl={compile:async(e,t,n)=>{const r=await ql.step("items",n);return[ql.typeOf(r,"array")?ql.length(r):Number.MAX_SAFE_INTEGER,await Ml.compileSchema(e,t)]},interpret:Bl,collectEvaluatedItems:(e,t,n,r)=>Bl(e,t,n,r)&&new Set(_l.map(((e,t)=>t),t))};const{Core:Kl,Schema:Ul,Instance:Fl}=Vs;var Jl={compile:async(e,t,n)=>{const r=await Ul.step("properties",n),s=Ul.typeOf(r,"object")?Ul.keys(r):[],a=await Ul.step("patternProperties",n),i=Ul.typeOf(a,"object")?Ul.keys(a).map((e=>new RegExp(e))):[];return Ul.typeOf(e,"boolean")?[s,i,Ul.value(e)]:[s,i,await Kl.compileSchema(e,t)]},interpret:([e,t,n],r,s,a)=>{if(!Fl.typeOf(r,"object"))return!0;const i=Fl.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n)))));return"string"==typeof n?i.every((([,e])=>Kl.interpretSchema(n,e,s,a))):0===i.length||n}};const{Core:Gl,Schema:zl,Instance:Wl}=Vs,Yl=([e,t,n],r,s,a)=>!Wl.typeOf(r,"object")||Wl.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n))))).every((([,e])=>Gl.interpretSchema(n,e,s,a)));var Hl={compile:async(e,t,n)=>{const r=await zl.step("properties",n),s=zl.typeOf(r,"object")?zl.keys(r):[],a=await zl.step("patternProperties",n);return[s,zl.typeOf(a,"object")?zl.keys(a).map((e=>new RegExp(e))):[],await Gl.compileSchema(e,t)]},interpret:Yl,collectEvaluatedProperties:(e,t,n,r)=>Yl(e,t,n,r)&&[new RegExp("")]};const{Core:Ql,Schema:Xl}=Vs;var Zl={compile:(e,t)=>Yr.pipeline([Xl.map((async e=>Ql.compileSchema(await e,t))),Yr.all],e),interpret:(e,t,n,r)=>e.every((e=>Ql.interpretSchema(e,t,n,r))),collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,s)=>{const a=e&&Ql.collectEvaluatedProperties(s,t,n,r);return!1!==a&&[...e,...a]}),[]),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,s)=>{const a=!1!==e&&Ql.collectEvaluatedItems(s,t,n,r);return!1!==a&&new Set([...e,...a])}),new Set)};const{Core:eu,Schema:tu}=Vs;var nu={compile:(e,t)=>Yr.pipeline([tu.map((async e=>eu.compileSchema(await e,t))),Yr.all],e),interpret:(e,t,n,r)=>e.filter((e=>eu.interpretSchema(e,t,n,r))).length>0,collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,s)=>{const a=eu.collectEvaluatedProperties(s,t,n,r);return!1!==a?[...e||[],...a]:e}),!1),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,s)=>{const a=eu.collectEvaluatedItems(s,t,n,r);return!1!==a?new Set([...e||[],...a]):e}),!1)};const{Schema:ru,Instance:su}=Vs;var au={compile:e=>da(ru.value(e)),interpret:(e,t)=>da(su.value(t))===e};const{Core:iu,Instance:ou}=Vs;var cu={compile:(e,t)=>iu.compileSchema(e,t),interpret:(e,t,n,r)=>!ou.typeOf(t,"array")||ou.some((t=>iu.interpretSchema(e,t,n,r)),t)};const{Core:lu,Schema:uu,Instance:pu}=Vs,fu=({contains:e,minContains:t,maxContains:n},r,s,a)=>{if(!pu.typeOf(r,"array"))return!0;const i=pu.reduce(((t,n)=>lu.interpretSchema(e,n,s,a)?t+1:t),0,r);return i>=t&&i<=n};var mu={compile:async(e,t,n)=>{const r=await lu.compileSchema(e,t),s=await uu.step("minContains",n),a=uu.typeOf(s,"number")?uu.value(s):1,i=await uu.step("maxContains",n);return{contains:r,minContains:a,maxContains:uu.typeOf(i,"number")?uu.value(i):Number.MAX_SAFE_INTEGER}},interpret:fu,collectEvaluatedItems:(e,t,n,r)=>fu(e,t,n,r)&&pu.reduce(((t,s,a)=>lu.interpretSchema(e.contains,s,n,r)?t.add(a):t),new Set,t)};const{Core:hu,Schema:du,Instance:yu}=Vs,gu=({contains:e,minContains:t,maxContains:n},r,s,a)=>{if(!yu.typeOf(r,"array")&&!yu.typeOf(r,"object"))return!0;const i=yu.entries(r).reduce(((t,[,n])=>hu.interpretSchema(e,n,s,a)?t+1:t),0);return i>=t&&i<=n};var vu={compile:async(e,t,n)=>{const r=await hu.compileSchema(e,t),s=await du.step("minContains",n),a=du.typeOf(s,"number")?du.value(s):1,i=await du.step("maxContains",n);return{contains:r,minContains:a,maxContains:du.typeOf(i,"number")?du.value(i):Number.MAX_SAFE_INTEGER}},interpret:gu,collectEvaluatedItems:(e,t,n,r)=>gu(e,t,n,r)&&yu.typeOf(t,"array")&&yu.reduce(((t,s,a)=>hu.interpretSchema(e.contains,s,n,r)?t.add(a):t),new Set,t),collectEvaluatedProperties:(e,t,n,r)=>gu(e,t,n,r)&&yu.typeOf(t,"object")&&yu.entries(t).reduce(((t,[s,a])=>(hu.interpretSchema(e.contains,a,n,r)&&t.push(s),t)),[],t)};const{Core:bu,Schema:$u}=Vs;var wu={compile:async(e,t)=>{await Yr.pipeline([$u.entries,Yr.map((([,e])=>bu.compileSchema(e,t))),Yr.all],e)},interpret:()=>!0};const{Core:Su,Schema:Ou,Instance:Eu}=Vs;var ku={compile:(e,t)=>Yr.pipeline([Ou.entries,Yr.map((async([e,n])=>[e,Ou.typeOf(n,"array")?Ou.value(n):await Su.compileSchema(n,t)])),Yr.all],e),interpret:(e,t,n,r)=>{const s=Eu.value(t);return!Eu.typeOf(t,"object")||e.every((([e,a])=>!(e in s)||(Array.isArray(a)?a.every((e=>e in s)):Su.interpretSchema(a,t,n,r))))}};const{Schema:Iu,Instance:xu}=Vs;var ju={compile:e=>Yr.pipeline([Iu.entries,Yr.map((([e,t])=>[e,Iu.value(t)])),Yr.all],e),interpret:(e,t)=>{const n=xu.value(t);return!xu.typeOf(t,"object")||e.every((([e,t])=>!(e in n)||t.every((e=>e in n))))}};const{Core:Nu,Schema:Au,Instance:Tu}=Vs;var Cu={compile:(e,t)=>Yr.pipeline([Au.entries,Yr.map((async([e,n])=>[e,await Nu.compileSchema(n,t)])),Yr.all],e),interpret:(e,t,n,r)=>{const s=Tu.value(t);return!Tu.typeOf(t,"object")||e.every((([e,a])=>!(e in s)||Nu.interpretSchema(a,t,n,r)))},collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,[s,a])=>{if(!e||!Tu.has(s,t))return e;const i=Nu.collectEvaluatedProperties(a,t,n,r);return!1!==i&&e.concat(i)}),[])};const{Core:Pu,Schema:Lu}=Vs,{safeResolveUrl:Ru,splitUrl:Du}=rr;var Mu={compile:e=>{const t=Ru(e.id,Lu.value(e));return Du(t)},interpret:([e,t],n,r,s)=>{const a=t in r.metaData[e].dynamicAnchors?s[t]:e,i=Lu.getAnchorPointer(r.metaData[a],t);return Pu.interpretSchema(`${a}#${i}`,n,r,s)},collectEvaluatedProperties:Pu.collectEvaluatedProperties,collectEvaluatedItems:Pu.collectEvaluatedItems};const{Core:qu,Schema:_u}=Vs,{safeResolveUrl:Bu,splitUrl:Vu}=rr;var Ku={compile:e=>Vu(_u.value(e)),interpret:([e,t],n,r,s)=>{if(!(t in s))throw Error(`No dynamic anchor found for "${t}"`);const a=Bu(s[t],e),i=_u.getAnchorPointer(r.metaData[a],t);return qu.interpretSchema(`${a}#${i}`,n,r,s)},collectEvaluatedProperties:qu.collectEvaluatedProperties,collectEvaluatedItems:qu.collectEvaluatedItems};const{Schema:Uu,Instance:Fu}=Vs;var Ju={compile:e=>Uu.value(e).map(da),interpret:(e,t)=>e.some((e=>da(Fu.value(t))===e))};const{Schema:Gu,Instance:zu}=Vs;var Wu={compile:async e=>Gu.value(e),interpret:(e,t)=>!zu.typeOf(t,"number")||zu.value(t)<e};const{Schema:Yu,Instance:Hu}=Vs;var Qu={compile:async e=>Yu.value(e),interpret:(e,t)=>!Hu.typeOf(t,"number")||Hu.value(t)>e};const{Core:Xu}=Vs;var Zu={compile:(e,t)=>Xu.compileSchema(e,t),interpret:(e,t,n,r)=>(Xu.interpretSchema(e,t,n,r),!0),collectEvaluatedProperties:(e,t,n,r)=>Xu.collectEvaluatedProperties(e,t,n,r)||[],collectEvaluatedItems:(e,t,n,r)=>Xu.collectEvaluatedItems(e,t,n,r)||new Set};const{Core:ep,Schema:tp}=Vs,np=(e,t,n,r)=>{const s=n[e][2];return"boolean"==typeof s?s:s.every((([e,,s])=>ep.getKeyword(e).interpret(s,t,n,r)))};var rp={compile:async(e,t,n)=>{if(tp.has("if",n)){const r=await tp.step("if",n);return[await ep.compileSchema(r,t),await ep.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,s)=>void 0===e||!np(e,n,r,s)||ep.interpretSchema(t,n,r,s),collectEvaluatedProperties:([e,t],n,r,s)=>void 0!==e&&np(e,n,r,s)?ep.collectEvaluatedProperties(t,n,r,s):[],collectEvaluatedItems:([e,t],n,r,s)=>void 0!==e&&np(e,n,r,s)?ep.collectEvaluatedItems(t,n,r,s):new Set};const{Core:sp,Schema:ap}=Vs,ip=(e,t,n,r)=>{const s=n[e][2];return"boolean"==typeof s?s:s.every((([e,,s])=>sp.getKeyword(e).interpret(s,t,n,r)))};var op={compile:async(e,t,n)=>{if(ap.has("if",n)){const r=await ap.step("if",n);return[await sp.compileSchema(r,t),await sp.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,s)=>void 0===e||ip(e,n,r,s)||sp.interpretSchema(t,n,r,s),collectEvaluatedProperties:([e,t],n,r,s)=>void 0===e||ip(e,n,r,s)?[]:sp.collectEvaluatedProperties(t,n,r,s),collectEvaluatedItems:([e,t],n,r,s)=>void 0===e||ip(e,n,r,s)?new Set:sp.collectEvaluatedItems(t,n,r,s)};const{Core:cp,Schema:lp,Instance:up}=Vs,pp=(e,t,n,r)=>!up.typeOf(t,"array")||("string"==typeof e?up.every((t=>cp.interpretSchema(e,t,n,r)),t):up.every(((t,s)=>!(s in e)||cp.interpretSchema(e[s],t,n,r)),t));var fp={compile:(e,t)=>lp.typeOf(e,"array")?Yr.pipeline([lp.map((e=>cp.compileSchema(e,t))),Yr.all],e):cp.compileSchema(e,t),interpret:pp,collectEvaluatedItems:(e,t,n,r)=>pp(e,t,n,r)&&("string"==typeof e?new Set(up.map(((e,t)=>t),t)):new Set(e.map(((e,t)=>t))))};const{Core:mp,Schema:hp,Instance:dp}=Vs,yp=([e,t],n,r,s)=>!dp.typeOf(n,"array")||dp.every(((n,a)=>a<e||mp.interpretSchema(t,n,r,s)),n);var gp={compile:async(e,t,n)=>{const r=await hp.step("prefixItems",n);return[hp.typeOf(r,"array")?hp.length(r):0,await mp.compileSchema(e,t)]},interpret:yp,collectEvaluatedItems:(e,t,n,r)=>yp(e,t,n,r)&&new Set(dp.map(((e,t)=>t),t))};const{Schema:vp,Instance:bp}=Vs;var $p={compile:e=>vp.value(e),interpret:(e,t)=>!bp.typeOf(t,"array")||bp.length(t)<=e};const{Schema:wp,Instance:Sp}=Vs;var Op={compile:e=>wp.value(e),interpret:(e,t)=>!Sp.typeOf(t,"string")||Sp.length(t)<=e};const{Schema:Ep,Instance:kp}=Vs;var Ip={compile:e=>Ep.value(e),interpret:(e,t)=>!kp.typeOf(t,"string")||[...kp.value(t)].length<=e};const{Schema:xp,Instance:jp}=Vs;var Np={compile:e=>xp.value(e),interpret:(e,t)=>!jp.typeOf(t,"object")||jp.keys(t).length<=e};const{Schema:Ap,Instance:Tp}=Vs;var Cp={compile:async(e,t,n)=>{const r=await Ap.step("exclusiveMaximum",n),s=Ap.value(r);return[Ap.value(e),s]},interpret:([e,t],n)=>{if(!Tp.typeOf(n,"number"))return!0;const r=Tp.value(n);return t?r<e:r<=e}};const{Schema:Pp,Instance:Lp}=Vs;var Rp={compile:async e=>Pp.value(e),interpret:(e,t)=>!Lp.typeOf(t,"number")||Lp.value(t)<=e};const{Schema:Dp,Instance:Mp}=Vs;var qp={compile:e=>Dp.value(e),interpret:(e,t)=>!Mp.typeOf(t,"array")||Mp.length(t)>=e};const{Schema:_p,Instance:Bp}=Vs;var Vp={compile:e=>_p.value(e),interpret:(e,t)=>!Bp.typeOf(t,"string")||Bp.value(t).length>=e};const{Schema:Kp,Instance:Up}=Vs;var Fp={compile:e=>Kp.value(e),interpret:(e,t)=>!Up.typeOf(t,"string")||[...Up.value(t)].length>=e};const{Schema:Jp,Instance:Gp}=Vs;var zp={compile:e=>Jp.value(e),interpret:(e,t)=>{const n=Gp.value(t);return!Gp.typeOf(t,"object")||Object.keys(n).length>=e}};const{Schema:Wp,Instance:Yp}=Vs;var Hp={compile:async(e,t,n)=>{const r=await Wp.step("exclusiveMinimum",n),s=Wp.value(r);return[Wp.value(e),s]},interpret:([e,t],n)=>{if(!Yp.typeOf(n,"number"))return!0;const r=Yp.value(n);return t?r>e:r>=e}};const{Schema:Qp,Instance:Xp}=Vs;var Zp={compile:async e=>Qp.value(e),interpret:(e,t)=>!Xp.typeOf(t,"number")||Xp.value(t)>=e};const{Schema:ef,Instance:tf}=Vs,nf=(e,t)=>Math.abs(e-t)<1.1920929e-7;var rf={compile:e=>ef.value(e),interpret:(e,t)=>{if(!tf.typeOf(t,"number"))return!0;const n=tf.value(t)%e;return nf(0,n)||nf(e,n)}};const{Core:sf}=Vs;var af={compile:sf.compileSchema,interpret:(e,t,n,r)=>!sf.interpretSchema(e,t,n,r)};const{Core:of,Schema:cf}=Vs;var lf={compile:(e,t)=>Yr.pipeline([cf.map((async e=>of.compileSchema(await e,t))),Yr.all],e),interpret:(e,t,n,r)=>{let s=0;for(const a of e)if(of.interpretSchema(a,t,n,r)&&s++,s>1)break;return 1===s},collectEvaluatedProperties:(e,t,n,r)=>{let s=0;return e.reduce(((e,a)=>{if(s>1)return!1;const i=of.collectEvaluatedProperties(a,t,n,r);return i?0==s++&&i:e}),!1)},collectEvaluatedItems:(e,t,n,r)=>{let s=0;return e.reduce(((e,a)=>{if(s>1)return!1;const i=of.collectEvaluatedItems(a,t,n,r);return i?0==s++&&i:e}),!1)}};const{Schema:uf,Instance:pf}=Vs;var ff={compile:async(e,t,n)=>{const r=await uf.value(e),s=await uf.step("properties",n),a=uf.typeOf(s,"object")?uf.keys(s):[],i=new Set(a);return r.forEach((e=>a.remove(e))),[...i]},interpret:(e,t)=>!pf.typeOf(t,"object")||e.every((e=>pf.value(t).hasOwnProperty(e)))};const{Schema:mf,Instance:hf}=Vs;var df={compile:e=>new RegExp(mf.value(e),"u"),interpret:(e,t)=>!hf.typeOf(t,"string")||e.test(hf.value(t))};const{Core:yf,Schema:gf,Instance:vf}=Vs,bf=(e,t,n,r)=>!vf.typeOf(t,"object")||e.every((([e,s])=>vf.entries(t).filter((([t])=>e.test(t))).every((([,e])=>yf.interpretSchema(s,e,n,r)))));var $f={compile:(e,t)=>Yr.pipeline([gf.entries,Yr.map((async([e,n])=>[new RegExp(e,"u"),await yf.compileSchema(n,t)])),Yr.all],e),interpret:bf,collectEvaluatedProperties:(e,t,n,r)=>bf(e,t,n,r)&&e.map((([e])=>e))};var wf={isObject:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,escapeRegExp:e=>e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")};const{Core:Sf,Schema:Of,Instance:Ef}=Vs,{escapeRegExp:kf}=wf,If=(e,t,n,r)=>!Ef.typeOf(t,"object")||Ef.entries(t).filter((([t])=>t in e)).every((([t,s])=>Sf.interpretSchema(e[t],s,n,r)));var xf={compile:(e,t)=>Yr.pipeline([Of.entries,Yr.reduce((async(e,[n,r])=>(e[n]=await Sf.compileSchema(r,t),e)),Object.create(null))],e),interpret:If,collectEvaluatedProperties:(e,t,n,r)=>If(e,t,n,r)&&Object.keys(e).map((e=>new RegExp(`^${kf(e)}$`)))};const{Core:jf,Schema:Nf,Instance:Af}=Vs;var Tf={compile:async(e,t)=>Yr.pipeline([Nf.entries,Yr.reduce((async(e,[n,r])=>(e[n]=await Yr.pipeline([Nf.entries,Yr.reduce((async(e,[n,r])=>(e[n]=await jf.compileSchema(r,t),e)),{})],r),e)),{})],e),interpret:(e,t,n,r)=>!Af.typeOf(t,"object")||Object.entries(e).every((([e,s])=>!Af.has(e,t)||jf.interpretSchema(s[Af.value(t)[e]],t,n,r)))};const{Core:Cf,Instance:Pf}=Vs;var Lf={compile:(e,t)=>Cf.compileSchema(e,t),interpret:(e,t,n,r)=>!Pf.typeOf(t,"object")||Pf.keys(t).every((t=>Cf.interpretSchema(e,Pf.cons(t),n,r)))};const{Core:Rf,Schema:Df}=Vs;var Mf={compile:async(e,t)=>{const n=await Df.get(Df.value(e),e);return Rf.compileSchema(n,t)},interpret:Rf.interpretSchema,collectEvaluatedProperties:Rf.collectEvaluatedProperties,collectEvaluatedItems:Rf.collectEvaluatedItems};const{Schema:qf,Instance:_f}=Vs;var Bf={compile:e=>qf.value(e),interpret:(e,t)=>!_f.typeOf(t,"object")||e.every((e=>_f.value(t).hasOwnProperty(e)))};const{Core:Vf,Schema:Kf,Instance:Uf}=Vs,Ff=(e,t,n,r)=>!Uf.typeOf(t,"array")||Uf.every(((t,s)=>!(s in e)||Vf.interpretSchema(e[s],t,n,r)),t);var Jf={compile:(e,t)=>Yr.pipeline([Kf.map((e=>Vf.compileSchema(e,t))),Yr.all],e),interpret:Ff,collectEvaluatedItems:(e,t,n,r)=>Ff(e,t,n,r)&&new Set(e.map(((e,t)=>t)))};const{Schema:Gf,Instance:zf}=Vs;var Wf={compile:e=>Gf.value(e),interpret:(e,t)=>"string"==typeof e?zf.typeOf(t,e):e.some(zf.typeOf(t))};const{Core:Yf,Schema:Hf,Instance:Qf}=Vs,Xf=([e,t],n,r,s)=>{if(!Qf.typeOf(n,"array"))return!0;const a=Yf.collectEvaluatedItems(e,n,r,s,!0);return!1===a||Qf.every(((e,i)=>a.has(i)||Yf.interpretSchema(t,Qf.step(i,n),r,s)),n)};var Zf={compile:async(e,t,n)=>[Hf.uri(n),await Yf.compileSchema(e,t)],interpret:Xf,collectEvaluatedItems:(e,t,n,r)=>Xf(e,t,n,r)&&new Set(Qf.map(((e,t)=>t),t))};const{Core:em,Schema:tm,Instance:nm}=Vs,rm=([e,t],n,r,s)=>{if(!nm.typeOf(n,"object"))return!0;const a=em.collectEvaluatedProperties(e,n,r,s,!0);return!a||nm.entries(n).filter((([e])=>!a.some((t=>e.match(t))))).every((([,e])=>em.interpretSchema(t,e,r,s)))};var sm={compile:async(e,t,n)=>[tm.uri(n),await em.compileSchema(e,t)],interpret:rm,collectEvaluatedProperties:(e,t,n,r)=>rm(e,t,n,r)&&[new RegExp("")]};const{Schema:am,Instance:im}=Vs;var om={compile:e=>am.value(e),interpret:(e,t)=>{if(!im.typeOf(t,"array")||!1===e)return!0;const n=im.map((e=>da(im.value(e))),t);return new Set(n).size===n.length}};const{Keywords:cm}=Vs;var lm={additionalItems:Dl,additionalItems6:Vl,additionalProperties:Jl,additionalProperties6:Hl,allOf:Zl,anyOf:nu,const:au,contains:cu,containsMinContainsMaxContains:mu,containsMinContainsMaxContainsFUTURE:vu,definitions:wu,dependencies:ku,dependentRequired:ju,dependentSchemas:Cu,dynamicRef:Mu,dynamicRefFUTURE:Ku,enum:Ju,exclusiveMaximum:Wu,exclusiveMinimum:Qu,if:Zu,then:rp,else:op,items:fp,items202012:gp,maxItems:$p,maxLength:Op,maxLength6:Ip,maxProperties:Np,maximumExclusiveMaximum:Cp,maximum:Rp,metaData:cm.metaData,minItems:qp,minLength:Vp,minLength6:Fp,minProperties:zp,minimumExclusiveMinimum:Hp,minimum:Zp,multipleOf:rf,not:af,oneOf:lf,optional:ff,pattern:df,patternProperties:$f,properties:xf,propertyDependencies:Tf,propertyNames:Lf,ref:Mf,required:Bf,tupleItems:Jf,type:Wf,unevaluatedItems:Zf,unevaluatedProperties:sm,uniqueItems:om,validate:cm.validate};const{Core:um,Schema:pm}=Vs,fm="https://json-schema.org/draft/future/schema";function mm(e){return{c:f,l:f,m:f,p:f,i:f,o:f,d:f}}function hm(e){let t,n;return t=new pl({props:{results:e[5]}}),{c(){k(t.$$.fragment)},l(e){I(t.$$.fragment,e)},m(e,r){x(t,e,r),n=!0},p(e,n){const r={};32&n&&(r.results=e[5]),t.$set(r)},i(e){n||(N(t.$$.fragment,e),n=!0)},o(e){A(t.$$.fragment,e),n=!1},d(e){T(t,e)}}}function dm(e){return{c:f,l:f,m:f,p:f,i:f,o:f,d:f}}function ym(e){let t,n,f,m,y,v,$,S,O,C,R,D,M,q,V,K,U,F,J,G,z,W,Y,H,Q,X,Z,ee,te,ne,re,se,ae;function ie(t){e[11](t)}let oe={ns:"schemas",tabs:e[1],newTab:e[7],active:0};function ce(t){e[12](t)}function le(t){e[13](t)}function ue(t){e[14](t)}void 0!==e[0]&&(oe.format=e[0]),V=new el({props:oe}),w.push((()=>E(V,"format",ie))),V.$on("input",e[9]);let pe={ns:"instances",tabs:e[2],newTab:e[8]};void 0!==e[3]&&(pe.selected=e[3]),void 0!==e[3]&&(pe.active=e[3]),void 0!==e[0]&&(pe.format=e[0]),J=new el({props:pe}),w.push((()=>E(J,"selected",ce))),w.push((()=>E(J,"active",le))),w.push((()=>E(J,"format",ue))),J.$on("input",e[10]),Q=new pl({props:{results:e[4]}});let fe={ctx:e,current:null,token:null,hasCatch:!1,pending:dm,then:hm,catch:mm,value:18,blocks:[,,,]};return P(ee=e[4],fe),ne=new xl({}),{c(){t=h(),n=r("div"),f=r("button"),m=s("JSON"),v=r("button"),$=s("YAML"),O=h(),C=r("main"),R=r("h1"),D=s("Hyperjump - JSON Schema Validator"),M=h(),q=r("div"),k(V.$$.fragment),U=h(),F=r("div"),k(J.$$.fragment),Y=h(),H=r("div"),k(Q.$$.fragment),X=h(),Z=r("div"),fe.block.c(),te=h(),k(ne.$$.fragment),this.h()},l(e){_('[data-svelte="svelte-14138tz"]',document.head).forEach(c),t=d(e),n=a(e,"DIV",{class:!0});var r=i(n);f=a(r,"BUTTON",{class:!0});var s=i(f);m=o(s,"JSON"),s.forEach(c),v=a(r,"BUTTON",{class:!0});var l=i(v);$=o(l,"YAML"),l.forEach(c),r.forEach(c),O=d(e),C=a(e,"MAIN",{class:!0});var u=i(C);R=a(u,"H1",{class:!0});var p=i(R);D=o(p,"Hyperjump - JSON Schema Validator"),p.forEach(c),M=d(u),q=a(u,"DIV",{class:!0});var h=i(q);I(V.$$.fragment,h),h.forEach(c),U=d(u),F=a(u,"DIV",{class:!0});var y=i(F);I(J.$$.fragment,y),y.forEach(c),Y=d(u),H=a(u,"DIV",{class:!0});var g=i(H);I(Q.$$.fragment,g),g.forEach(c),X=d(u),Z=a(u,"DIV",{class:!0});var b=i(Z);fe.block.l(b),b.forEach(c),te=d(u),I(ne.$$.fragment,u),u.forEach(c),this.h()},h(){document.title="Hyperjump - JSON Schema Validator",l(f,"class",y=B("json"===e[0]?"selected":"")+" svelte-ub4xmj"),l(v,"class",S=B("yaml"===e[0]?"selected":"")+" svelte-ub4xmj"),l(n,"class","format svelte-ub4xmj"),l(R,"class","svelte-ub4xmj"),l(q,"class","editor-section svelte-ub4xmj"),l(F,"class","editor-section svelte-ub4xmj"),l(H,"class","results "+bm+" svelte-ub4xmj"),l(Z,"class","results "+bm+" svelte-ub4xmj"),l(C,"class","svelte-ub4xmj")},m(r,s){u(r,t,s),u(r,n,s),p(n,f),p(f,m),p(n,v),p(v,$),u(r,O,s),u(r,C,s),p(C,R),p(R,D),p(C,M),p(C,q),x(V,q,null),p(C,U),p(C,F),x(J,F,null),p(C,Y),p(C,H),x(Q,H,null),p(C,X),p(C,Z),fe.block.m(Z,fe.anchor=null),fe.mount=()=>Z,fe.anchor=null,p(C,te),x(ne,C,null),re=!0,se||(ae=[g(f,"click",e[6]("json")),g(v,"click",e[6]("yaml"))],se=!0)},p(t,[n]){e=t,(!re||1&n&&y!==(y=B("json"===e[0]?"selected":"")+" svelte-ub4xmj"))&&l(f,"class",y),(!re||1&n&&S!==(S=B("yaml"===e[0]?"selected":"")+" svelte-ub4xmj"))&&l(v,"class",S);const r={};2&n&&(r.tabs=e[1]),!K&&1&n&&(K=!0,r.format=e[0],j((()=>K=!1))),V.$set(r);const s={};4&n&&(s.tabs=e[2]),!G&&8&n&&(G=!0,s.selected=e[3],j((()=>G=!1))),!z&&8&n&&(z=!0,s.active=e[3],j((()=>z=!1))),!W&&1&n&&(W=!0,s.format=e[0],j((()=>W=!1))),J.$set(s);const a={};16&n&&(a.results=e[4]),Q.$set(a),fe.ctx=e,16&n&&ee!==(ee=e[4])&&P(ee,fe)||L(fe,e,n)},i(e){re||(N(V.$$.fragment,e),N(J.$$.fragment,e),N(Q.$$.fragment,e),N(fe.block),N(ne.$$.fragment,e),re=!0)},o(e){A(V.$$.fragment,e),A(J.$$.fragment,e),A(Q.$$.fragment,e);for(let e=0;e<3;e+=1){const t=fe.blocks[e];A(t)}A(ne.$$.fragment,e),re=!1},d(e){e&&c(t),e&&c(n),e&&c(O),e&&c(C),T(V),T(J),T(Q),fe.block.d(),fe.token=null,fe=null,T(ne),se=!1,b(ae)}}}pm.setConfig(fm,"baseToken","$id"),pm.setConfig(fm,"embeddedToken","$id"),pm.setConfig(fm,"anchorToken","$anchor"),pm.setConfig(fm,"dynamicAnchorToken","$dynamicAnchor"),pm.setConfig(fm,"vocabularyToken","$vocabulary"),pm.setConfig(fm,"mandatoryVocabularies",["https://json-schema.org/draft/future/vocab/core"]),pm.add(JSON.parse('{\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$id": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/core": true,\n        "https://json-schema.org/draft/future/vocab/applicator": true,\n        "https://json-schema.org/draft/future/vocab/unevaluated": true,\n        "https://json-schema.org/draft/future/vocab/validation": true,\n        "https://json-schema.org/draft/future/vocab/meta-data": true,\n        "https://json-schema.org/draft/future/vocab/format-annotation": true,\n        "https://json-schema.org/draft/future/vocab/content": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        {"$ref": "meta/core"},\n        {"$ref": "meta/applicator"},\n        {"$ref": "meta/validation"},\n        {"$ref": "meta/meta-data"},\n        {"$ref": "meta/format-annotation"},\n        {"$ref": "meta/content"}\n    ],\n    "type": ["object", "boolean"],\n    "properties": {\n        "definitions": {\n            "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        },\n        "dependencies": {\n            "$comment": "\\"dependencies\\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \\"dependentSchemas\\" and \\"dependentRequired\\"",\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$dynamicRef": "#meta" },\n                    { "$ref": "meta/validation#/$defs/stringArray" }\n                ]\n            }\n        }\n    }\n}')),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/core",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/core": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Core vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference",\n            "$comment": "Non-empty fragments not allowed.",\n            "pattern": "^[^#]*#?$"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$anchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicRef": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicAnchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$"\n        },\n        "$vocabulary": {\n            "type": "object",\n            "propertyNames": {\n                "type": "string",\n                "format": "uri"\n            },\n            "additionalProperties": {\n                "type": "boolean"\n            }\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "$defs": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        }\n    }\n}')),um.defineVocabulary("https://json-schema.org/draft/future/vocab/core",{validate:lm.validate,$defs:lm.definitions,$dynamicRef:lm.dynamicRefFUTURE,$ref:lm.ref}),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/applicator",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/applicator": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Applicator vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "prefixItems": { "$ref": "#/$defs/schemaArray" },\n        "items": { "$dynamicRef": "#meta" },\n        "contains": { "$dynamicRef": "#meta" },\n        "additionalProperties": { "$dynamicRef": "#meta" },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependentSchemas": {\n            "type": "object",\n            "additionalProperties": {\n                "$dynamicRef": "#meta"\n            }\n        },\n        "propertyDependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "type": "object",\n                "additionalProperties": { "$dynamicRef": "#meta" },\n                "default": {}\n            },\n            "default": {}\n        },\n        "propertyNames": { "$dynamicRef": "#meta" },\n        "if": { "$dynamicRef": "#meta" },\n        "then": { "$dynamicRef": "#meta" },\n        "else": { "$dynamicRef": "#meta" },\n        "allOf": { "$ref": "#/$defs/schemaArray" },\n        "anyOf": { "$ref": "#/$defs/schemaArray" },\n        "oneOf": { "$ref": "#/$defs/schemaArray" },\n        "not": { "$dynamicRef": "#meta" }\n    },\n    "$defs": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$dynamicRef": "#meta" }\n        }\n    }\n}')),um.defineVocabulary("https://json-schema.org/draft/future/vocab/applicator",{additionalProperties:lm.additionalProperties6,allOf:lm.allOf,anyOf:lm.anyOf,contains:lm.containsMinContainsMaxContainsFUTURE,dependentSchemas:lm.dependentSchemas,if:lm.if,then:lm.then,else:lm.else,items:lm.items202012,not:lm.not,oneOf:lm.oneOf,patternProperties:lm.patternProperties,prefixItems:lm.tupleItems,properties:lm.properties,propertyDependencies:lm.propertyDependencies,propertyNames:lm.propertyNames}),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/validation",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/validation": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Validation vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minContains": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 1\n        },\n        "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/$defs/stringArray" },\n        "optional": { "$ref": "#/$defs/stringArray" },\n        "dependentRequired": {\n            "type": "object",\n            "additionalProperties": {\n                "$ref": "#/$defs/stringArray"\n            }\n        },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/$defs/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/$defs/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        }\n    },\n    "$defs": {\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 0\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    }\n}')),um.defineVocabulary("https://json-schema.org/draft/future/vocab/validation",{const:lm.const,dependentRequired:lm.dependentRequired,enum:lm.enum,exclusiveMaximum:lm.exclusiveMaximum,exclusiveMinimum:lm.exclusiveMinimum,maxItems:lm.maxItems,maxLength:lm.maxLength6,maxProperties:lm.maxProperties,maximum:lm.maximum,minItems:lm.minItems,minLength:lm.minLength6,minProperties:lm.minProperties,minimum:lm.minimum,multipleOf:lm.multipleOf,optional:lm.optional,pattern:lm.pattern,required:lm.required,type:lm.type,uniqueItems:lm.uniqueItems}),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/meta-data",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/meta-data": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Meta-data vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "deprecated": {\n            "type": "boolean",\n            "default": false\n        },\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        }\n    }\n}')),um.defineVocabulary("https://json-schema.org/draft/future/vocab/meta-data",{default:lm.metaData,deprecated:lm.metaData,description:lm.metaData,examples:lm.metaData,readOnly:lm.metaData,title:lm.metaData,writeOnly:lm.metaData}),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/format-annotation",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/format-annotation": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Format vocabulary meta-schema for annotation results",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),um.defineVocabulary("https://json-schema.org/draft/future/vocab/format-annotation",{format:lm.metaData}),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/format-assertion",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/format-assertion": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Format vocabulary meta-schema for assertion results",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/content",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/content": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Content vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "contentSchema": { "$dynamicRef": "#meta" }\n    }\n}')),um.defineVocabulary("https://json-schema.org/draft/future/vocab/content",{contentEncoding:lm.metaData,contentMediaType:lm.metaData,contentSchema:lm.metaData}),pm.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/unevaluated",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/unevaluated": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Unevaluated applicator vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "unevaluatedItems": { "$dynamicRef": "#meta" },\n        "unevaluatedProperties": { "$dynamicRef": "#meta" }\n    }\n}')),um.defineVocabulary("https://json-schema.org/draft/future/vocab/unevaluated",{unevaluatedItems:lm.unevaluatedItems,unevaluatedProperties:lm.unevaluatedProperties});const gm="https://json-schema.org/draft/2020-12/schema",vm="https://json-schema.hyperjump.io/schema",bm="solarized-dark";function $m(e,t,n){let r,s,a="json";const i=(e,t)=>"yaml"===t?Jn.parse(e):JSON.parse(e),o={json:e=>`{\n  "$id": "${e}",\n  "$schema": "${gm}"\n}`,yaml:e=>`$id: '${e}'\n$schema: '${gm}'`},c=function(){let e=1;return(t,n,r=!1)=>{const s=n||`${vm}${++e}`;return{label:t||`Schema ${e}`,text:o[a](s),persistent:r}}}(),l=function(){let e=1;return()=>({label:"Instance "+e++,text:""})}();let u=[c("Schema",vm,!0)],p=[l("Instance")],f=0;const m=function(e,t){let n;return({detail:r})=>{clearTimeout(n),n=setTimeout((()=>e(r)),t)}},h=m((e=>n(1,u=e)),750),d=m((e=>n(2,p=e)),750);return Ec.setMetaOutputFormat(Ec.BASIC),e.$$.update=()=>{3&e.$$.dirty&&n(4,r=async function(){u.forEach(((e,t)=>{const n=0===t?vm:"";Ec.add(i(e.text||"true",a),n,gm)}));const e=await Ec.get(vm);return Ec.validate(e)}()),29&e.$$.dirty&&n(5,s=async function(){if(""!==p[f].text){let e;try{e=await r}catch(e){}if(e){const t=e(i(p[f].text,a),Ec.BASIC);if(t.valid)return t;throw{output:t}}}}())},[a,u,p,f,r,s,e=>()=>{n(0,a=e),n(1,u=[c("Schema",vm,!0)]),n(2,p=[l("Instance")]),n(3,f=0)},c,l,h,d,function(e){a=e,n(0,a)},function(e){f=e,n(3,f)},function(e){f=e,n(3,f)},function(e){a=e,n(0,a)}]}export default class extends e{constructor(e){super(),t(this,e,$m,ym,n,{})}}
