import{S as e,i as t,s as n,e as r,t as a,c as i,a as s,b as o,d as c,f as l,g as p,h as m,n as u,j as f,k as d,l as h,m as y,o as v,p as g,r as $,q as b,u as S,v as w,w as I,x as O,y as x,z as E,A as j,B as P,C as A,D as k,E as C,F as T,G as N,H as R,I as q,J as D,K as M,L as V}from"./client.bd5fcdfc.js";var L=function(e,t){return function n(){null==t&&(t=e.length);var r=[].slice.call(arguments);return r.length>=t?e.apply(this,r):function(){return n.apply(this,r.concat([].slice.call(arguments)))}}};var J="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function U(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}(null==t&&n.path)}},n.exports),n.exports}var z=U((function(e,t){var n;n={},("object"==typeof window&&window||J).PubSub=n,function(e){var t={},n=-1,r="*";function a(e){var t;for(t in e)if(e.hasOwnProperty(t))return!0;return!1}function i(e){return function(){throw e}}function s(e,t,n){try{e(t,n)}catch(e){setTimeout(i(e),0)}}function o(e,t,n){e(t,n)}function c(e,n,r,a){var i,c=t[n],l=a?o:s;if(t.hasOwnProperty(n))for(i in c)c.hasOwnProperty(i)&&l(c[i],e,r)}function l(e,t,n){return function(){var a=String(e),i=a.lastIndexOf(".");for(c(e,e,t,n);-1!==i;)i=(a=a.substr(0,i)).lastIndexOf("."),c(e,a,t,n);c(e,r,t,n)}}function p(e){var n=String(e);return Boolean(t.hasOwnProperty(n)&&a(t[n]))}function m(e){for(var t=String(e),n=p(t)||p(r),a=t.lastIndexOf(".");!n&&-1!==a;)a=(t=t.substr(0,a)).lastIndexOf("."),n=p(t);return n}function u(e,t,n,r){var a=l(e="symbol"==typeof e?e.toString():e,t,r);return!!m(e)&&(!0===n?a():setTimeout(a,0),!0)}e.publish=function(t,n){return u(t,n,!1,e.immediateExceptions)},e.publishSync=function(t,n){return u(t,n,!0,e.immediateExceptions)},e.subscribe=function(e,r){if("function"!=typeof r)return!1;e="symbol"==typeof e?e.toString():e,t.hasOwnProperty(e)||(t[e]={});var a="uid_"+String(++n);return t[e][a]=r,a},e.subscribeAll=function(t){return e.subscribe(r,t)},e.subscribeOnce=function(t,n){var r=e.subscribe(t,(function(){e.unsubscribe(r),n.apply(this,arguments)}));return e},e.clearAllSubscriptions=function(){t={}},e.clearSubscriptions=function(e){var n;for(n in t)t.hasOwnProperty(n)&&0===n.indexOf(e)&&delete t[n]},e.countSubscriptions=function(e){var n,r=0;for(n in t)t.hasOwnProperty(n)&&0===n.indexOf(e)&&r++;return r},e.getSubscriptions=function(e){var n,r=[];for(n in t)t.hasOwnProperty(n)&&0===n.indexOf(e)&&r.push(n);return r},e.unsubscribe=function(n){var r,a,i,s=function(e){var n;for(n in t)if(t.hasOwnProperty(n)&&0===n.indexOf(e))return!0;return!1},o="string"==typeof n&&(t.hasOwnProperty(n)||s(n)),c=!o&&"string"==typeof n,l="function"==typeof n,p=!1;if(!o){for(r in t)if(t.hasOwnProperty(r)){if(a=t[r],c&&a[n]){delete a[n],p=n;break}if(l)for(i in a)a.hasOwnProperty(i)&&a[i]===n&&(delete a[i],p=!0)}return p}e.clearSubscriptions(n)}}(n),void 0!==e&&e.exports&&(t=e.exports=n),t.PubSub=n,e.exports=t=n})),_=(z.PubSub,function(e,t){if(e=e.trim(),(t=t.trim()).startsWith("about:"))return t;const n=function(e){const t={host:"",path:"",query:"",protocol:""};let n=e,r=e.indexOf("//");t.protocol=n.substring(0,r),r+=2;const a=e.indexOf("/",r),i=e.indexOf("?"),s=e.indexOf("#");-1!==s&&(n=n.substring(0,s));if(-1!==i){const e=n.substring(i);t.query=e,n=n.substring(0,i)}if(-1!==a){const e=n.substring(0,a);t.host=e,n=n.substring(a),t.path=n}else t.host=n;return t}(e),r=function(e){const t={href:e,hash:"",query:"",netPath:!1,absolutePath:!1,relativePath:!1};if(K.test(e))return t.netPath=!0,t;"/"===e[0]?t.absolutePath=!0:""!==e&&(t.relativePath=!0);let n=e;const r=e.indexOf("?"),a=e.indexOf("#");if(-1!==a){const e=n.substring(a);t.hash=e,n=n.substring(0,a)}if(-1!==r){const e=n.substring(r);t.query=e,n=n.substring(0,r)}return t.path=n,t}(t);if(!n.protocol&&!r.netPath)throw new Error("Error, protocol is not specified");if(r.netPath)return r.href.startsWith("//")&&(r.href=n.protocol+r.href),function(e){const t=e.indexOf("//")+2,n=!e.includes("/",t),r=!e.includes("?",t),a=!e.includes("#",t);return n&&r&&a}(r.href)?F(r.href):r.href;if(r.absolutePath){const{path:e,query:t,hash:a}=r;return n.host+B(e)+t+a}if(r.relativePath){const{path:e,query:t,hash:a}=r;let i,s=n.path,o=n.host;return 0===e.length?i=s:(s=s.substring(0,s.lastIndexOf("/")),i=B(s+"/"+e)),o+=""!==i||t||a?i+t+a:"/",o}{const{host:e,path:t,query:a}=n;return t||a?e+t+a+r.hash:F(e)}});function F(e){return e+("/"===e[e.length-1]?"":"/")}function B(e){let t=e.split("/");""===t[0]&&(t=t.slice(1));let n=[];return t.forEach(((e,r)=>{"."!==e&&(".."===e?n.pop():""===e&&r!==t.length-1||n.push(e))})),"/"+n.join("/")}const K=new RegExp("^([a-z][a-z0-9+.-]*:)?//","i");const G={null:e=>null===e,boolean:e=>"boolean"==typeof e,object:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,array:e=>Array.isArray(e),number:e=>"number"==typeof e,integer:e=>Number.isInteger(e),string:e=>"string"==typeof e},H=e=>{const t=e.indexOf("#"),n=-1===t?e.length:t,r=e.slice(0,n),a=e.slice(n+1);return[decodeURI(r),decodeURI(a)]},Z=e=>{const t=e.match(/^(.+):\/\//);return t?t[1]:""};var W={jsonTypeOf:(e,t)=>G[t](e),splitUrl:H,safeResolveUrl:(e,t)=>{const n=_(e,t),r=H(e)[0];if(r&&"file"===Z(n)&&"file"!==Z(r))throw Error(`Can't access file '${n}' resource from network context '${e}'`);return n}};const X=e=>{if(e.length>0&&"/"!==e[0])throw Error("Invalid JSON Pointer");return e.split("/").slice(1).map(ae)},Q=(e,t,n,r)=>{if(0===e.length)return n;if(e.length>1){const a=e.shift();return{...t,[a]:Q(e,se(t,a,r),n,ne(a,r))}}if(Array.isArray(t)){const r=[...t];return r[ie(t,e[0])]=n,r}return"object"==typeof t&&null!==t?{...t,[e[0]]:n}:se(t,e[0],r)},Y=(e,t,n,r)=>{if(0!==e.length)if(1!==e.length||oe(t)){const a=e.shift();Y(e,se(t,a,r),n,ne(a,r))}else{t[ie(t,e[0])]=n}},ee=(e,t,n)=>{if(0!=e.length){if(e.length>1){const r=e.shift(),a=se(t,r,n);return{...t,[r]:ee(e,a,ne(r,n))}}if(Array.isArray(t))return t.filter(((t,n)=>n!=e[0]));if("object"==typeof t&&null!==t){const{[e[0]]:n,...r}=t;return r}return se(t,e[0],n)}},te=(e,t,n)=>{if(0!==e.length)if(e.length>1){const r=e.shift(),a=se(t,r,n);te(e,a,ne(r,n))}else Array.isArray(t)?t.splice(e[0],1):"object"==typeof t&&null!==t?delete t[e[0]]:se(t,e[0],n)},ne=L(((e,t)=>t+"/"+re(e))),re=e=>e.toString().replace(/~/g,"~0").replace(/\//g,"~1"),ae=e=>e.toString().replace(/~1/g,"/").replace(/~0/g,"~"),ie=(e,t)=>Array.isArray(e)&&"-"===t?e.length:t,se=(e,t,n="")=>{if(void 0===e)throw TypeError(`Value at '${n}' is undefined and does not have property '${t}'`);if(null===e)throw TypeError(`Value at '${n}' is null and does not have property '${t}'`);if(oe(e))throw TypeError(`Value at '${n}' is a ${typeof e} and does not have property '${t}'`);return e[ie(e,t)]},oe=e=>null===e||"object"!=typeof e;var ce={nil:"",append:ne,get:(e,t)=>{const n=X(e),r=e=>n.reduce((([e,t],n)=>[se(e,n,t),ne(n,t)]),[e,""])[0];return void 0===t?r:r(t)},set:(e,t,n)=>{const r=X(e),a=L(((e,t)=>Q(r,e,t,"")));return void 0===t?a:a(t,n)},assign:(e,t,n)=>{const r=X(e),a=L(((e,t)=>Y(r,e,t,"")));return void 0===t?a:a(t,n)},unset:(e,t)=>{const n=X(e),r=e=>ee(n,e,"");return void 0===t?r:r(t)},delete:(e,t)=>{const n=X(e),r=e=>te(n,e,"");return void 0===t?r:r(t)}};const le=Symbol("$__value"),pe=Symbol("$__href");var me=(e,t)=>Object.freeze({[pe]:e,[le]:t}),ue=e=>e&&void 0!==e[pe],fe=e=>e[pe],de=e=>e[le];const{jsonTypeOf:he}=W,ye=Object.freeze({id:"",pointer:"",instance:void 0,value:void 0}),ve=e=>ue(e.value)?de(e.value):e.value,ge=L(((e,t)=>he(ve(e),t))),$e=(e,t)=>Object.freeze({...t,pointer:ce.append(e,t.pointer),value:ve(t)[e]}),be=L(((e,t)=>ve(t).map(((n,r,a,i)=>e($e(r,t),r,a,i))))),Se=L(((e,t)=>ve(t).map(((e,n,r,a)=>$e(n,t))).filter(((t,n,r,a)=>e(t,n,r,a))))),we=L(((e,t,n)=>ve(n).reduce(((t,r,a)=>e(t,$e(a,n),a)),t))),Ie=L(((e,t)=>ve(t).every(((n,r,a,i)=>e($e(r,t),r,a,i))))),Oe=L(((e,t)=>ve(t).some(((n,r,a,i)=>e($e(r,t),r,a,i)))));var xe={cons:(e,t="")=>Object.freeze({...ye,id:t,instance:e,value:e}),uri:e=>`${e.id}#${encodeURI(e.pointer)}`,value:ve,has:(e,t)=>e in ve(t),typeOf:ge,step:$e,entries:e=>Object.keys(ve(e)).map((t=>[t,$e(t,e)])),keys:e=>Object.keys(ve(e)),map:be,filter:Se,reduce:we,every:Ie,some:Oe,length:e=>ve(e).length},Ee=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,je=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,Pe=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,Ae=/\\([\u000b\u0020-\u00ff])/g,ke=/([\\"])/g,Ce=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;
/*!
 * content-type
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */function Te(e){var t=String(e);if(Pe.test(t))return t;if(t.length>0&&!je.test(t))throw new TypeError("invalid parameter value");return'"'+t.replace(ke,"\\$1")+'"'}function Ne(e){this.parameters=Object.create(null),this.type=e}var Re={format:function(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var t=e.parameters,n=e.type;if(!n||!Ce.test(n))throw new TypeError("invalid type");var r=n;if(t&&"object"==typeof t)for(var a,i=Object.keys(t).sort(),s=0;s<i.length;s++){if(a=i[s],!Pe.test(a))throw new TypeError("invalid parameter name");r+="; "+a+"="+Te(t[a])}return r},parse:function(e){if(!e)throw new TypeError("argument string is required");var t="object"==typeof e?function(e){var t;"function"==typeof e.getHeader?t=e.getHeader("content-type"):"object"==typeof e.headers&&(t=e.headers&&e.headers["content-type"]);if("string"!=typeof t)throw new TypeError("content-type header is missing from object");return t}(e):e;if("string"!=typeof t)throw new TypeError("argument string is required to be a string");var n=t.indexOf(";"),r=-1!==n?t.substr(0,n).trim():t.trim();if(!Ce.test(r))throw new TypeError("invalid media type");var a=new Ne(r.toLowerCase());if(-1!==n){var i,s,o;for(Ee.lastIndex=n;s=Ee.exec(t);){if(s.index!==n)throw new TypeError("invalid parameter format");n+=s[0].length,i=s[1].toLowerCase(),'"'===(o=s[2])[0]&&(o=o.substr(1,o.length-2).replace(Ae,"$1")),a.parameters[i]=o}if(n!==t.length)throw new TypeError("invalid parameter format")}return a}},qe=async e=>Object.entries(await e),De=L((async(e,t)=>(await t).map(e))),Me=L((async(e,t,n)=>(await n).reduce((async(t,n)=>e(await t,n)),t))),Ve=L((async(e,t,n={})=>Me((async(t,n)=>await e(n)?t.concat([n]):t),[],t,n))),Le=L((async(e,t)=>{const n=await De(e,t);return(await Promise.all(n)).some((e=>e))})),Je=L((async(e,t)=>{const n=await De(e,t);return(await Promise.all(n)).every((e=>e))})),Ue=L(((e,t)=>e.reduce((async(e,t)=>t(await e)),t))),ze={entries:qe,map:De,filter:Ve,reduce:Me,some:Le,every:Je,pipeline:Ue,all:e=>Promise.all(e),allValues:e=>Ue([qe,Me((async(e,[t,n])=>(e[t]=await n,e)),{})],e)},_e=fetch;const{jsonTypeOf:Fe,splitUrl:Be,safeResolveUrl:Ke}=W,Ge={},He={},Ze=(e,t)=>{const n=e in He?He[e]:e;if(n in Ge)return Ge[n][t]},We={},Xe={},Qe=(e,t="",n="")=>{e=JSON.parse(JSON.stringify(e));const r=Be(e.$schema||n)[0];if(!r)throw Error("Couldn't determine schema version");delete e.$schema;const a=Ze(r,"baseToken"),i=Ze(r,"anchorToken"),s=Be(t)[0];if(!s&&!Be(e[a]||"")[0])throw Error("Couldn't determine an identifier for the schema");const o=Ke(s,e[a]||""),[c,l]=Be(o);delete e[a],l&&a===i&&(e[i]=i!==a?encodeURI(l):`#${encodeURI(l)}`),s&&(Xe[s]=c);const p={},m=Ze(r,"recursiveAnchorToken");let u;!0===e[m]&&(p[""]=c,e[i]="",delete e[m]);const f=Ze(r,"vocabularyToken");Fe(e[f],"object")?(He[c]=r,u=e[f],delete e[f]):(He[c]=r,u={[r]:!0});const d={"":""};We[c]={id:c,schemaVersion:r,schema:Ye(e,c,r,ce.nil,d,p),anchors:d,dynamicAnchors:p,vocabulary:u,validated:!1}},Ye=(e,t,n,r,a,i)=>{if(Fe(e,"object")){const s="string"==typeof e.$schema?Be(e.$schema)[0]:n,o=Ze(s,"embeddedToken"),c=Ze(s,"anchorToken");if("string"==typeof e[o]&&(o!==c||"#"!==e[o][0])){const r=Ke(t,e[o]);return e[o]=r,Qe(e,r,n),me(e[o],e)}const l=Ze(n,"anchorToken"),p=Ze(n,"dynamicAnchorToken");"string"==typeof e[p]&&(i[e[p]]=t,e[l]=e[p],delete e[p]);const m=Ze(n,"embeddedToken");if("string"==typeof e[l]){const t=l!==m?e[l]:e[l].slice(1);a[t]=r,delete e[l]}const u=Ze(n,"jrefToken");if("string"==typeof e[u])return me(e[u],e);for(let s in e)e[s]=Ye(e[s],t,n,ce.append(s,r),a,i);return e}return Array.isArray(e)?e.map(((e,s)=>Ye(e,t,n,ce.append(s,r),a,i))):e},et=e=>We[Xe[e]]||We[e],tt=Object.freeze({id:"",schemaVersion:void 0,vocabulary:{},pointer:ce.nil,schema:void 0,value:void 0,anchors:{},dynamicAnchors:{},validated:!0}),nt=async(e,t=tt)=>{const n=Ke(it(t),e),[r,a]=Be(n);if(!(e=>e in We||e in Xe)(r)){const e=await _e(r,{headers:{Accept:"application/schema+json"}});if(e.status>=400)throw await e.text(),Error(`Failed to retrieve schema with id: ${r}`);if(e.headers.has("content-type")){const t=Re.parse(e.headers.get("content-type")).type;if("application/schema+json"!==t)throw Error(`${r} is not a schema. Found a document with media type: ${t}`)}Qe(await e.json(),r)}const i=et(r),s="/"!==a[0]?at(i,a):a,o=Object.freeze({...i,pointer:s,value:ce.get(s,i.schema)});return rt(o)},rt=e=>ue(e.value)?nt(fe(e.value),e):e,at=(e,t)=>{if(!(t in e.anchors))throw Error(`No such anchor '${encodeURI(e.id)}#${encodeURI(t)}'`);return e.anchors[t]},it=e=>`${e.id}#${encodeURI(e.pointer)}`,st=e=>ue(e.value)?de(e.value):e.value,ot=(e,t)=>{const n=et(t.id),r=Object.freeze({...t,pointer:ce.append(e,t.pointer),value:st(t)[e],validated:n.validated});return rt(r)},ct=L(((e,t)=>ze.pipeline([st,ze.map((async(n,r)=>e(await ot(r,t),r))),ze.all],t)));var lt={setConfig:(e,t,n)=>{Ge[e]||(Ge[e]={}),Ge[e][t]=n},getConfig:Ze,add:Qe,get:nt,markValidated:e=>{We[e].validated=!0},uri:it,value:st,getAnchorPointer:at,typeOf:(e,t)=>Fe(st(e),t),has:(e,t)=>e in st(t),step:ot,keys:e=>Object.keys(st(e)),entries:e=>ze.pipeline([st,Object.keys,ze.map((async t=>[t,await ot(t,e)])),ze.all],e),map:ct,length:e=>st(e).length};class pt extends Error{constructor(e){super("Invalid Schema"),this.name=this.constructor.name,this.output=e}}var mt=pt;const{splitUrl:ut}=W,ft="FLAG",dt="BASIC",ht="DETAILED",yt="VERBOSE";let vt=ht,gt=!0;const $t=async e=>{const t={metaData:{}};return{ast:t,schemaUri:await jt(e,t)}},bt=L((({ast:e,schemaUri:t},n,r=ft)=>{if(![ft,dt,ht,yt].includes(r))throw Error(`The '${r}' error format is not supported`);let a=[];const i=z.subscribe("result",St(r,a));return Pt(t,n,e,{}),z.unsubscribe(i),a[0]})),St=(e,t)=>{const n=[];return(r,a)=>{if("result"===r){const{keyword:e,absoluteKeywordLocation:t,instanceLocation:r,valid:i}=a,s={keyword:e,absoluteKeywordLocation:t,instanceLocation:r,valid:i,errors:[]};n.push(s)}else if("result.start"===r)n.push(r);else if("result.end"===r){const r=n.pop();for(;"result.start"!==n[n.length-1];){const t=n.pop(),a=[t];e===dt&&(a.push(...t.errors),delete t.errors),(e===yt||e!==ft&&!t.valid)&&r.errors.unshift(...a)}n[n.length-1]=r,t[0]=r}}},wt={},It=e=>wt[e],Ot=e=>e in wt,xt={},Et={},jt=async(e,t)=>{if(!Ot(`${e.schemaVersion}#validate`)){const t=await lt.get(e.schemaVersion);(lt.getConfig(t.id,"mandatoryVocabularies")||[]).forEach((e=>{if(!t.vocabulary[e])throw Error(`Vocabulary '${e}' must be explicitly declared and required`)})),Object.entries(t.vocabulary).forEach((([e,n])=>{if(e in xt)Object.entries(xt[e]).forEach((([e,n])=>{((e,t)=>{wt[e]={collectEvaluatedItems:(e,n,r)=>t.interpret(e,n,r)&&new Set,collectEvaluatedProperties:(e,n,r)=>t.interpret(e,n,r)&&[],...t}})(`${t.id}#${e}`,n)}));else if(n)throw Error(`Missing required vocabulary: ${e}`)}))}if(gt&&!e.validated){if(lt.markValidated(e.id),!(e.schemaVersion in Et)){const t=await lt.get(e.schemaVersion),n={metaData:{}},r=await jt(t,n);Et[t.id]=bt({ast:n,schemaUri:r})}const t=xe.cons(e.schema,e.id),n=Et[e.schemaVersion](t,vt);if(!n.valid)throw new mt(n)}return e.id in t.metaData||(t.metaData[e.id]={id:e.id,dynamicAnchors:e.dynamicAnchors,anchors:e.anchors}),await It(`${e.schemaVersion}#validate`).compile(e,t),lt.uri(e)},Pt=(e,t,n,r)=>{const a=At(e,n),i=ut(e)[0];return It(a).interpret(e,t,n,{...n.metaData[i].dynamicAnchors,...r})},At=(e,t)=>{if(!(e in t))throw Error(`No schema found at ${e}`);return t[e][0]};var kt={validate:async(e,t,n)=>{const r=await $t(e),a=(e,t=ft)=>bt(r,xe.cons(e),t);return void 0===t?a:a(t,n)},compile:$t,interpret:bt,setMetaOutputFormat:e=>{vt=e},setShouldMetaValidate:e=>{gt=e},FLAG:ft,BASIC:dt,DETAILED:ht,VERBOSE:yt,getKeyword:It,hasKeyword:Ot,defineVocabulary:(e,t)=>{xt[e]=t},compileSchema:jt,interpretSchema:Pt,collectEvaluatedProperties:(e,t,n,r,a)=>{const i=At(e,n);return It(i).collectEvaluatedProperties(e,t,n,r,a)},collectEvaluatedItems:(e,t,n,r,a)=>{const i=At(e,n);return It(i).collectEvaluatedItems(e,t,n,r,a)}};var Ct={compile:e=>lt.value(e),interpret:()=>!0};var Tt={compile:async(e,t)=>{const n=lt.uri(e);if(!(n in t)){t[n]=!1;const r=lt.value(e);t[n]=[`${e.schemaVersion}#validate`,lt.uri(e),"boolean"==typeof r?r:await ze.pipeline([lt.entries,ze.map((([t,n])=>[`${e.schemaVersion}#${t}`,n])),ze.filter((([t])=>kt.hasKeyword(t)&&t!==`${e.schemaVersion}#validate`)),ze.map((async([n,r])=>{const a=await kt.getKeyword(n).compile(r,t,e);return[n,lt.uri(r),a]})),ze.all],e)]}return n},interpret:(e,t,n,r)=>{const[a,i,s]=n[e];z.publishSync("result.start");const o="boolean"==typeof s?s:s.every((([e,a,i])=>{z.publishSync("result.start");const s=kt.getKeyword(e).interpret(i,t,n,r);return z.publishSync("result",{keyword:e,absoluteKeywordLocation:a,instanceLocation:xe.uri(t),valid:s,ast:i}),z.publishSync("result.end"),s}));return z.publishSync("result",{keyword:a,absoluteKeywordLocation:i,instanceLocation:xe.uri(t),valid:o,ast:e}),z.publishSync("result.end"),o},collectEvaluatedProperties:(e,t,n,r,a=!1)=>{const i=n[e][2];return"boolean"==typeof i?!!i&&[]:i.filter((([e])=>!a||!e.endsWith("#unevaluatedProperties"))).reduce(((e,[a,,i])=>{const s=e&&kt.getKeyword(a).collectEvaluatedProperties(i,t,n,r);return!1!==s&&[...e,...s]}),[])},collectEvaluatedItems:(e,t,n,r,a=!1)=>{const i=n[e][2];return"boolean"==typeof i?!!i&&new Set:i.filter((([e])=>!a||!e.endsWith("#unevaluatedItems"))).reduce(((e,[a,,i])=>{const s=!1!==e&&kt.getKeyword(a).collectEvaluatedItems(i,t,n,r);return!1!==s&&new Set([...e,...s])}),new Set)}},Nt={Core:kt,Schema:lt,Instance:xe,Keywords:{metaData:Ct,validate:Tt}};const{Core:Rt,Schema:qt,Instance:Dt}=Nt;var Mt={compile:async(e,t,n)=>{const r=await qt.step("items",n),a=qt.typeOf(r,"array")?qt.length(r):Number.MAX_SAFE_INTEGER;return qt.typeOf(e,"boolean")?[a,qt.value(e)]:[a,await Rt.compileSchema(e,t)]},interpret:([e,t],n,r,a)=>!Dt.typeOf(n,"array")||("string"==typeof t?Dt.every(((n,i)=>i<e||Rt.interpretSchema(t,n,r,a)),n):Dt.every(((n,r)=>r<e||t),n))};const{Core:Vt,Schema:Lt,Instance:Jt}=Nt,Ut=([e,t],n,r,a)=>!Jt.typeOf(n,"array")||Jt.every(((n,i)=>i<e||Vt.interpretSchema(t,n,r,a)),n);var zt={compile:async(e,t,n)=>{const r=await Lt.step("items",n);return[Lt.typeOf(r,"array")?Lt.length(r):Number.MAX_SAFE_INTEGER,await Vt.compileSchema(e,t)]},interpret:Ut,collectEvaluatedItems:(e,t,n,r)=>Ut(e,t,n,r)&&new Set(Jt.map(((e,t)=>t),t))};const{Core:_t,Schema:Ft,Instance:Bt}=Nt;var Kt={compile:async(e,t,n)=>{const r=await Ft.step("properties",n),a=Ft.typeOf(r,"object")?Ft.keys(r):[],i=await Ft.step("patternProperties",n),s=Ft.typeOf(i,"object")?Ft.keys(i).map((e=>new RegExp(e))):[];return Ft.typeOf(e,"boolean")?[a,s,Ft.value(e)]:[a,s,await _t.compileSchema(e,t)]},interpret:([e,t,n],r,a,i)=>{if(!Bt.typeOf(r,"object"))return!0;const s=Bt.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n)))));return"string"==typeof n?s.every((([,e])=>_t.interpretSchema(n,e,a,i))):0===s.length||n}};const{Core:Gt,Schema:Ht,Instance:Zt}=Nt,Wt=([e,t,n],r,a,i)=>!Zt.typeOf(r,"object")||Zt.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n))))).every((([,e])=>Gt.interpretSchema(n,e,a,i)));var Xt={compile:async(e,t,n)=>{const r=await Ht.step("properties",n),a=Ht.typeOf(r,"object")?Ht.keys(r):[],i=await Ht.step("patternProperties",n);return[a,Ht.typeOf(i,"object")?Ht.keys(i).map((e=>new RegExp(e))):[],await Gt.compileSchema(e,t)]},interpret:Wt,collectEvaluatedProperties:(e,t,n,r)=>Wt(e,t,n,r)&&[new RegExp("")]};const{Core:Qt,Schema:Yt}=Nt;var en={compile:(e,t)=>ze.pipeline([Yt.map((async e=>Qt.compileSchema(await e,t))),ze.all],e),interpret:(e,t,n,r)=>e.every((e=>Qt.interpretSchema(e,t,n,r))),collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,a)=>{const i=e&&Qt.collectEvaluatedProperties(a,t,n,r);return!1!==i&&[...e,...i]}),[]),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,a)=>{const i=!1!==e&&Qt.collectEvaluatedItems(a,t,n,r);return!1!==i&&new Set([...e,...i])}),new Set)};const{Core:tn,Schema:nn}=Nt;var rn={compile:(e,t)=>ze.pipeline([nn.map((async e=>tn.compileSchema(await e,t))),ze.all],e),interpret:(e,t,n,r)=>e.filter((e=>tn.interpretSchema(e,t,n,r))).length>0,collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,a)=>{const i=tn.collectEvaluatedProperties(a,t,n,r);return!1!==i?[...e||[],...i]:e}),!1),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,a)=>{const i=tn.collectEvaluatedItems(a,t,n,r);return!1!==i?new Set([...e||[],...i]):e}),!1)},an=Object.keys,sn=JSON.stringify;function on(e,t){var n,r,a,i,s,o,c;if("string"===(c=typeof e))return sn(e);if(!0===e)return"true";if(!1===e)return"false";if(null===e)return"null";if(e instanceof Array){for(a="[",r=e.length-1,n=0;n<r;n++)a+=on(e[n],!1)+",";return r>-1&&(a+=on(e[n],!1)),a+"]"}if(e instanceof Object){if("function"==typeof e.toJSON)return on(e.toJSON(),t);for(r=(i=an(e).sort()).length,a="",n=0;n<r;)void 0!==(o=on(e[s=i[n]],!0))&&(n&&""!==a&&(a+=","),a+=sn(s)+":"+o),n++;return"{"+a+"}"}switch(c){case"function":case"undefined":return t?void 0:null;default:return isFinite(e)?e:null}}var cn=function(e){return""+on(e,!1)};const{Schema:ln,Instance:pn}=Nt;var mn={compile:e=>cn(ln.value(e)),interpret:(e,t)=>cn(pn.value(t))===e};const{Core:un,Instance:fn}=Nt;var dn={compile:(e,t)=>un.compileSchema(e,t),interpret:(e,t,n,r)=>!fn.typeOf(t,"array")||fn.some((t=>un.interpretSchema(e,t,n,r)),t)};const{Core:hn,Schema:yn,Instance:vn}=Nt,gn=({contains:e,minContains:t,maxContains:n},r,a,i)=>{if(!vn.typeOf(r,"array"))return!0;const s=vn.reduce(((t,n)=>hn.interpretSchema(e,n,a,i)?t+1:t),0,r);return s>=t&&s<=n};var $n={compile:async(e,t,n)=>{const r=await hn.compileSchema(e,t),a=await yn.step("minContains",n),i=yn.typeOf(a,"number")?yn.value(a):1,s=await yn.step("maxContains",n);return{contains:r,minContains:i,maxContains:yn.typeOf(s,"number")?yn.value(s):Number.MAX_SAFE_INTEGER}},interpret:gn,collectEvaluatedItems:(e,t,n,r)=>gn(e)&&vn.reduce(((t,a,i)=>hn.interpretSchema(e.contains,a,n,r)?t.add(i):t),new Set,t)};const{Core:bn,Schema:Sn}=Nt;var wn={compile:async(e,t)=>{await ze.pipeline([Sn.entries,ze.map((([,e])=>bn.compileSchema(e,t))),ze.all],e)},interpret:()=>!0};const{Core:In,Schema:On,Instance:xn}=Nt;var En={compile:(e,t)=>ze.pipeline([On.entries,ze.map((async([e,n])=>[e,On.typeOf(n,"array")?On.value(n):await In.compileSchema(n,t)])),ze.all],e),interpret:(e,t,n,r)=>{const a=xn.value(t);return!xn.typeOf(t,"object")||e.every((([e,i])=>!(e in a)||(Array.isArray(i)?i.every((e=>e in a)):In.interpretSchema(i,t,n,r))))}};const{Schema:jn,Instance:Pn}=Nt;var An={compile:e=>ze.pipeline([jn.entries,ze.map((([e,t])=>[e,jn.value(t)])),ze.all],e),interpret:(e,t)=>{const n=Pn.value(t);return!Pn.typeOf(t,"object")||e.every((([e,t])=>!(e in n)||t.every((e=>e in n))))}};const{Core:kn,Schema:Cn,Instance:Tn}=Nt;var Nn={compile:(e,t)=>ze.pipeline([Cn.entries,ze.map((async([e,n])=>[e,await kn.compileSchema(n,t)])),ze.all],e),interpret:(e,t,n,r)=>{const a=Tn.value(t);return!Tn.typeOf(t,"object")||e.every((([e,i])=>!(e in a)||kn.interpretSchema(i,t,n,r)))},collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,[a,i])=>{if(!e||!Tn.has(a,t))return e;const s=kn.collectEvaluatedProperties(i,t,n,r);return!1!==s&&e.concat(s)}),[])};const{Schema:Rn,Instance:qn}=Nt;var Dn={compile:e=>Rn.value(e).map(cn),interpret:(e,t)=>e.some((e=>cn(qn.value(t))===e))};const{Schema:Mn,Instance:Vn}=Nt;var Ln={compile:async e=>Mn.value(e),interpret:(e,t)=>!Vn.typeOf(t,"number")||Vn.value(t)<e};const{Schema:Jn,Instance:Un}=Nt;var zn={compile:async e=>Jn.value(e),interpret:(e,t)=>!Un.typeOf(t,"number")||Un.value(t)>e};const{Core:_n}=Nt;var Fn={compile:(e,t)=>_n.compileSchema(e,t),interpret:(e,t,n,r)=>(_n.interpretSchema(e,t,n,r),!0)};const{Core:Bn,Schema:Kn}=Nt,Gn=(e,t,n,r)=>{const a=n[e][2];return"boolean"==typeof a?a:a.every((([e,,a])=>Bn.getKeyword(e).interpret(a,t,n,r)))};var Hn={compile:async(e,t,n)=>{if(Kn.has("if",n)){const r=await Kn.step("if",n);return[await Bn.compileSchema(r,t),await Bn.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,a)=>void 0===e||!Gn(e,n,r,a)||Bn.interpretSchema(t,n,r,a),collectEvaluatedProperties:([e,t],n,r,a)=>{if(void 0===e)return[];const i=Bn.collectEvaluatedProperties(e,n,r,a);if(!1===i)return[];const s=Bn.collectEvaluatedProperties(t,n,r,a);return!1!==s&&[...i,...s]},collectEvaluatedItems:([e,t],n,r,a)=>{if(void 0===e)return new Set;const i=Bn.collectEvaluatedItems(e,n,r,a);if(!1===i)return new Set;const s=Bn.collectEvaluatedItems(t,n,r,a);return!1!==s&&new Set([...i,...s])}};const{Core:Zn,Schema:Wn}=Nt,Xn=(e,t,n,r)=>{const a=n[e][2];return"boolean"==typeof a?a:a.every((([e,,a])=>Zn.getKeyword(e).interpret(a,t,n,r)))};var Qn={compile:async(e,t,n)=>{if(Wn.has("if",n)){const r=await Wn.step("if",n);return[await Zn.compileSchema(r,t),await Zn.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,a)=>void 0===e||Xn(e,n,r,a)||Zn.interpretSchema(t,n,r,a),collectEvaluatedProperties:([e,t],n,r,a)=>void 0===e||!1!==Zn.collectEvaluatedProperties(e,n,r,a)?[]:Zn.collectEvaluatedProperties(t,n,r,a),collectEvaluatedItems:([e,t],n,r,a)=>void 0===e||!1!==Zn.collectEvaluatedItems(e,n,r,a)?new Set:Zn.collectEvaluatedItems(t,n,r,a)};const{Core:Yn,Schema:er,Instance:tr}=Nt,nr=(e,t,n,r)=>!tr.typeOf(t,"array")||("string"==typeof e?tr.every((t=>Yn.interpretSchema(e,t,n,r)),t):tr.every(((t,a)=>!(a in e)||Yn.interpretSchema(e[a],t,n,r)),t));var rr={compile:(e,t)=>er.typeOf(e,"array")?ze.pipeline([er.map((e=>Yn.compileSchema(e,t))),ze.all],e):Yn.compileSchema(e,t),interpret:nr,collectEvaluatedItems:(e,t,n,r)=>nr(e,t,n,r)&&("string"==typeof e?new Set(tr.map(((e,t)=>t),t)):new Set(e.map(((e,t)=>t))))};const{Schema:ar,Instance:ir}=Nt;var sr={compile:e=>ar.value(e),interpret:(e,t)=>!ir.typeOf(t,"array")||ir.length(t)<=e};const{Schema:or,Instance:cr}=Nt;var lr={compile:e=>or.value(e),interpret:(e,t)=>!cr.typeOf(t,"string")||cr.length(t)<=e};const{Schema:pr,Instance:mr}=Nt;var ur={compile:e=>pr.value(e),interpret:(e,t)=>!mr.typeOf(t,"string")||[...mr.value(t)].length<=e};const{Schema:fr,Instance:dr}=Nt;var hr={compile:e=>fr.value(e),interpret:(e,t)=>!dr.typeOf(t,"object")||dr.keys(t).length<=e};const{Schema:yr,Instance:vr}=Nt;var gr={compile:async(e,t,n)=>{const r=await yr.step("exclusiveMaximum",n),a=yr.value(r);return[yr.value(e),a]},interpret:([e,t],n)=>{if(!vr.typeOf(n,"number"))return!0;const r=vr.value(n);return t?r<e:r<=e}};const{Schema:$r,Instance:br}=Nt;var Sr={compile:async e=>$r.value(e),interpret:(e,t)=>!br.typeOf(t,"number")||br.value(t)<=e};const{Schema:wr,Instance:Ir}=Nt;var Or={compile:e=>wr.value(e),interpret:(e,t)=>!Ir.typeOf(t,"array")||Ir.length(t)>=e};const{Schema:xr,Instance:Er}=Nt;var jr={compile:e=>xr.value(e),interpret:(e,t)=>!Er.typeOf(t,"string")||Er.value(t).length>=e};const{Schema:Pr,Instance:Ar}=Nt;var kr={compile:e=>Pr.value(e),interpret:(e,t)=>!Ar.typeOf(t,"string")||[...Ar.value(t)].length>=e};const{Schema:Cr,Instance:Tr}=Nt;var Nr={compile:e=>Cr.value(e),interpret:(e,t)=>{const n=Tr.value(t);return!Tr.typeOf(t,"object")||Object.keys(n).length>=e}};const{Schema:Rr,Instance:qr}=Nt;var Dr={compile:async(e,t,n)=>{const r=await Rr.step("exclusiveMinimum",n),a=Rr.value(r);return[Rr.value(e),a]},interpret:([e,t],n)=>{if(!qr.typeOf(n,"number"))return!0;const r=qr.value(n);return t?r>e:r>=e}};const{Schema:Mr,Instance:Vr}=Nt;var Lr={compile:async e=>Mr.value(e),interpret:(e,t)=>!Vr.typeOf(t,"number")||Vr.value(t)>=e};const{Schema:Jr,Instance:Ur}=Nt,zr=(e,t)=>Math.abs(e-t)<1.1920929e-7;var _r={compile:e=>Jr.value(e),interpret:(e,t)=>{if(!Ur.typeOf(t,"number"))return!0;const n=Ur.value(t)%e;return zr(0,n)||zr(e,n)}};const{Core:Fr}=Nt;var Br={compile:Fr.compileSchema,interpret:(e,t,n,r)=>!Fr.interpretSchema(e,t,n,r)};const{Core:Kr,Schema:Gr}=Nt;var Hr={compile:(e,t)=>ze.pipeline([Gr.map((async e=>Kr.compileSchema(await e,t))),ze.all],e),interpret:(e,t,n,r)=>{let a=0;for(const i of e)if(Kr.interpretSchema(i,t,n,r)&&a++,a>1)break;return 1===a},collectEvaluatedProperties:(e,t,n,r)=>{let a=0;return e.reduce(((e,i)=>{if(a>1)return!1;const s=Kr.collectEvaluatedProperties(i,t,n,r);return s?0==a++&&s:e}),!1)},collectEvaluatedItems:(e,t,n,r)=>{let a=0;return e.reduce(((e,i)=>{if(a>1)return!1;const s=Kr.collectEvaluatedItems(i,t,n,r);return s?0==a++&&s:e}),!1)}};const{Schema:Zr,Instance:Wr}=Nt;var Xr={compile:e=>new RegExp(Zr.value(e),"u"),interpret:(e,t)=>!Wr.typeOf(t,"string")||e.test(Wr.value(t))};const{Core:Qr,Schema:Yr,Instance:ea}=Nt,ta=(e,t,n,r)=>!ea.typeOf(t,"object")||e.every((([e,a])=>ea.entries(t).filter((([t])=>e.test(t))).every((([,e])=>Qr.interpretSchema(a,e,n,r)))));var na={compile:(e,t)=>ze.pipeline([Yr.entries,ze.map((async([e,n])=>[new RegExp(e,"u"),await Qr.compileSchema(n,t)])),ze.all],e),interpret:ta,collectEvaluatedProperties:(e,t,n,r)=>ta(e,t,n,r)&&e.map((([e])=>e))};var ra={isObject:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,escapeRegExp:e=>e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")};const{Core:aa,Schema:ia,Instance:sa}=Nt,{escapeRegExp:oa}=ra,ca=(e,t,n,r)=>!sa.typeOf(t,"object")||sa.entries(t).filter((([t])=>t in e)).every((([t,a])=>aa.interpretSchema(e[t],a,n,r)));var la={compile:(e,t)=>ze.pipeline([ia.entries,ze.reduce((async(e,[n,r])=>(e[n]=await aa.compileSchema(r,t),e)),Object.create(null))],e),interpret:ca,collectEvaluatedProperties:(e,t,n,r)=>ca(e,t,n,r)&&Object.keys(e).map((e=>new RegExp(`^${oa(e)}$`)))};const{Core:pa,Instance:ma}=Nt;var ua={compile:(e,t)=>pa.compileSchema(e,t),interpret:(e,t,n,r)=>!ma.typeOf(t,"object")||ma.keys(t).every((t=>pa.interpretSchema(e,ma.cons(t),n,r)))};const{Core:fa,Schema:da}=Nt,{safeResolveUrl:ha,splitUrl:ya}=W;var va={compile:e=>{const t=ha(e.id,da.value(e));return ya(t)},interpret:([e,t],n,r,a)=>{const i=t in r.metaData[e].dynamicAnchors?a[t]:e,s=da.getAnchorPointer(r.metaData[i],t);return fa.interpretSchema(`${i}#${s}`,n,r,a)},collectEvaluatedProperties:fa.collectEvaluatedProperties,collectEvaluatedItems:fa.collectEvaluatedItems};const{Core:ga,Schema:$a}=Nt;var ba={compile:async(e,t)=>{const n=await $a.get($a.value(e),e);return ga.compileSchema(n,t)},interpret:ga.interpretSchema,collectEvaluatedProperties:ga.collectEvaluatedProperties,collectEvaluatedItems:ga.collectEvaluatedItems};const{Schema:Sa,Instance:wa}=Nt;var Ia={compile:e=>Sa.value(e),interpret:(e,t)=>!wa.typeOf(t,"object")||e.every((e=>wa.value(t).hasOwnProperty(e)))};const{Core:Oa,Schema:xa,Instance:Ea}=Nt,ja=(e,t,n,r)=>!Ea.typeOf(t,"array")||Ea.every(((t,a)=>!(a in e)||Oa.interpretSchema(e[a],t,n,r)),t);var Pa={compile:(e,t)=>ze.pipeline([xa.map((e=>Oa.compileSchema(e,t))),ze.all],e),interpret:ja,collectEvaluatedItems:(e,t,n,r)=>ja(e,t,n,r)&&new Set(e.map(((e,t)=>t)))};const{Schema:Aa,Instance:ka}=Nt;var Ca={compile:e=>Aa.value(e),interpret:(e,t)=>"string"==typeof e?ka.typeOf(t,e):e.some(ka.typeOf(t))};const{Core:Ta,Schema:Na,Instance:Ra}=Nt,qa=([e,t],n,r,a)=>{if(!Ra.typeOf(n,"array"))return!0;const i=Ta.collectEvaluatedItems(e,n,r,a,!0);return!1===i||Ra.every(((e,s)=>i.has(s)||Ta.interpretSchema(t,Ra.step(s,n),r,a)),n)};var Da={compile:async(e,t,n)=>[Na.uri(n),await Ta.compileSchema(e,t)],interpret:qa,collectEvaluatedItems:(e,t,n,r)=>qa(e,t,n,r)&&new Set(Ra.map(((e,t)=>t),t))};const{Core:Ma,Schema:Va,Instance:La}=Nt,Ja=([e,t],n,r,a)=>{if(!La.typeOf(n,"object"))return!0;const i=Ma.collectEvaluatedProperties(e,n,r,a,!0);return!i||La.entries(n).filter((([e])=>!i.some((t=>e.match(t))))).every((([,e])=>Ma.interpretSchema(t,e,r,a)))};var Ua={compile:async(e,t,n)=>[Va.uri(n),await Ma.compileSchema(e,t)],interpret:Ja,collectEvaluatedProperties:(e,t,n,r)=>Ja(e,t,n,r)&&[new RegExp("")]};const{Schema:za,Instance:_a}=Nt;var Fa={compile:e=>za.value(e),interpret:(e,t)=>{if(!_a.typeOf(t,"array")||!1===e)return!0;const n=_a.map((e=>cn(_a.value(e))),t);return new Set(n).size===n.length}};const{Keywords:Ba}=Nt;var Ka={additionalItems:Mt,additionalItems6:zt,additionalProperties:Kt,additionalProperties6:Xt,allOf:en,anyOf:rn,const:mn,contains:dn,containsMinContainsMaxContains:$n,definitions:wn,dependencies:En,dependentRequired:An,dependentSchemas:Nn,enum:Dn,exclusiveMaximum:Ln,exclusiveMinimum:zn,if:Fn,then:Hn,else:Qn,items:rr,maxItems:sr,maxLength:lr,maxLength6:ur,maxProperties:hr,maximumExclusiveMaximum:gr,maximum:Sr,metaData:Ba.metaData,minItems:Or,minLength:jr,minLength6:kr,minProperties:Nr,minimumExclusiveMinimum:Dr,minimum:Lr,multipleOf:_r,not:Br,oneOf:Hr,pattern:Xr,patternProperties:na,properties:la,propertyNames:ua,dynamicRef:va,ref:ba,required:Ia,tupleItems:Pa,type:Ca,unevaluatedItems:Da,unevaluatedProperties:Ua,uniqueItems:Fa,validate:Ba.validate};const{Core:Ga,Schema:Ha}=Nt,Za="http://json-schema.org/draft-04/schema";Ha.setConfig(Za,"baseToken","id"),Ha.setConfig(Za,"embeddedToken","id"),Ha.setConfig(Za,"anchorToken","id"),Ha.setConfig(Za,"jrefToken","$ref"),Ha.add(JSON.parse('{\n    "id": "http://json-schema.org/draft-04/schema#",\n    "$schema": "http://json-schema.org/draft-04/schema#",\n    "description": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "positiveInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "positiveIntegerDefault0": {\n            "allOf": [ { "$ref": "#/definitions/positiveInteger" }, { "default": 0 } ]\n        },\n        "simpleTypes": {\n            "enum": [ "array", "boolean", "integer", "null", "number", "object", "string" ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "minItems": 1,\n            "uniqueItems": true\n        }\n    },\n    "type": "object",\n    "properties": {\n        "id": {\n            "type": "string"\n        },\n        "$schema": {\n            "type": "string"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": {},\n        "multipleOf": {\n            "type": "number",\n            "minimum": 0,\n            "exclusiveMinimum": true\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "boolean",\n            "default": false\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxLength": { "$ref": "#/definitions/positiveInteger" },\n        "minLength": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": {\n            "anyOf": [\n                { "type": "boolean" },\n                { "$ref": "#" }\n            ],\n            "default": {}\n        },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": {}\n        },\n        "maxItems": { "$ref": "#/definitions/positiveInteger" },\n        "minItems": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxProperties": { "$ref": "#/definitions/positiveInteger" },\n        "minProperties": { "$ref": "#/definitions/positiveIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": {\n            "anyOf": [\n                { "type": "boolean" },\n                { "$ref": "#" }\n            ],\n            "default": {}\n        },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "enum": {\n            "type": "array",\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "dependencies": {\n        "exclusiveMaximum": [ "maximum" ],\n        "exclusiveMinimum": [ "minimum" ]\n    },\n    "default": {}\n}')),Ga.defineVocabulary(Za,{validate:Ka.validate,additionalItems:Ka.additionalItems,additionalProperties:Ka.additionalProperties,allOf:Ka.allOf,anyOf:Ka.anyOf,default:Ka.metaData,definitions:Ka.definitions,dependencies:Ka.dependencies,description:Ka.metaData,enum:Ka.enum,format:Ka.metaData,items:Ka.items,maxItems:Ka.maxItems,maxLength:Ka.maxLength,maxProperties:Ka.maxProperties,maximum:Ka.maximumExclusiveMaximum,minItems:Ka.minItems,minLength:Ka.minLength,minProperties:Ka.minProperties,minimum:Ka.minimumExclusiveMinimum,multipleOf:Ka.multipleOf,not:Ka.not,oneOf:Ka.oneOf,pattern:Ka.pattern,patternProperties:Ka.patternProperties,properties:Ka.properties,required:Ka.required,title:Ka.metaData,type:Ka.type,uniqueItems:Ka.uniqueItems});const Wa="http://json-schema.org/draft-04/hyper-schema";Ha.setConfig(Wa,"baseToken","id"),Ha.setConfig(Wa,"embeddedToken","id"),Ha.setConfig(Wa,"anchorToken","id"),Ha.setConfig(Wa,"jrefToken","$ref"),Ha.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-04/hyper-schema#",\n    "id": "http://json-schema.org/draft-04/hyper-schema#",\n    "title": "JSON Hyper-Schema",\n    "allOf": [\n        {"$ref": "http://json-schema.org/draft-04/schema#"}\n    ],\n    "properties": {\n        "additionalItems": {\n            "anyOf": [\n                {"type": "boolean"},\n                {"$ref": "#"}\n            ]\n        },\n        "additionalProperties": {\n            "anyOf": [\n                {"type": "boolean"},\n                {"$ref": "#"}\n            ]\n        },\n        "dependencies": {\n            "additionalProperties": {\n                "anyOf": [\n                    {"$ref": "#"},\n                    {"type": "array"}\n                ]\n            }\n        },\n        "items": {\n            "anyOf": [\n                {"$ref": "#"},\n                {"$ref": "#/definitions/schemaArray"}\n            ]\n        },\n        "definitions": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "patternProperties": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "properties": {\n            "additionalProperties": {"$ref": "#"}\n        },\n        "allOf": {"$ref": "#/definitions/schemaArray"},\n        "anyOf": {"$ref": "#/definitions/schemaArray"},\n        "oneOf": {"$ref": "#/definitions/schemaArray"},\n        "not": { "$ref": "#" },\n\n        "links": {\n            "type": "array",\n            "items": {"$ref": "#/definitions/linkDescription"}\n        },\n        "fragmentResolution": {\n            "type": "string"\n        },\n        "media": {\n            "type": "object",\n            "properties": {\n                "type": {\n                    "description": "A media type, as described in RFC 2046",\n                    "type": "string"\n                },\n                "binaryEncoding": {\n                    "description": "A content encoding scheme, as described in RFC 2045",\n                    "type": "string"\n                }\n            }\n        },\n        "pathStart": {\n            "description": "Instances\' URIs must start with this value for this schema to apply to them",\n            "type": "string",\n            "format": "uri"\n        }\n    },\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "items": {"$ref": "#"}\n        },\n        "linkDescription": {\n            "title": "Link Description Object",\n            "type": "object",\n            "required": ["href", "rel"],\n            "properties": {\n                "href": {\n                    "description": "a URI template, as defined by RFC 6570, with the addition of the $, ( and ) characters for pre-processing",\n                    "type": "string"\n                },\n                "rel": {\n                    "description": "relation to the target resource of the link",\n                    "type": "string"\n                },\n                "title": {\n                    "description": "a title for the link",\n                    "type": "string"\n                },\n                "targetSchema": {\n                    "description": "JSON Schema describing the link target",\n                    "$ref": "#"\n                },\n                "mediaType": {\n                    "description": "media type (as defined by RFC 2046) describing the link target",\n                    "type": "string"\n                },\n                "method": {\n                    "description": "method for requesting the target of the link (e.g. for HTTP this might be \\"GET\\" or \\"DELETE\\")",\n                    "type": "string"\n                },\n                "encType": {\n                    "description": "The media type in which to submit data along with the request",\n                    "type": "string",\n                    "default": "application/json"\n                },\n                "schema": {\n                    "description": "Schema describing the data to submit along with the request",\n                    "$ref": "#"\n                }\n            }\n        },\n        "readOnly": {\n            "description": "If true, indicates that the value of this property is controlled by the server.",\n            "type": "boolean",\n            "default": false\n        }\n    },\n    "links": [\n        {\n            "rel": "self",\n            "href": "{+id}"\n        },\n        {\n            "rel": "full",\n            "href": "{+($ref)}"\n        }\n    ]\n}')),Ga.defineVocabulary(Wa,{validate:Ka.validate,additionalItems:Ka.additionalItems,additionalProperties:Ka.additionalProperties,allOf:Ka.allOf,anyOf:Ka.anyOf,default:Ka.metaData,definitions:Ka.definitions,dependencies:Ka.dependencies,description:Ka.metaData,enum:Ka.enum,format:Ka.metaData,fragmentResolution:Ka.metaData,items:Ka.items,maxItems:Ka.maxItems,minProperties:Ka.minProperties,maxProperties:Ka.maxProperties,maximum:Ka.maximumExclusiveMaximum,media:Ka.metaData,minItems:Ka.minItems,minLength:Ka.minLength,maxLength:Ka.maxLength,minimum:Ka.minimumExclusiveMinimum,multipleOf:Ka.multipleOf,links:Ka.metaData,not:Ka.not,oneOf:Ka.oneOf,pathStart:Ka.metaData,pattern:Ka.pattern,patternProperties:Ka.patternProperties,properties:Ka.properties,readOnly:Ka.metaData,required:Ka.required,title:Ka.metaData,type:Ka.type,uniqueItems:Ka.uniqueItems});const{Core:Xa,Schema:Qa}=Nt,Ya="http://json-schema.org/draft-06/schema";Qa.setConfig(Ya,"baseToken","$id"),Qa.setConfig(Ya,"embeddedToken","$id"),Qa.setConfig(Ya,"anchorToken","$id"),Qa.setConfig(Ya,"jrefToken","$ref"),Qa.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-06/schema#",\n    "$id": "http://json-schema.org/draft-06/schema#",\n    "title": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "allOf": [\n                { "$ref": "#/definitions/nonNegativeInteger" },\n                { "default": 0 }\n            ]\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    },\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": {},\n        "examples": {\n            "type": "array",\n            "items": {}\n        },\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minLength": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": { "$ref": "#" },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": {}\n        },\n        "maxItems": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minItems": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "contains": { "$ref": "#" },\n        "maxProperties": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": { "$ref": "#" },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "propertyNames": { "$ref": "#" },\n        "const": {},\n        "enum": {\n            "type": "array",\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "default": {}\n}')),Xa.defineVocabulary(Ya,{validate:Ka.validate,additionalItems:Ka.additionalItems6,additionalProperties:Ka.additionalProperties6,allOf:Ka.allOf,anyOf:Ka.anyOf,const:Ka.const,contains:Ka.contains,default:Ka.metaData,definitions:Ka.definitions,dependencies:Ka.dependencies,description:Ka.metaData,enum:Ka.enum,examples:Ka.metaData,exclusiveMaximum:Ka.exclusiveMaximum,exclusiveMinimum:Ka.exclusiveMinimum,format:Ka.metaData,items:Ka.items,maxItems:Ka.maxItems,maxLength:Ka.maxLength6,maxProperties:Ka.maxProperties,maximum:Ka.maximum,minItems:Ka.minItems,minLength:Ka.minLength6,minProperties:Ka.minProperties,minimum:Ka.minimum,multipleOf:Ka.multipleOf,not:Ka.not,oneOf:Ka.oneOf,pattern:Ka.pattern,patternProperties:Ka.patternProperties,properties:Ka.properties,propertyNames:Ka.propertyNames,required:Ka.required,title:Ka.metaData,type:Ka.type,uniqueItems:Ka.uniqueItems});const{Core:ei,Schema:ti}=Nt,ni="http://json-schema.org/draft-07/schema";ti.setConfig(ni,"baseToken","$id"),ti.setConfig(ni,"embeddedToken","$id"),ti.setConfig(ni,"anchorToken","$id"),ti.setConfig(ni,"jrefToken","$ref"),ti.add(JSON.parse('{\n    "$schema": "http://json-schema.org/draft-07/schema#",\n    "$id": "http://json-schema.org/draft-07/schema#",\n    "title": "Core schema meta-schema",\n    "definitions": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$ref": "#" }\n        },\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "allOf": [\n                { "$ref": "#/definitions/nonNegativeInteger" },\n                { "default": 0 }\n            ]\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    },\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        },\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minLength": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "additionalItems": { "$ref": "#" },\n        "items": {\n            "anyOf": [\n                { "$ref": "#" },\n                { "$ref": "#/definitions/schemaArray" }\n            ],\n            "default": true\n        },\n        "maxItems": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minItems": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "contains": { "$ref": "#" },\n        "maxProperties": { "$ref": "#/definitions/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/definitions/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/definitions/stringArray" },\n        "additionalProperties": { "$ref": "#" },\n        "definitions": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$ref": "#" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependencies": {\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$ref": "#" },\n                    { "$ref": "#/definitions/stringArray" }\n                ]\n            }\n        },\n        "propertyNames": { "$ref": "#" },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true,\n            "minItems": 1,\n            "uniqueItems": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/definitions/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/definitions/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        },\n        "format": { "type": "string" },\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "if": { "$ref": "#" },\n        "then": { "$ref": "#" },\n        "else": { "$ref": "#" },\n        "allOf": { "$ref": "#/definitions/schemaArray" },\n        "anyOf": { "$ref": "#/definitions/schemaArray" },\n        "oneOf": { "$ref": "#/definitions/schemaArray" },\n        "not": { "$ref": "#" }\n    },\n    "default": true\n}')),ei.defineVocabulary(ni,{validate:Ka.validate,additionalItems:Ka.additionalItems6,additionalProperties:Ka.additionalProperties6,allOf:Ka.allOf,anyOf:Ka.anyOf,const:Ka.const,contains:Ka.contains,default:Ka.metaData,definitions:Ka.definitions,dependencies:Ka.dependencies,description:Ka.metaData,enum:Ka.enum,exclusiveMaximum:Ka.exclusiveMaximum,exclusiveMinimum:Ka.exclusiveMinimum,format:Ka.metaData,if:Ka.if,then:Ka.then,else:Ka.else,items:Ka.items,maxItems:Ka.maxItems,maxLength:Ka.maxLength6,maxProperties:Ka.maxProperties,maximum:Ka.maximum,minItems:Ka.minItems,minLength:Ka.minLength6,minProperties:Ka.minProperties,minimum:Ka.minimum,multipleOf:Ka.multipleOf,not:Ka.not,oneOf:Ka.oneOf,pattern:Ka.pattern,patternProperties:Ka.patternProperties,properties:Ka.properties,propertyNames:Ka.propertyNames,readOnly:Ka.metaData,required:Ka.required,title:Ka.metaData,type:Ka.type,uniqueItems:Ka.uniqueItems,writeOnly:Ka.metaData});const{Core:ri,Schema:ai}=Nt,ii="https://json-schema.org/draft/2019-09/schema";ai.setConfig(ii,"baseToken","$id"),ai.setConfig(ii,"embeddedToken","$id"),ai.setConfig(ii,"anchorToken","$anchor"),ai.setConfig(ii,"recursiveAnchorToken","$recursiveAnchor"),ai.setConfig(ii,"vocabularyToken","$vocabulary"),ai.setConfig(ii,"mandatoryVocabularies",["https://json-schema.org/draft/2019-09/vocab/core"]),ai.add(JSON.parse('{\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$id": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2019-09/vocab/core": true,\n        "https://json-schema.org/draft/2019-09/vocab/applicator": true,\n        "https://json-schema.org/draft/2019-09/vocab/validation": true,\n        "https://json-schema.org/draft/2019-09/vocab/meta-data": true,\n        "https://json-schema.org/draft/2019-09/vocab/format": false,\n        "https://json-schema.org/draft/2019-09/vocab/content": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        {"$ref": "meta/core"},\n        {"$ref": "meta/applicator"},\n        {"$ref": "meta/validation"},\n        {"$ref": "meta/meta-data"},\n        {"$ref": "meta/format"},\n        {"$ref": "meta/content"}\n    ],\n    "type": ["object", "boolean"],\n    "properties": {\n        "definitions": {\n            "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        },\n        "dependencies": {\n            "$comment": "\\"dependencies\\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \\"dependentSchemas\\" and \\"dependentRequired\\"",\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$recursiveRef": "#" },\n                    { "$ref": "meta/validation#/$defs/stringArray" }\n                ]\n            }\n        }\n    }\n}')),ai.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/core",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/core": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference",\n            "$comment": "Non-empty fragments not allowed.",\n            "pattern": "^[^#]*#?$"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$anchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z][-A-Za-z0-9.:_]*$"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$recursiveRef": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$recursiveAnchor": {\n            "type": "boolean",\n            "default": false\n        },\n        "$vocabulary": {\n            "type": "object",\n            "propertyNames": {\n                "type": "string",\n                "format": "uri"\n            },\n            "additionalProperties": {\n                "type": "boolean"\n            }\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "$defs": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        }\n    }\n}')),ri.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/core",{validate:Ka.validate,$defs:Ka.definitions,$recursiveRef:Ka.dynamicRef,$ref:Ka.ref}),ai.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/applicator",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/applicator": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Applicator vocabulary meta-schema",\n    "properties": {\n        "additionalItems": { "$recursiveRef": "#" },\n        "unevaluatedItems": { "$recursiveRef": "#" },\n        "items": {\n            "anyOf": [\n                { "$recursiveRef": "#" },\n                { "$ref": "#/$defs/schemaArray" }\n            ]\n        },\n        "contains": { "$recursiveRef": "#" },\n        "additionalProperties": { "$recursiveRef": "#" },\n        "unevaluatedProperties": { "$recursiveRef": "#" },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$recursiveRef": "#" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependentSchemas": {\n            "type": "object",\n            "additionalProperties": {\n                "$recursiveRef": "#"\n            }\n        },\n        "propertyNames": { "$recursiveRef": "#" },\n        "if": { "$recursiveRef": "#" },\n        "then": { "$recursiveRef": "#" },\n        "else": { "$recursiveRef": "#" },\n        "allOf": { "$ref": "#/$defs/schemaArray" },\n        "anyOf": { "$ref": "#/$defs/schemaArray" },\n        "oneOf": { "$ref": "#/$defs/schemaArray" },\n        "not": { "$recursiveRef": "#" }\n    },\n    "$defs": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$recursiveRef": "#" }\n        }\n    }\n}')),ri.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/applicator",{additionalItems:Ka.additionalItems6,additionalProperties:Ka.additionalProperties6,allOf:Ka.allOf,anyOf:Ka.anyOf,contains:Ka.containsMinContainsMaxContains,dependentSchemas:Ka.dependentSchemas,if:Ka.if,then:Ka.then,else:Ka.else,items:Ka.items,not:Ka.not,oneOf:Ka.oneOf,patternProperties:Ka.patternProperties,properties:Ka.properties,propertyNames:Ka.propertyNames,unevaluatedItems:Ka.unevaluatedItems,unevaluatedProperties:Ka.unevaluatedProperties}),ai.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/validation",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/validation": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Validation vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minContains": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 1\n        },\n        "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/$defs/stringArray" },\n        "dependentRequired": {\n            "type": "object",\n            "additionalProperties": {\n                "$ref": "#/$defs/stringArray"\n            }\n        },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/$defs/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/$defs/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        }\n    },\n    "$defs": {\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 0\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    }\n}')),ri.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/validation",{const:Ka.const,dependentRequired:Ka.dependentRequired,enum:Ka.enum,exclusiveMaximum:Ka.exclusiveMaximum,exclusiveMinimum:Ka.exclusiveMinimum,maxItems:Ka.maxItems,maxLength:Ka.maxLength6,maxProperties:Ka.maxProperties,maximum:Ka.maximum,minItems:Ka.minItems,minLength:Ka.minLength6,minProperties:Ka.minProperties,minimum:Ka.minimum,multipleOf:Ka.multipleOf,pattern:Ka.pattern,required:Ka.required,type:Ka.type,uniqueItems:Ka.uniqueItems}),ai.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/meta-data",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/meta-data": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Meta-data vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "deprecated": {\n            "type": "boolean",\n            "default": false\n        },\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        }\n    }\n}')),ri.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/meta-data",{default:Ka.metaData,deprecated:Ka.metaData,description:Ka.metaData,examples:Ka.metaData,readOnly:Ka.metaData,title:Ka.metaData,writeOnly:Ka.metaData}),ai.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/format",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/format": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Format vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),ai.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/2019-09/meta/content",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n      "https://json-schema.org/draft/2019-09/vocab/content": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Content vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "contentSchema": { "$recursiveRef": "#" }\n    }\n}')),ri.defineVocabulary("https://json-schema.org/draft/2019-09/vocab/content",{contentEncoding:Ka.metaData,contentMediaType:Ka.metaData,contentSchema:Ka.metaData});const{Core:si,Schema:oi}=Nt;var ci={add:oi.add,get:oi.get,validate:si.validate,compile:si.compile,interpret:si.interpret,setMetaOutputFormat:si.setMetaOutputFormat,setShouldMetaValidate:si.setShouldMetaValidate,FLAG:si.FLAG,BASIC:si.BASIC,DETAILED:si.DETAILED,VERBOSE:si.VERBOSE,Keywords:Ka};const li='(?:\\\\["\\/\\\\brfnt]|\\\\u[0-9a-fA-F]{4}|[^"\\\\])',pi=`"${li}*"`,mi=`"${li}*"(?=\\s*:)`;var ui=U((function(e){var t,n;t=J,n=function(){var e=Object.prototype.hasOwnProperty,t=Object.prototype.toString,n="boolean"==typeof(new RegExp).sticky;function r(e){return e&&"[object RegExp]"===t.call(e)}function a(e){return e&&"object"==typeof e&&!r(e)&&!Array.isArray(e)}function i(e){return"("+e+")"}function s(e){return e.length?"(?:"+e.map((function(e){return"(?:"+e+")"})).join("|")+")":"(?!)"}function o(e){if("string"==typeof e)return"(?:"+e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")+")";if(r(e)){if(e.ignoreCase)throw new Error("RegExp /i flag not allowed");if(e.global)throw new Error("RegExp /g flag is implied");if(e.sticky)throw new Error("RegExp /y flag is implied");if(e.multiline)throw new Error("RegExp /m flag is implied");return e.source}throw new Error("Not a pattern: "+e)}function c(t,n){if(a(n)||(n={match:n}),n.include)throw new Error("Matching rules cannot also include states");var i={defaultType:t,lineBreaks:!!n.error||!!n.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var s in n)e.call(n,s)&&(i[s]=n[s]);if("string"==typeof i.type&&t!==i.type)throw new Error("Type transform cannot be a string (type '"+i.type+"' for token '"+t+"')");var o=i.match;return i.match=Array.isArray(o)?o:o?[o]:[],i.match.sort((function(e,t){return r(e)&&r(t)?0:r(t)?-1:r(e)?1:t.length-e.length})),i}function l(e){return Array.isArray(e)?function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(r.include)for(var a=[].concat(r.include),i=0;i<a.length;i++)t.push({include:a[i]});else{if(!r.type)throw new Error("Rule has no type: "+JSON.stringify(r));t.push(c(r.type,r))}}return t}(e):function(e){for(var t=Object.getOwnPropertyNames(e),n=[],r=0;r<t.length;r++){var i=t[r],s=e[i],o=[].concat(s);if("include"!==i){var l=[];o.forEach((function(e){a(e)?(l.length&&n.push(c(i,l)),n.push(c(i,e)),l=[]):l.push(e)})),l.length&&n.push(c(i,l))}else for(var p=0;p<o.length;p++)n.push({include:o[p]})}return n}(e)}var p=c("error",{lineBreaks:!0,shouldThrow:!0});function m(e,t){for(var a=null,c=Object.create(null),l=!0,m=null,u=[],f=[],d=0;d<e.length;d++)e[d].fallback&&(l=!1);for(d=0;d<e.length;d++){var h=e[d];if(h.include)throw new Error("Inheritance is not allowed in stateless lexers");if(h.error||h.fallback){if(a)throw!h.fallback==!a.fallback?new Error("Multiple "+(h.fallback?"fallback":"error")+" rules not allowed (for token '"+h.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+h.defaultType+"')");a=h}var y=h.match.slice();if(l)for(;y.length&&"string"==typeof y[0]&&1===y[0].length;)c[y.shift().charCodeAt(0)]=h;if(h.pop||h.push||h.next){if(!t)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+h.defaultType+"')");if(h.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+h.defaultType+"')")}if(0!==y.length){l=!1,u.push(h);for(var v=0;v<y.length;v++){var g=y[v];if(r(g))if(null===m)m=g.unicode;else if(m!==g.unicode&&!1===h.fallback)throw new Error("If one rule is /u then all must be")}var $=s(y.map(o)),b=new RegExp($);if(b.test(""))throw new Error("RegExp matches empty string: "+b);if(new RegExp("|"+$).exec("").length-1>0)throw new Error("RegExp has capture groups: "+b+"\nUse (?: … ) instead");if(!h.lineBreaks&&b.test("\n"))throw new Error("Rule should declare lineBreaks: "+b);f.push(i($))}}var S=a&&a.fallback,w=n&&!S?"ym":"gm",I=n||S?"":"|";return!0===m&&(w+="u"),{regexp:new RegExp(s(f)+I,w),groups:u,fast:c,error:a||p}}function u(e,t,n){var r=e&&(e.push||e.next);if(r&&!n[r])throw new Error("Missing state '"+r+"' (in token '"+e.defaultType+"' of state '"+t+"')");if(e&&e.pop&&1!=+e.pop)throw new Error("pop must be 1 (in token '"+e.defaultType+"' of state '"+t+"')")}var f=function(e,t){this.startState=t,this.states=e,this.buffer="",this.stack=[],this.reset()};f.prototype.reset=function(e,t){return this.buffer=e||"",this.index=0,this.line=t?t.line:1,this.col=t?t.col:1,this.queuedToken=t?t.queuedToken:null,this.queuedThrow=t?t.queuedThrow:null,this.setState(t?t.state:this.startState),this.stack=t&&t.stack?t.stack.slice():[],this},f.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},f.prototype.setState=function(e){if(e&&this.state!==e){this.state=e;var t=this.states[e];this.groups=t.groups,this.error=t.error,this.re=t.regexp,this.fast=t.fast}},f.prototype.popState=function(){this.setState(this.stack.pop())},f.prototype.pushState=function(e){this.stack.push(this.state),this.setState(e)};var d=n?function(e,t){return e.exec(t)}:function(e,t){var n=e.exec(t);return 0===n[0].length?null:n};function h(){return this.value}if(f.prototype._getGroup=function(e){for(var t=this.groups.length,n=0;n<t;n++)if(void 0!==e[n+1])return this.groups[n];throw new Error("Cannot find token type for matched text")},f.prototype.next=function(){var e=this.index;if(this.queuedGroup){var t=this._token(this.queuedGroup,this.queuedText,e);return this.queuedGroup=null,this.queuedText="",t}var n=this.buffer;if(e!==n.length){if(s=this.fast[n.charCodeAt(e)])return this._token(s,n.charAt(e),e);var r=this.re;r.lastIndex=e;var a=d(r,n),i=this.error;if(null==a)return this._token(i,n.slice(e,n.length),e);var s=this._getGroup(a),o=a[0];return i.fallback&&a.index!==e?(this.queuedGroup=s,this.queuedText=o,this._token(i,n.slice(e,a.index),e)):this._token(s,o,e)}},f.prototype._token=function(e,t,n){var r=0;if(e.lineBreaks){var a=/\n/g,i=1;if("\n"===t)r=1;else for(;a.exec(t);)r++,i=a.lastIndex}var s={type:"function"==typeof e.type&&e.type(t)||e.defaultType,value:"function"==typeof e.value?e.value(t):t,text:t,toString:h,offset:n,lineBreaks:r,line:this.line,col:this.col},o=t.length;if(this.index+=o,this.line+=r,0!==r?this.col=o-i+1:this.col+=o,e.shouldThrow)throw new Error(this.formatError(s,"invalid syntax"));return e.pop?this.popState():e.push?this.pushState(e.push):e.next&&this.setState(e.next),s},"undefined"!=typeof Symbol&&Symbol.iterator){var y=function(e){this.lexer=e};y.prototype.next=function(){var e=this.lexer.next();return{value:e,done:!e}},y.prototype[Symbol.iterator]=function(){return this},f.prototype[Symbol.iterator]=function(){return new y(this)}}return f.prototype.formatError=function(e,t){if(null==e){var n=this.buffer.slice(this.index);e={text:n,offset:this.index,lineBreaks:-1===n.indexOf("\n")?0:1,line:this.line,col:this.col}}var r=Math.max(0,e.offset-e.col+1),a=e.lineBreaks?e.text.indexOf("\n"):e.text.length,i=this.buffer.substring(r,e.offset+a);return t+=" at line "+e.line+" col "+e.col+":\n\n",t+="  "+i+"\n",t+="  "+Array(e.col).join(" ")+"^"},f.prototype.clone=function(){return new f(this.states,this.state)},f.prototype.has=function(e){return!0},{compile:function(e){var t=m(l(e));return new f({start:t},"start")},states:function(e,t){var n=e.$all?l(e.$all):[];delete e.$all;var r=Object.getOwnPropertyNames(e);t||(t=r[0]);for(var a=Object.create(null),i=0;i<r.length;i++)a[$=r[i]]=l(e[$]).concat(n);for(i=0;i<r.length;i++)for(var s=a[$=r[i]],o=Object.create(null),c=0;c<s.length;c++){var p=s[c];if(p.include){var d=[c,1];if(p.include!==$&&!o[p.include]){o[p.include]=!0;var h=a[p.include];if(!h)throw new Error("Cannot include nonexistent state '"+p.include+"' (in state '"+$+"')");for(var y=0;y<h.length;y++){var v=h[y];-1===s.indexOf(v)&&d.push(v)}}s.splice.apply(s,d),c--}}var g=Object.create(null);for(i=0;i<r.length;i++){var $;g[$=r[i]]=m(a[$],!0)}for(i=0;i<r.length;i++){var b=r[i],S=g[b],w=S.groups;for(c=0;c<w.length;c++)u(w[c],b,g);var I=Object.getOwnPropertyNames(S.fast);for(c=0;c<I.length;c++)u(S.fast[I[c]],b,g)}return new f(g,t)},error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:function(e){for(var t=Object.create(null),n=Object.create(null),r=Object.getOwnPropertyNames(e),a=0;a<r.length;a++){var i=r[a],s=e[i];(Array.isArray(s)?s:[s]).forEach((function(e){if((n[e.length]=n[e.length]||[]).push(e),"string"!=typeof e)throw new Error("keyword must be string (in keyword '"+i+"')");t[e]=i}))}function o(e){return JSON.stringify(e)}var c="";for(var l in c+="switch (value.length) {\n",n){var p=n[l];c+="case "+l+":\n",c+="switch (value) {\n",p.forEach((function(e){var n=t[e];c+="case "+o(e)+": return "+o(n)+"\n"})),c+="}\n"}return c+="}\n",Function("value",c)}}},e.exports?e.exports=n():t.moo=n()})).compile({WS:{match:/(?:(?:\r?\n)|[ \t])+/,lineBreaks:!0},punctuation:/[:,]/,number:new RegExp("-?(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][-+][0-9]+)?"),property:new RegExp(mi),string:new RegExp(pi),grouping:["{","}","[","]"],boolean:["true","false"],null:["null"],other:/./});function fi(e,t,n){const r=e.slice();return r[9]=t[n],r}function di(e,t,n){const r=e.slice();return r[12]=t[n],r[14]=n,r}function hi(e){let t,n,f=e[14]+1+"";return{c(){t=r("div"),n=a(f),this.h()},l(e){t=i(e,"DIV",{class:!0});var r=s(t);n=o(r,f),r.forEach(c),this.h()},h(){l(t,"class","svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p:u,d(e){e&&c(t)}}}function yi(e){let t,n=e[9].value+"";return{c(){t=a(n)},l(e){t=o(e,n)},m(e,n){p(e,t,n)},p(e,r){16&r&&n!==(n=e[9].value+"")&&w(t,n)},d(e){e&&c(t)}}}function vi(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","null svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&w(n,u)},d(e){e&&c(t)}}}function gi(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","boolean svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&w(n,u)},d(e){e&&c(t)}}}function $i(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","number svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&w(n,u)},d(e){e&&c(t)}}}function bi(e){let t,n,u,f,d=e[9].value.substring(1,e[9].value.length-1)+"";return{c(){t=a('"'),n=r("span"),u=a(d),f=a('"'),this.h()},l(e){t=o(e,'"'),n=i(e,"SPAN",{class:!0});var r=s(n);u=o(r,d),r.forEach(c),f=o(e,'"'),this.h()},h(){l(n,"class","string svelte-o0qsb5")},m(e,r){p(e,t,r),p(e,n,r),m(n,u),p(e,f,r)},p(e,t){16&t&&d!==(d=e[9].value.substring(1,e[9].value.length-1)+"")&&w(u,d)},d(e){e&&c(t),e&&c(n),e&&c(f)}}}function Si(e){let t,n,u,f,d=e[9].value.substring(1,e[9].value.length-1)+"";return{c(){t=a('"'),n=r("span"),u=a(d),f=a('"'),this.h()},l(e){t=o(e,'"'),n=i(e,"SPAN",{class:!0});var r=s(n);u=o(r,d),r.forEach(c),f=o(e,'"'),this.h()},h(){l(n,"class","property svelte-o0qsb5")},m(e,r){p(e,t,r),p(e,n,r),m(n,u),p(e,f,r)},p(e,t){16&t&&d!==(d=e[9].value.substring(1,e[9].value.length-1)+"")&&w(u,d)},d(e){e&&c(t),e&&c(n),e&&c(f)}}}function wi(e){let t,n,u=e[9].value+"";return{c(){t=r("span"),n=a(u),this.h()},l(e){t=i(e,"SPAN",{class:!0});var r=s(t);n=o(r,u),r.forEach(c),this.h()},h(){l(t,"class","grouping svelte-o0qsb5")},m(e,r){p(e,t,r),m(t,n)},p(e,t){16&t&&u!==(u=e[9].value+"")&&w(n,u)},d(e){e&&c(t)}}}function Ii(e){let t;function n(e,t){return"grouping"===e[9].type?wi:"property"===e[9].type?Si:"string"===e[9].type?bi:"number"===e[9].type?$i:"boolean"===e[9].type?gi:"null"===e[9].type?vi:yi}let r=n(e),a=r(e);return{c(){a.c(),t=f()},l(e){a.l(e),t=f()},m(e,n){a.m(e,n),p(e,t,n)},p(e,i){r===(r=n(e))&&a?a.p(e,i):(a.d(1),a=r(e),a&&(a.c(),a.m(t.parentNode,t)))},d(e){a.d(e),e&&c(t)}}}function Oi(e){let t,n,a,o,f,b,S,w,I,O,x=[...Array(e[3])],E=[];for(let t=0;t<x.length;t+=1)E[t]=hi(di(e,x,t));let j=e[4],P=[];for(let t=0;t<j.length;t+=1)P[t]=Ii(fi(e,j,t));return{c(){t=r("div"),n=r("div");for(let e=0;e<E.length;e+=1)E[e].c();a=d(),o=r("div"),f=r("pre");for(let e=0;e<P.length;e+=1)P[e].c();b=d(),S=r("textarea"),this.h()},l(e){t=i(e,"DIV",{class:!0});var r=s(t);n=i(r,"DIV",{class:!0});var l=s(n);for(let e=0;e<E.length;e+=1)E[e].l(l);l.forEach(c),a=h(r),o=i(r,"DIV",{class:!0});var p=s(o);f=i(p,"PRE",{class:!0});var m=s(f);for(let e=0;e<P.length;e+=1)P[e].l(m);m.forEach(c),b=h(p),S=i(p,"TEXTAREA",{class:!0,"aria-label":!0}),s(S).forEach(c),p.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","line-numbers svelte-o0qsb5"),l(f,"class","highlighted svelte-o0qsb5"),l(S,"class","src svelte-o0qsb5"),l(S,"aria-label","Code Editor"),l(o,"class","editable svelte-o0qsb5"),l(t,"class",w="Editor "+e[1]+" svelte-o0qsb5")},m(r,i){p(r,t,i),m(t,n);for(let e=0;e<E.length;e+=1)E[e].m(n,null);m(t,a),m(t,o),m(o,f);for(let e=0;e<P.length;e+=1)P[e].m(f,null);m(o,b),m(o,S),e[7](S),y(S,e[0]),I||(O=[v(S,"input",e[8]),v(S,"input",e[6])],I=!0)},p(e,[r]){if(8&r){let t;for(x=[...Array(e[3])],t=0;t<x.length;t+=1){const a=di(e,x,t);E[t]?E[t].p(a,r):(E[t]=hi(a),E[t].c(),E[t].m(n,null))}for(;t<E.length;t+=1)E[t].d(1);E.length=x.length}if(16&r){let t;for(j=e[4],t=0;t<j.length;t+=1){const n=fi(e,j,t);P[t]?P[t].p(n,r):(P[t]=Ii(n),P[t].c(),P[t].m(f,null))}for(;t<P.length;t+=1)P[t].d(1);P.length=j.length}1&r&&y(S,e[0]),2&r&&w!==(w="Editor "+e[1]+" svelte-o0qsb5")&&l(t,"class",w)},i:u,o:u,d(n){n&&c(t),g(E,n),g(P,n),e[7](null),I=!1,$(O)}}}function xi(e,t,n){let r,{theme:a="solarized-dark"}=t,{value:i=""}=t;let s,o;return e.$$set=e=>{"theme"in e&&n(1,a=e.theme),"value"in e&&n(0,i=e.value)},e.$$.update=()=>{1&e.$$.dirty&&n(3,s=(i.match(/\n/g)||[]).length+1),1&e.$$.dirty&&n(4,(ui.reset(i),o=Array.from(ui)))},[i,a,r,s,o,()=>{r.focus()},function(t){b(e,t)},function(e){S[e?"unshift":"push"]((()=>{r=e,n(2,r)}))},function(){i=this.value,n(0,i)}]}class Ei extends e{constructor(e){super(),t(this,e,xi,Oi,n,{theme:1,value:0,focus:5})}get focus(){return this.$$.ctx[5]}}function ji(e,t,n){const r=e.slice();return r[16]=t[n],r[18]=n,r}function Pi(e){let t,n,u,f;function d(){return e[11](e[18])}return{c(){t=r("button"),n=a("×"),this.h()},l(e){t=i(e,"BUTTON",{class:!0});var r=s(t);n=o(r,"×"),r.forEach(c),this.h()},h(){l(t,"class","tab-close svelte-1ylgy73")},m(e,r){p(e,t,r),m(t,n),u||(f=v(t,"click",d),u=!0)},p(t,n){e=t},d(e){e&&c(t),u=!1,f()}}}function Ai(e){let t,n,u,f,y,g,$,b,S=e[16].label+"",O=!e[16].persistent&&e[0].length>e[5]&&Pi(e);function x(){return e[12](e[18])}return{c(){t=r("button"),n=r("span"),u=a(S),f=d(),O&&O.c(),this.h()},l(e){t=i(e,"BUTTON",{role:!0,id:!0,"aria-selected":!0,"aria-controls":!0,class:!0});var r=s(t);n=i(r,"SPAN",{class:!0});var a=s(n);u=o(a,S),a.forEach(c),f=h(r),O&&O.l(r),r.forEach(c),this.h()},h(){l(n,"class","tab-label svelte-1ylgy73"),l(t,"role","tab"),l(t,"id",y=`${e[2]}-tab-${e[18]}`),l(t,"aria-selected",g=e[18]===e[1]),l(t,"aria-controls","tabpanel"),l(t,"class","svelte-1ylgy73"),I(t,"active",e[18]===e[4])},m(e,r){p(e,t,r),m(t,n),m(n,u),m(t,f),O&&O.m(t,null),$||(b=v(t,"click",x),$=!0)},p(n,r){e=n,1&r&&S!==(S=e[16].label+"")&&w(u,S),!e[16].persistent&&e[0].length>e[5]?O?O.p(e,r):(O=Pi(e),O.c(),O.m(t,null)):O&&(O.d(1),O=null),4&r&&y!==(y=`${e[2]}-tab-${e[18]}`)&&l(t,"id",y),2&r&&g!==(g=e[18]===e[1])&&l(t,"aria-selected",g),16&r&&I(t,"active",e[18]===e[4])},d(e){e&&c(t),O&&O.d(),$=!1,b()}}}function ki(e){let t,n,u,f,d,h;return{c(){t=r("button"),n=r("span"),u=a("+"),this.h()},l(e){t=i(e,"BUTTON",{role:!0,id:!0,class:!0});var r=s(t);n=i(r,"SPAN",{class:!0});var a=s(n);u=o(a,"+"),a.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","tab-label svelte-1ylgy73"),l(t,"role","tab"),l(t,"id",f=`${e[2]}-tab-${e[0].length}`),l(t,"class","svelte-1ylgy73")},m(r,a){p(r,t,a),m(t,n),m(n,u),d||(h=v(t,"click",e[9]),d=!0)},p(e,n){5&n&&f!==(f=`${e[2]}-tab-${e[0].length}`)&&l(t,"id",f)},d(e){e&&c(t),d=!1,h()}}}function Ci(e){let t,n,a,o,u,f,y,v,$=e[0],b=[];for(let t=0;t<$.length;t+=1)b[t]=Ai(ji(e,$,t));let w=e[3]&&ki(e);function I(t){e[14].call(null,t)}let T={};return void 0!==e[0][e[1]].text&&(T.value=e[0][e[1]].text),u=new Ei({props:T}),e[13](u),S.push((()=>O(u,"value",I))),u.$on("input",e[15]),{c(){t=r("div");for(let e=0;e<b.length;e+=1)b[e].c();n=d(),w&&w.c(),a=d(),o=r("div"),x(u.$$.fragment),this.h()},l(e){t=i(e,"DIV",{role:!0,class:!0});var r=s(t);for(let e=0;e<b.length;e+=1)b[e].l(r);n=h(r),w&&w.l(r),r.forEach(c),a=h(e),o=i(e,"DIV",{role:!0,id:!0,"aria-labelledby":!0,class:!0});var l=s(o);E(u.$$.fragment,l),l.forEach(c),this.h()},h(){l(t,"role","tablist"),l(t,"class","svelte-1ylgy73"),l(o,"role","tabpanel"),l(o,"id","tabpanel"),l(o,"aria-labelledby",y=`${e[2]}-tab-${e[1]}`),l(o,"class","svelte-1ylgy73")},m(e,r){p(e,t,r);for(let e=0;e<b.length;e+=1)b[e].m(t,null);m(t,n),w&&w.m(t,null),p(e,a,r),p(e,o,r),j(u,o,null),v=!0},p(e,[r]){if(1335&r){let a;for($=e[0],a=0;a<$.length;a+=1){const i=ji(e,$,a);b[a]?b[a].p(i,r):(b[a]=Ai(i),b[a].c(),b[a].m(t,n))}for(;a<b.length;a+=1)b[a].d(1);b.length=$.length}e[3]?w?w.p(e,r):(w=ki(e),w.c(),w.m(t,null)):w&&(w.d(1),w=null);const a={};!f&&3&r&&(f=!0,a.value=e[0][e[1]].text,P((()=>f=!1))),u.$set(a),(!v||6&r&&y!==(y=`${e[2]}-tab-${e[1]}`))&&l(o,"aria-labelledby",y)},i(e){v||(A(u.$$.fragment,e),v=!0)},o(e){k(u.$$.fragment,e),v=!1},d(n){n&&c(t),g(b,n),w&&w.d(),n&&c(a),n&&c(o),e[13](null),C(u)}}}function Ti(e,t,n){let r,{ns:a=""}=t,{tabs:i=[]}=t,{newTab:s}=t,{active:o=0}=t,{selected:c=0}=t,{minTabs:l=1}=t;const p=T();function m(e){n(1,c=e),r.focus()}function u(e){c>=e&&c>0&&n(1,c-=1),i.splice(e,1),n(0,i),r.focus()}return e.$$set=e=>{"ns"in e&&n(2,a=e.ns),"tabs"in e&&n(0,i=e.tabs),"newTab"in e&&n(3,s=e.newTab),"active"in e&&n(4,o=e.active),"selected"in e&&n(1,c=e.selected),"minTabs"in e&&n(5,l=e.minTabs)},[i,c,a,s,o,l,r,p,m,function(){n(0,i[i.length]=s(),i),n(1,c=i.length-1),r.focus()},u,e=>u(e),e=>m(e),function(e){S[e?"unshift":"push"]((()=>{r=e,n(6,r)}))},function(e){i[c].text=e,n(0,i)},e=>p("input",i)]}class Ni extends e{constructor(e){super(),t(this,e,Ti,Ci,n,{ns:2,tabs:0,newTab:3,active:4,selected:1,minTabs:5})}}function Ri(e,t,n){const r=e.slice();return r[2]=t[n],r}function qi(e){let t;function n(e,t){return e[1].output?Mi:Di}let r=n(e),a=r(e);return{c(){a.c(),t=f()},l(e){a.l(e),t=f()},m(e,n){a.m(e,n),p(e,t,n)},p(e,i){r===(r=n(e))&&a?a.p(e,i):(a.d(1),a=r(e),a&&(a.c(),a.m(t.parentNode,t)))},d(e){a.d(e),e&&c(t)}}}function Di(e){let t,n=e[1]+"";return{c(){t=a(n)},l(e){t=o(e,n)},m(e,n){p(e,t,n)},p(e,r){1&r&&n!==(n=e[1]+"")&&w(t,n)},d(e){e&&c(t)}}}function Mi(e){let t,n,l=e[1].output.errors,m=[];for(let t=0;t<l.length;t+=1)m[t]=Li(Ri(e,l,t));return{c(){t=a("Invalid\n    "),n=r("ul");for(let e=0;e<m.length;e+=1)m[e].c()},l(e){t=o(e,"Invalid\n    "),n=i(e,"UL",{});var r=s(n);for(let e=0;e<m.length;e+=1)m[e].l(r);r.forEach(c)},m(e,r){p(e,t,r),p(e,n,r);for(let e=0;e<m.length;e+=1)m[e].m(n,null)},p(e,t){if(1&t){let r;for(l=e[1].output.errors,r=0;r<l.length;r+=1){const a=Ri(e,l,r);m[r]?m[r].p(a,t):(m[r]=Li(a),m[r].c(),m[r].m(n,null))}for(;r<m.length;r+=1)m[r].d(1);m.length=l.length}},d(e){e&&c(t),e&&c(n),g(m,e)}}}function Vi(e){let t,n,u,f,d,h,y=e[2].instanceLocation+"",v=e[2].absoluteKeywordLocation+"";return{c(){t=r("li"),n=r("code"),u=a(y),f=a(" fails schema constraint "),d=r("code"),h=a(v),this.h()},l(e){t=i(e,"LI",{class:!0});var r=s(t);n=i(r,"CODE",{class:!0});var a=s(n);u=o(a,y),a.forEach(c),f=o(r," fails schema constraint "),d=i(r,"CODE",{class:!0});var l=s(d);h=o(l,v),l.forEach(c),r.forEach(c),this.h()},h(){l(n,"class","svelte-1sdf2dp"),l(d,"class","svelte-1sdf2dp"),l(t,"class","svelte-1sdf2dp")},m(e,r){p(e,t,r),m(t,n),m(n,u),m(t,f),m(t,d),m(d,h)},p(e,t){1&t&&y!==(y=e[2].instanceLocation+"")&&w(u,y),1&t&&v!==(v=e[2].absoluteKeywordLocation+"")&&w(h,v)},d(e){e&&c(t)}}}function Li(e){let t,n=!e[2].valid&&!e[2].keyword.endsWith("#validate"),r=n&&Vi(e);return{c(){r&&r.c(),t=f()},l(e){r&&r.l(e),t=f()},m(e,n){r&&r.m(e,n),p(e,t,n)},p(e,a){1&a&&(n=!e[2].valid&&!e[2].keyword.endsWith("#validate")),n?r?r.p(e,a):(r=Vi(e),r.c(),r.m(t.parentNode,t)):r&&(r.d(1),r=null)},d(e){r&&r.d(e),e&&c(t)}}}function Ji(e){let t,n=e[0]?"Valid":"";return{c(){t=a(n)},l(e){t=o(e,n)},m(e,n){p(e,t,n)},p(e,r){1&r&&n!==(n=e[0]?"Valid":"")&&w(t,n)},d(e){e&&c(t)}}}function Ui(e){let t;return{c(){t=a("Validating ...")},l(e){t=o(e,"Validating ...")},m(e,n){p(e,t,n)},p:u,d(e){e&&c(t)}}}function zi(e){let t,n,r={ctx:e,current:null,token:null,hasCatch:!0,pending:Ui,then:Ji,catch:qi,value:0,error:1};return N(n=e[0],r),{c(){t=f(),r.block.c()},l(e){t=f(),r.block.l(e)},m(e,n){p(e,t,n),r.block.m(e,r.anchor=n),r.mount=()=>t.parentNode,r.anchor=t},p(t,[a]){if(e=t,r.ctx=e,1&a&&n!==(n=e[0])&&N(n,r));else{const t=e.slice();t[0]=t[1]=r.resolved,r.block.p(t,a)}},i:u,o:u,d(e){e&&c(t),r.block.d(e),r.token=null,r=null}}}function _i(e,t,n){let{results:r}=t;return e.$$set=e=>{"results"in e&&n(0,r=e.results)},[r]}class Fi extends e{constructor(e){super(),t(this,e,_i,zi,n,{results:0})}}function Bi(e){let t,n,a,o,u;const f=e[2].default,y=R(f,e,e[1],null);return{c(){t=r("a"),n=q("svg"),a=q("path"),o=d(),y&&y.c(),this.h()},l(e){t=i(e,"A",{href:!0,class:!0});var r=s(t);n=i(r,"svg",{height:!0,viewBox:!0,version:!0,"aria-hidden":!0,class:!0},1);var l=s(n);a=i(l,"path",{"fill-rule":!0,d:!0},1),s(a).forEach(c),l.forEach(c),o=h(r),y&&y.l(r),r.forEach(c),this.h()},h(){l(a,"fill-rule","evenodd"),l(a,"d","M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"),l(n,"height","1.5em"),l(n,"viewBox","0 0 16 16"),l(n,"version","1.1"),l(n,"aria-hidden","true"),l(n,"class","svelte-i8toq"),l(t,"href",e[0]),l(t,"class","svelte-i8toq")},m(e,r){p(e,t,r),m(t,n),m(n,a),m(t,o),y&&y.m(t,null),u=!0},p(e,[n]){y&&y.p&&2&n&&D(y,f,e,e[1],n,null,null),(!u||1&n)&&l(t,"href",e[0])},i(e){u||(A(y,e),u=!0)},o(e){k(y,e),u=!1},d(e){e&&c(t),y&&y.d(e)}}}function Ki(e,t,n){let{$$slots:r={},$$scope:a}=t,{href:i=""}=t;return e.$$set=e=>{"href"in e&&n(0,i=e.href),"$$scope"in e&&n(1,a=e.$$scope)},[i,a,r]}class Gi extends e{constructor(e){super(),t(this,e,Ki,Bi,n,{href:0})}}function Hi(e){let t,n,a,o,u;const f=e[2].default,y=R(f,e,e[1],null);return{c(){t=r("a"),n=q("svg"),a=q("path"),o=d(),y&&y.c(),this.h()},l(e){t=i(e,"A",{href:!0,class:!0});var r=s(t);n=i(r,"svg",{height:!0,viewBox:!0,version:!0,"aria-hidden":!0,class:!0},1);var l=s(n);a=i(l,"path",{d:!0},1),s(a).forEach(c),l.forEach(c),o=h(r),y&&y.l(r),r.forEach(c),this.h()},h(){l(a,"d","M240,250h100v-50h100V0H240V250z M340,50h50v100h-50V50z M480,0v200h100V50h50v150h50V50h50v150h50V0H480z M0,200h100V50h50v150h50V0H0V200z"),l(n,"height","1em"),l(n,"viewBox","0 0 780 250"),l(n,"version","1.1"),l(n,"aria-hidden","true"),l(n,"class","svelte-wj8h0n"),l(t,"href",e[0]),l(t,"class","svelte-wj8h0n")},m(e,r){p(e,t,r),m(t,n),m(n,a),m(t,o),y&&y.m(t,null),u=!0},p(e,[n]){y&&y.p&&2&n&&D(y,f,e,e[1],n,null,null),(!u||1&n)&&l(t,"href",e[0])},i(e){u||(A(y,e),u=!0)},o(e){k(y,e),u=!1},d(e){e&&c(t),y&&y.d(e)}}}function Zi(e,t,n){let{$$slots:r={},$$scope:a}=t,{href:i=""}=t;return e.$$set=e=>{"href"in e&&n(0,i=e.href),"$$scope"in e&&n(1,a=e.$$scope)},[i,a,r]}class Wi extends e{constructor(e){super(),t(this,e,Zi,Hi,n,{href:0})}}function Xi(e){let t,n,a,o,u,f,y,v,g;const $=e[2].default,b=R($,e,e[1],null);return{c(){t=r("a"),n=q("svg"),a=q("g"),o=q("path"),u=q("path"),f=q("path"),y=q("path"),v=d(),b&&b.c(),this.h()},l(e){t=i(e,"A",{href:!0,class:!0});var r=s(t);n=i(r,"svg",{version:!0,viewBox:!0,height:!0,class:!0},1);var l=s(n);a=i(l,"g",{transform:!0,id:!0},1);var p=s(a);o=i(p,"path",{id:!0,d:!0,style:!0},1),s(o).forEach(c),u=i(p,"path",{id:!0,d:!0,style:!0},1),s(u).forEach(c),f=i(p,"path",{id:!0,d:!0,style:!0},1),s(f).forEach(c),y=i(p,"path",{id:!0,d:!0,style:!0},1),s(y).forEach(c),p.forEach(c),l.forEach(c),v=h(r),b&&b.l(r),r.forEach(c),this.h()},h(){l(o,"id","path4544"),l(o,"d","m 122.99401,114.18985 c -4.32897,-0.9404 -7.58044,-3.47848 -8.71251,-6.80095 -0.78921,-2.31618 -0.67682,-6.07238 0.33363,-11.150598 0.48507,-2.437836 0.88169,-5.347843 0.88139,-6.466688 -9.8e-4,-3.718098 -1.71106,-5.735418 -5.1001,-6.016462 l -1.9549,-0.162116 v -2.392655 -2.392657 l 1.85208,-0.250855 c 2.70243,-0.366031 3.74441,-1.02838 4.57629,-2.908984 0.61121,-1.381726 0.68884,-2.068648 0.50552,-4.472869 -0.11913,-1.562244 -0.53527,-4.348568 -0.92477,-6.191832 -0.98954,-4.682868 -0.94822,-8.485471 0.11707,-10.773163 1.56862,-3.368589 5.43705,-5.854553 9.93248,-6.382903 l 1.93299,-0.227185 v 2.518015 2.518015 h -1.29973 c -1.77186,0 -4.2497,1.262413 -4.8835,2.488054 -0.60797,1.175674 -0.65405,2.864146 -0.15834,5.802223 0.78343,4.643508 1.04707,9.098344 0.67592,11.421636 -0.42464,2.658142 -1.97477,5.796328 -3.6791,7.448236 l -1.18012,1.143813 1.61497,1.982752 c 1.99051,2.443801 2.76458,4.148744 3.24284,7.142561 0.37835,2.368341 0.0844,7.282673 -0.67072,11.213982 -1.05359,5.48514 0.1623,7.65141 4.66209,8.30613 l 1.67569,0.24382 v 2.44782 c 0,2.79211 0.17086,2.69708 -3.43917,1.91286 z"),M(o,"fill","stroke-width:0.35277775"),l(u,"id","path4546"),l(u,"d","m 152.2304,112.24932 v -2.42987 l 2.04969,-0.42336 c 2.26276,-0.46736 4.054,-1.8634 4.45842,-3.47475 0.1274,-0.50758 -0.11267,-3.16398 -0.53347,-5.90311 -1.37183,-8.929552 -0.6114,-13.537042 2.85482,-17.297452 l 1.48237,-1.60818 -1.1108,-1.26512 c -3.97855,-4.53132 -4.66885,-8.552208 -3.15364,-18.369547 0.76342,-4.946305 0.76409,-4.994322 0.087,-6.173611 -0.79713,-1.388278 -3.28385,-2.776033 -4.97438,-2.776033 h -1.15997 v -2.469445 c 0,-2.811057 -0.0583,-2.773846 3.24583,-2.072788 3.9645,0.841179 6.80448,2.853272 8.27787,5.864775 0.84544,1.728026 0.97275,2.400136 0.94911,5.010889 -0.015,1.658349 -0.35758,4.682054 -0.76125,6.719346 -1.49867,7.563594 -1.3651,9.576204 0.7654,11.532814 0.98915,0.90842 1.64012,1.17274 3.37032,1.36849 l 2.14439,0.24261 v 2.42387 2.42388 l -1.6757,7.1e-4 c -2.1517,7e-4 -3.9323,0.90924 -4.83869,2.46889 -0.95194,1.63803 -0.89239,5.20675 0.17364,10.40695 0.90648,4.421902 1.05253,8.458452 0.3882,10.728752 -0.70059,2.39406 -3.81995,5.29609 -6.74745,6.27718 -1.26118,0.42266 -2.96775,0.87096 -3.79236,0.99623 l -1.49931,0.22775 z"),M(u,"stroke-width","0.35277778"),l(f,"id","path4548"),l(f,"d","m 131.74239,108.26592 c -1.02163,-1.2988 -0.87294,-3.53652 0.38087,-5.73185 0.92776,-1.62446 4.80862,-6.948549 7.61066,-10.440949 l 1.13094,-1.40958 -1.80213,-5.22523 c -2.02147,-5.86123 -2.0098,-5.97467 0.65581,-6.37225 l 1.46834,-0.219 1.64076,3.3506 c 0.90242,1.84283 1.76982,3.35061 1.92755,3.35061 0.15774,0 1.77489,-1.75542 3.59368,-3.90092 3.15918,-3.72667 3.35688,-3.89165 4.42591,-3.69334 0.64552,0.11974 1.21858,0.0465 1.35432,-0.17316 0.31818,-0.51481 1.23083,0.24704 1.23083,1.02746 0,0.32009 -0.45438,1.13409 -1.00972,1.80888 -2.26771,2.75549 -7.10417,9.27155 -7.10417,9.5713 0,0.17685 0.97502,2.45302 2.16671,5.05816 l 2.1667,4.736609 -0.65823,0.98459 c -0.36203,0.54152 -0.66236,1.12603 -0.6674,1.29891 -0.005,0.17288 -0.27769,0.48371 -0.60588,0.69073 -0.83174,0.52464 -1.44656,-0.11541 -3.9894,-4.153119 -1.16417,-1.84856 -2.23163,-3.36491 -2.37215,-3.36967 -0.31309,-0.0106 -3.7911,5.131969 -6.47955,9.580639 -2.37093,3.92324 -1.93885,3.4204 -3.26614,3.80106 -0.95533,0.27398 -1.19348,0.19843 -1.79831,-0.57048 z"),M(f,"stroke-width","0.35277775"),l(y,"id","path4550"),l(y,"d","m 131.98567,83.677091 c -2.15148,-3.8472 -6.0183,-9.42829 -7.57842,-10.93815 -0.79252,-0.76698 -1.44094,-1.57494 -1.44094,-1.79546 0,-0.6016 1.61695,-1.21975 3.19058,-1.21975 1.69822,0 3.49597,1.47777 5.0997,4.19203 0.58208,0.98515 1.15641,1.79434 1.27629,1.79819 0.11988,0.004 0.80873,-1.65116 1.53078,-3.67779 1.5464,-4.34039 5.62351,-12.777999 7.22453,-14.951229 1.3726,-1.86316 3.42936,-2.865165 5.90274,-2.875676 3.23375,-0.01374 3.24268,0.130067 0.20474,3.296663 -4.63599,4.832327 -6.76321,8.809632 -11.25155,21.037252 -1.24637,3.39549 -2.39032,6.47895 -2.54212,6.85214 -0.23022,0.56597 -0.49833,0.28096 -1.61633,-1.71822 z"),M(y,"stroke-width","0.35277775"),l(a,"transform","translate(-104.22785,-45.507923)"),l(a,"id","layer1"),l(n,"version","1.1"),l(n,"viewBox","0 0 70.423268 70.42326"),l(n,"height","1.25em"),l(n,"class","svelte-27u907"),l(t,"href",e[0]),l(t,"class","svelte-27u907")},m(e,r){p(e,t,r),m(t,n),m(n,a),m(a,o),m(a,u),m(a,f),m(a,y),m(t,v),b&&b.m(t,null),g=!0},p(e,[n]){b&&b.p&&2&n&&D(b,$,e,e[1],n,null,null),(!g||1&n)&&l(t,"href",e[0])},i(e){g||(A(b,e),g=!0)},o(e){k(b,e),g=!1},d(e){e&&c(t),b&&b.d(e)}}}function Qi(e,t,n){let{$$slots:r={},$$scope:a}=t,{href:i=""}=t;return e.$$set=e=>{"href"in e&&n(0,i=e.href),"$$scope"in e&&n(1,a=e.$$scope)},[i,a,r]}class Yi extends e{constructor(e){super(),t(this,e,Qi,Xi,n,{href:0})}}function es(e){let t;return{c(){t=a("hyperjump-io/json-schema.hyperjump.io")},l(e){t=o(e,"hyperjump-io/json-schema.hyperjump.io")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function ts(e){let t;return{c(){t=a("hyperjump-io/json-schema-validator")},l(e){t=o(e,"hyperjump-io/json-schema-validator")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function ns(e){let t;return{c(){t=a("@hyperjump/json-schema")},l(e){t=o(e,"@hyperjump/json-schema")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function rs(e){let t;return{c(){t=a("@hyperjump/json-schema-core")},l(e){t=o(e,"@hyperjump/json-schema-core")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function as(e){let t;return{c(){t=a("JSON Schema")},l(e){t=o(e,"JSON Schema")},m(e,n){p(e,t,n)},d(e){e&&c(t)}}}function is(e){let t,n,a,o,u,f,y,v,g,$,b,S,w,I,O,P,T;return o=new Gi({props:{href:"https://github.com/hyperjump-io/json-schema.hyperjump.io",$$slots:{default:[es]},$$scope:{ctx:e}}}),y=new Gi({props:{href:"https://github.com/hyperjump-io/json-schema-validator",$$slots:{default:[ts]},$$scope:{ctx:e}}}),$=new Wi({props:{href:"https://www.npmjs.com/package/@hyperjump/json-schema",$$slots:{default:[ns]},$$scope:{ctx:e}}}),w=new Wi({props:{href:"https://www.npmjs.com/package/@hyperjump/json-schema-core",$$slots:{default:[rs]},$$scope:{ctx:e}}}),P=new Yi({props:{href:"https://json-schema.org",$$slots:{default:[as]},$$scope:{ctx:e}}}),{c(){t=r("footer"),n=r("ul"),a=r("li"),x(o.$$.fragment),u=d(),f=r("li"),x(y.$$.fragment),v=d(),g=r("li"),x($.$$.fragment),b=d(),S=r("li"),x(w.$$.fragment),I=d(),O=r("li"),x(P.$$.fragment),this.h()},l(e){t=i(e,"FOOTER",{class:!0});var r=s(t);n=i(r,"UL",{class:!0});var l=s(n);a=i(l,"LI",{class:!0});var p=s(a);E(o.$$.fragment,p),p.forEach(c),u=h(l),f=i(l,"LI",{class:!0});var m=s(f);E(y.$$.fragment,m),m.forEach(c),v=h(l),g=i(l,"LI",{class:!0});var d=s(g);E($.$$.fragment,d),d.forEach(c),b=h(l),S=i(l,"LI",{class:!0});var x=s(S);E(w.$$.fragment,x),x.forEach(c),I=h(l),O=i(l,"LI",{class:!0});var j=s(O);E(P.$$.fragment,j),j.forEach(c),l.forEach(c),r.forEach(c),this.h()},h(){l(a,"class","svelte-17tbtsq"),l(f,"class","svelte-17tbtsq"),l(g,"class","svelte-17tbtsq"),l(S,"class","svelte-17tbtsq"),l(O,"class","svelte-17tbtsq"),l(n,"class","links svelte-17tbtsq"),l(t,"class","svelte-17tbtsq")},m(e,r){p(e,t,r),m(t,n),m(n,a),j(o,a,null),m(n,u),m(n,f),j(y,f,null),m(n,v),m(n,g),j($,g,null),m(n,b),m(n,S),j(w,S,null),m(n,I),m(n,O),j(P,O,null),T=!0},p(e,[t]){const n={};1&t&&(n.$$scope={dirty:t,ctx:e}),o.$set(n);const r={};1&t&&(r.$$scope={dirty:t,ctx:e}),y.$set(r);const a={};1&t&&(a.$$scope={dirty:t,ctx:e}),$.$set(a);const i={};1&t&&(i.$$scope={dirty:t,ctx:e}),w.$set(i);const s={};1&t&&(s.$$scope={dirty:t,ctx:e}),P.$set(s)},i(e){T||(A(o.$$.fragment,e),A(y.$$.fragment,e),A($.$$.fragment,e),A(w.$$.fragment,e),A(P.$$.fragment,e),T=!0)},o(e){k(o.$$.fragment,e),k(y.$$.fragment,e),k($.$$.fragment,e),k(w.$$.fragment,e),k(P.$$.fragment,e),T=!1},d(e){e&&c(t),C(o),C(y),C($),C(w),C(P)}}}class ss extends e{constructor(e){super(),t(this,e,null,is,n,{})}}const{Core:os,Schema:cs}=Nt;cs.add(JSON.parse('{\n    "$id": "https://spec.openapis.org/oas/3.1/meta/schema-object",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/2019-09/vocab/core": true,\n        "https://json-schema.org/draft/2019-09/vocab/applicator": true,\n        "https://json-schema.org/draft/2019-09/vocab/validation": true,\n        "https://json-schema.org/draft/2019-09/vocab/meta-data": true,\n        "https://json-schema.org/draft/2019-09/vocab/format": false,\n        "https://json-schema.org/draft/2019-09/vocab/content": true,\n        "https://spec.openapis.org/oas/3.1/vocab/extensions": true\n    },\n    "$recursiveAnchor": true,\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        { "$ref": "https://json-schema.org/draft/2019-09/schema" },\n        { "$ref": "https://spec.openapis.org/oas/3.1/meta/extensions" }\n    ],\n    "type": ["object", "boolean"],\n    "unevaluatedProperties": false\n}')),cs.add(JSON.parse('{\n    "$id": "https://spec.openapis.org/oas/3.1/meta/extensions",\n    "$schema": "https://json-schema.org/draft/2019-09/schema",\n    "$vocabulary": {\n        "https://spec.openapis.org/oas/3.1/vocab/extensions": true\n    },\n    "$recursiveAnchor": true,\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "example": true,\n        "discriminator": {\n            "$ref": "#/$defs/Discriminator"\n        },\n        "externalDocs": {\n            "$ref": "#/$defs/ExternalDocs"\n        },\n        "xml": {\n            "$ref": "#/$defs/Xml"\n        }\n    },\n    "patternProperties": {\n        "^x-": true\n    },\n    "$defs": {\n        "Discriminator": {\n            "type": "object",\n            "required": ["propertyName"],\n            "properties": {\n                "propertyName": {\n                    "type": "string"\n                },\n                "mapping": {\n                    "additionalProperties": {\n                        "type": "string"\n                    }\n                }\n            },\n            "additionalProperties": false\n        },\n        "ExternalDocs": {\n            "type": "object",\n            "required": ["url"],\n            "properties": {\n                "url": {\n                    "type": "string",\n                    "format": "uri-reference"\n                },\n                "description": {\n                    "type": "string"\n                }\n            },\n            "patternProperties": {\n                "^x-": true\n            },\n            "additionalProperties": false\n        },\n        "Xml": {\n            "type": "object",\n            "properties": {\n                "name": {\n                    "type": "string"\n                },\n                "namespace": {\n                    "type": "string",\n                    "format": "uri"\n                },\n                "prefix": {\n                    "type": "string"\n                },\n                "attribute": {\n                    "type": "boolean"\n                },\n                "wrapped": {\n                    "type": "boolean"\n                }\n            },\n            "patternProperties": {\n                "^x-": true\n            },\n            "additionalProperties": false\n        }\n    }\n}')),os.defineVocabulary("https://spec.openapis.org/oas/3.1/vocab/extensions",{discriminator:Ka.metaData,example:Ka.metaData,externalDocs:Ka.metaData,xml:Ka.metaData});const{Core:ls,Schema:ps}=Nt;ps.add,ps.get,ls.validate,ls.setMetaOutputFormat,ls.setShouldMetaValidate,ls.FLAG,ls.BASIC,ls.DETAILED,ls.VERBOSE;const{Core:ms,Schema:us,Instance:fs}=Nt;var ds={compile:async(e,t,n)=>{const r=await us.step("items",n),a=us.typeOf(r,"array")?us.length(r):Number.MAX_SAFE_INTEGER;return us.typeOf(e,"boolean")?[a,us.value(e)]:[a,await ms.compileSchema(e,t)]},interpret:([e,t],n,r,a)=>!fs.typeOf(n,"array")||("string"==typeof t?fs.every(((n,i)=>i<e||ms.interpretSchema(t,n,r,a)),n):fs.every(((n,r)=>r<e||t),n))};const{Core:hs,Schema:ys,Instance:vs}=Nt,gs=([e,t],n,r,a)=>!vs.typeOf(n,"array")||vs.every(((n,i)=>i<e||hs.interpretSchema(t,n,r,a)),n);var $s={compile:async(e,t,n)=>{const r=await ys.step("items",n);return[ys.typeOf(r,"array")?ys.length(r):Number.MAX_SAFE_INTEGER,await hs.compileSchema(e,t)]},interpret:gs,collectEvaluatedItems:(e,t,n,r)=>gs(e,t,n,r)&&new Set(vs.map(((e,t)=>t),t))};const{Core:bs,Schema:Ss,Instance:ws}=Nt;var Is={compile:async(e,t,n)=>{const r=await Ss.step("properties",n),a=Ss.typeOf(r,"object")?Ss.keys(r):[],i=await Ss.step("patternProperties",n),s=Ss.typeOf(i,"object")?Ss.keys(i).map((e=>new RegExp(e))):[];return Ss.typeOf(e,"boolean")?[a,s,Ss.value(e)]:[a,s,await bs.compileSchema(e,t)]},interpret:([e,t,n],r,a,i)=>{if(!ws.typeOf(r,"object"))return!0;const s=ws.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n)))));return"string"==typeof n?s.every((([,e])=>bs.interpretSchema(n,e,a,i))):0===s.length||n}};const{Core:Os,Schema:xs,Instance:Es}=Nt,js=([e,t,n],r,a,i)=>!Es.typeOf(r,"object")||Es.entries(r).filter((([n])=>!e.includes(n)&&!t.some((e=>e.test(n))))).every((([,e])=>Os.interpretSchema(n,e,a,i)));var Ps={compile:async(e,t,n)=>{const r=await xs.step("properties",n),a=xs.typeOf(r,"object")?xs.keys(r):[],i=await xs.step("patternProperties",n);return[a,xs.typeOf(i,"object")?xs.keys(i).map((e=>new RegExp(e))):[],await Os.compileSchema(e,t)]},interpret:js,collectEvaluatedProperties:(e,t,n,r)=>js(e,t,n,r)&&[new RegExp("")]};const{Core:As,Schema:ks}=Nt;var Cs={compile:(e,t)=>ze.pipeline([ks.map((async e=>As.compileSchema(await e,t))),ze.all],e),interpret:(e,t,n,r)=>e.every((e=>As.interpretSchema(e,t,n,r))),collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,a)=>{const i=e&&As.collectEvaluatedProperties(a,t,n,r);return!1!==i&&[...e,...i]}),[]),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,a)=>{const i=!1!==e&&As.collectEvaluatedItems(a,t,n,r);return!1!==i&&new Set([...e,...i])}),new Set)};const{Core:Ts,Schema:Ns}=Nt;var Rs={compile:(e,t)=>ze.pipeline([Ns.map((async e=>Ts.compileSchema(await e,t))),ze.all],e),interpret:(e,t,n,r)=>e.filter((e=>Ts.interpretSchema(e,t,n,r))).length>0,collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,a)=>{const i=Ts.collectEvaluatedProperties(a,t,n,r);return!1!==i?[...e||[],...i]:e}),!1),collectEvaluatedItems:(e,t,n,r)=>e.reduce(((e,a)=>{const i=Ts.collectEvaluatedItems(a,t,n,r);return!1!==i?new Set([...e||[],...i]):e}),!1)};const{Schema:qs,Instance:Ds}=Nt;var Ms={compile:e=>cn(qs.value(e)),interpret:(e,t)=>cn(Ds.value(t))===e};const{Core:Vs,Instance:Ls}=Nt;var Js={compile:(e,t)=>Vs.compileSchema(e,t),interpret:(e,t,n,r)=>!Ls.typeOf(t,"array")||Ls.some((t=>Vs.interpretSchema(e,t,n,r)),t)};const{Core:Us,Schema:zs,Instance:_s}=Nt,Fs=({contains:e,minContains:t,maxContains:n},r,a,i)=>{if(!_s.typeOf(r,"array"))return!0;const s=_s.reduce(((t,n)=>Us.interpretSchema(e,n,a,i)?t+1:t),0,r);return s>=t&&s<=n};var Bs={compile:async(e,t,n)=>{const r=await Us.compileSchema(e,t),a=await zs.step("minContains",n),i=zs.typeOf(a,"number")?zs.value(a):1,s=await zs.step("maxContains",n);return{contains:r,minContains:i,maxContains:zs.typeOf(s,"number")?zs.value(s):Number.MAX_SAFE_INTEGER}},interpret:Fs,collectEvaluatedItems:(e,t,n,r)=>Fs(e)&&_s.reduce(((t,a,i)=>Us.interpretSchema(e.contains,a,n,r)?t.add(i):t),new Set,t)};const{Core:Ks,Schema:Gs}=Nt;var Hs={compile:async(e,t)=>{await ze.pipeline([Gs.entries,ze.map((([,e])=>Ks.compileSchema(e,t))),ze.all],e)},interpret:()=>!0};const{Core:Zs,Schema:Ws,Instance:Xs}=Nt;var Qs={compile:(e,t)=>ze.pipeline([Ws.entries,ze.map((async([e,n])=>[e,Ws.typeOf(n,"array")?Ws.value(n):await Zs.compileSchema(n,t)])),ze.all],e),interpret:(e,t,n,r)=>{const a=Xs.value(t);return!Xs.typeOf(t,"object")||e.every((([e,i])=>!(e in a)||(Array.isArray(i)?i.every((e=>e in a)):Zs.interpretSchema(i,t,n,r))))}};const{Schema:Ys,Instance:eo}=Nt;var to={compile:e=>ze.pipeline([Ys.entries,ze.map((([e,t])=>[e,Ys.value(t)])),ze.all],e),interpret:(e,t)=>{const n=eo.value(t);return!eo.typeOf(t,"object")||e.every((([e,t])=>!(e in n)||t.every((e=>e in n))))}};const{Core:no,Schema:ro,Instance:ao}=Nt;var io={compile:(e,t)=>ze.pipeline([ro.entries,ze.map((async([e,n])=>[e,await no.compileSchema(n,t)])),ze.all],e),interpret:(e,t,n,r)=>{const a=ao.value(t);return!ao.typeOf(t,"object")||e.every((([e,i])=>!(e in a)||no.interpretSchema(i,t,n,r)))},collectEvaluatedProperties:(e,t,n,r)=>e.reduce(((e,[a,i])=>{if(!e||!ao.has(a,t))return e;const s=no.collectEvaluatedProperties(i,t,n,r);return!1!==s&&e.concat(s)}),[])};const{Core:so,Schema:oo}=Nt,{safeResolveUrl:co,splitUrl:lo}=W;var po={compile:e=>{const t=co(e.id,oo.value(e));return lo(t)},interpret:([e,t],n,r,a)=>{const i=t in r.metaData[e].dynamicAnchors?a[t]:e,s=oo.getAnchorPointer(r.metaData[i],t);return so.interpretSchema(`${i}#${s}`,n,r,a)},collectEvaluatedProperties:so.collectEvaluatedProperties,collectEvaluatedItems:so.collectEvaluatedItems};const{Core:mo,Schema:uo}=Nt,{safeResolveUrl:fo,splitUrl:ho}=W;var yo={compile:e=>ho(uo.value(e)),interpret:([e,t],n,r,a)=>{if(!(t in a))throw Error(`No dynamic anchor found for "${t}"`);const i=fo(a[t],e),s=uo.getAnchorPointer(r.metaData[i],t);return mo.interpretSchema(`${i}#${s}`,n,r,a)},collectEvaluatedProperties:mo.collectEvaluatedProperties,collectEvaluatedItems:mo.collectEvaluatedItems};const{Schema:vo,Instance:go}=Nt;var $o={compile:e=>vo.value(e).map(cn),interpret:(e,t)=>e.some((e=>cn(go.value(t))===e))};const{Schema:bo,Instance:So}=Nt;var wo={compile:async e=>bo.value(e),interpret:(e,t)=>!So.typeOf(t,"number")||So.value(t)<e};const{Schema:Io,Instance:Oo}=Nt;var xo={compile:async e=>Io.value(e),interpret:(e,t)=>!Oo.typeOf(t,"number")||Oo.value(t)>e};const{Core:Eo}=Nt;var jo={compile:(e,t)=>Eo.compileSchema(e,t),interpret:(e,t,n,r)=>(Eo.interpretSchema(e,t,n,r),!0)};const{Core:Po,Schema:Ao}=Nt,ko=(e,t,n,r)=>{const a=n[e][2];return"boolean"==typeof a?a:a.every((([e,,a])=>Po.getKeyword(e).interpret(a,t,n,r)))};var Co={compile:async(e,t,n)=>{if(Ao.has("if",n)){const r=await Ao.step("if",n);return[await Po.compileSchema(r,t),await Po.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,a)=>void 0===e||!ko(e,n,r,a)||Po.interpretSchema(t,n,r,a),collectEvaluatedProperties:([e,t],n,r,a)=>{if(void 0===e)return[];const i=Po.collectEvaluatedProperties(e,n,r,a);if(!1===i)return[];const s=Po.collectEvaluatedProperties(t,n,r,a);return!1!==s&&[...i,...s]},collectEvaluatedItems:([e,t],n,r,a)=>{if(void 0===e)return new Set;const i=Po.collectEvaluatedItems(e,n,r,a);if(!1===i)return new Set;const s=Po.collectEvaluatedItems(t,n,r,a);return!1!==s&&new Set([...i,...s])}};const{Core:To,Schema:No}=Nt,Ro=(e,t,n,r)=>{const a=n[e][2];return"boolean"==typeof a?a:a.every((([e,,a])=>To.getKeyword(e).interpret(a,t,n,r)))};var qo={compile:async(e,t,n)=>{if(No.has("if",n)){const r=await No.step("if",n);return[await To.compileSchema(r,t),await To.compileSchema(e,t)]}return[]},interpret:([e,t],n,r,a)=>void 0===e||Ro(e,n,r,a)||To.interpretSchema(t,n,r,a),collectEvaluatedProperties:([e,t],n,r,a)=>void 0===e||!1!==To.collectEvaluatedProperties(e,n,r,a)?[]:To.collectEvaluatedProperties(t,n,r,a),collectEvaluatedItems:([e,t],n,r,a)=>void 0===e||!1!==To.collectEvaluatedItems(e,n,r,a)?new Set:To.collectEvaluatedItems(t,n,r,a)};const{Core:Do,Schema:Mo,Instance:Vo}=Nt,Lo=(e,t,n,r)=>!Vo.typeOf(t,"array")||("string"==typeof e?Vo.every((t=>Do.interpretSchema(e,t,n,r)),t):Vo.every(((t,a)=>!(a in e)||Do.interpretSchema(e[a],t,n,r)),t));var Jo={compile:(e,t)=>Mo.typeOf(e,"array")?ze.pipeline([Mo.map((e=>Do.compileSchema(e,t))),ze.all],e):Do.compileSchema(e,t),interpret:Lo,collectEvaluatedItems:(e,t,n,r)=>Lo(e,t,n,r)&&("string"==typeof e?new Set(Vo.map(((e,t)=>t),t)):new Set(e.map(((e,t)=>t))))};const{Core:Uo,Schema:zo,Instance:_o}=Nt,Fo=([e,t],n,r,a)=>!_o.typeOf(n,"array")||_o.every(((n,i)=>i<e||Uo.interpretSchema(t,n,r,a)),n);var Bo={compile:async(e,t,n)=>{const r=await zo.step("prefixItems",n);return[zo.typeOf(r,"array")?zo.length(r):0,await Uo.compileSchema(e,t)]},interpret:Fo,collectEvaluatedItems:(e,t,n,r)=>Fo(e,t,n,r)&&new Set(_o.map(((e,t)=>t),t))};const{Schema:Ko,Instance:Go}=Nt;var Ho={compile:e=>Ko.value(e),interpret:(e,t)=>!Go.typeOf(t,"array")||Go.length(t)<=e};const{Schema:Zo,Instance:Wo}=Nt;var Xo={compile:e=>Zo.value(e),interpret:(e,t)=>!Wo.typeOf(t,"string")||Wo.length(t)<=e};const{Schema:Qo,Instance:Yo}=Nt;var ec={compile:e=>Qo.value(e),interpret:(e,t)=>!Yo.typeOf(t,"string")||[...Yo.value(t)].length<=e};const{Schema:tc,Instance:nc}=Nt;var rc={compile:e=>tc.value(e),interpret:(e,t)=>!nc.typeOf(t,"object")||nc.keys(t).length<=e};const{Schema:ac,Instance:ic}=Nt;var sc={compile:async(e,t,n)=>{const r=await ac.step("exclusiveMaximum",n),a=ac.value(r);return[ac.value(e),a]},interpret:([e,t],n)=>{if(!ic.typeOf(n,"number"))return!0;const r=ic.value(n);return t?r<e:r<=e}};const{Schema:oc,Instance:cc}=Nt;var lc={compile:async e=>oc.value(e),interpret:(e,t)=>!cc.typeOf(t,"number")||cc.value(t)<=e};const{Schema:pc,Instance:mc}=Nt;var uc={compile:e=>pc.value(e),interpret:(e,t)=>!mc.typeOf(t,"array")||mc.length(t)>=e};const{Schema:fc,Instance:dc}=Nt;var hc={compile:e=>fc.value(e),interpret:(e,t)=>!dc.typeOf(t,"string")||dc.value(t).length>=e};const{Schema:yc,Instance:vc}=Nt;var gc={compile:e=>yc.value(e),interpret:(e,t)=>!vc.typeOf(t,"string")||[...vc.value(t)].length>=e};const{Schema:$c,Instance:bc}=Nt;var Sc={compile:e=>$c.value(e),interpret:(e,t)=>{const n=bc.value(t);return!bc.typeOf(t,"object")||Object.keys(n).length>=e}};const{Schema:wc,Instance:Ic}=Nt;var Oc={compile:async(e,t,n)=>{const r=await wc.step("exclusiveMinimum",n),a=wc.value(r);return[wc.value(e),a]},interpret:([e,t],n)=>{if(!Ic.typeOf(n,"number"))return!0;const r=Ic.value(n);return t?r>e:r>=e}};const{Schema:xc,Instance:Ec}=Nt;var jc={compile:async e=>xc.value(e),interpret:(e,t)=>!Ec.typeOf(t,"number")||Ec.value(t)>=e};const{Schema:Pc,Instance:Ac}=Nt,kc=(e,t)=>Math.abs(e-t)<1.1920929e-7;var Cc={compile:e=>Pc.value(e),interpret:(e,t)=>{if(!Ac.typeOf(t,"number"))return!0;const n=Ac.value(t)%e;return kc(0,n)||kc(e,n)}};const{Core:Tc}=Nt;var Nc={compile:Tc.compileSchema,interpret:(e,t,n,r)=>!Tc.interpretSchema(e,t,n,r)};const{Core:Rc,Schema:qc}=Nt;var Dc={compile:(e,t)=>ze.pipeline([qc.map((async e=>Rc.compileSchema(await e,t))),ze.all],e),interpret:(e,t,n,r)=>{let a=0;for(const i of e)if(Rc.interpretSchema(i,t,n,r)&&a++,a>1)break;return 1===a},collectEvaluatedProperties:(e,t,n,r)=>{let a=0;return e.reduce(((e,i)=>{if(a>1)return!1;const s=Rc.collectEvaluatedProperties(i,t,n,r);return s?0==a++&&s:e}),!1)},collectEvaluatedItems:(e,t,n,r)=>{let a=0;return e.reduce(((e,i)=>{if(a>1)return!1;const s=Rc.collectEvaluatedItems(i,t,n,r);return s?0==a++&&s:e}),!1)}};const{Schema:Mc,Instance:Vc}=Nt;var Lc={compile:e=>new RegExp(Mc.value(e),"u"),interpret:(e,t)=>!Vc.typeOf(t,"string")||e.test(Vc.value(t))};const{Core:Jc,Schema:Uc,Instance:zc}=Nt,_c=(e,t,n,r)=>!zc.typeOf(t,"object")||e.every((([e,a])=>zc.entries(t).filter((([t])=>e.test(t))).every((([,e])=>Jc.interpretSchema(a,e,n,r)))));var Fc={compile:(e,t)=>ze.pipeline([Uc.entries,ze.map((async([e,n])=>[new RegExp(e,"u"),await Jc.compileSchema(n,t)])),ze.all],e),interpret:_c,collectEvaluatedProperties:(e,t,n,r)=>_c(e,t,n,r)&&e.map((([e])=>e))};var Bc={isObject:e=>"object"==typeof e&&!Array.isArray(e)&&null!==e,escapeRegExp:e=>e.replace(/[.*+\-?^${}()|[\]\\]/g,"\\$&")};const{Core:Kc,Schema:Gc,Instance:Hc}=Nt,{escapeRegExp:Zc}=Bc,Wc=(e,t,n,r)=>!Hc.typeOf(t,"object")||Hc.entries(t).filter((([t])=>t in e)).every((([t,a])=>Kc.interpretSchema(e[t],a,n,r)));var Xc={compile:(e,t)=>ze.pipeline([Gc.entries,ze.reduce((async(e,[n,r])=>(e[n]=await Kc.compileSchema(r,t),e)),Object.create(null))],e),interpret:Wc,collectEvaluatedProperties:(e,t,n,r)=>Wc(e,t,n,r)&&Object.keys(e).map((e=>new RegExp(`^${Zc(e)}$`)))};const{Core:Qc,Instance:Yc}=Nt;var el={compile:(e,t)=>Qc.compileSchema(e,t),interpret:(e,t,n,r)=>!Yc.typeOf(t,"object")||Yc.keys(t).every((t=>Qc.interpretSchema(e,Yc.cons(t),n,r)))};const{Core:tl,Schema:nl}=Nt;var rl={compile:async(e,t)=>{const n=await nl.get(nl.value(e),e);return tl.compileSchema(n,t)},interpret:tl.interpretSchema,collectEvaluatedProperties:tl.collectEvaluatedProperties,collectEvaluatedItems:tl.collectEvaluatedItems};const{Schema:al,Instance:il}=Nt;var sl={compile:e=>al.value(e),interpret:(e,t)=>!il.typeOf(t,"object")||e.every((e=>il.value(t).hasOwnProperty(e)))};const{Core:ol,Schema:cl,Instance:ll}=Nt,pl=(e,t,n,r)=>!ll.typeOf(t,"array")||ll.every(((t,a)=>!(a in e)||ol.interpretSchema(e[a],t,n,r)),t);var ml={compile:(e,t)=>ze.pipeline([cl.map((e=>ol.compileSchema(e,t))),ze.all],e),interpret:pl,collectEvaluatedItems:(e,t,n,r)=>pl(e,t,n,r)&&new Set(e.map(((e,t)=>t)))};const{Schema:ul,Instance:fl}=Nt;var dl={compile:e=>ul.value(e),interpret:(e,t)=>"string"==typeof e?fl.typeOf(t,e):e.some(fl.typeOf(t))};const{Core:hl,Schema:yl,Instance:vl}=Nt,gl=([e,t],n,r,a)=>{if(!vl.typeOf(n,"array"))return!0;const i=hl.collectEvaluatedItems(e,n,r,a,!0);return!1===i||vl.every(((e,s)=>i.has(s)||hl.interpretSchema(t,vl.step(s,n),r,a)),n)};var $l={compile:async(e,t,n)=>[yl.uri(n),await hl.compileSchema(e,t)],interpret:gl,collectEvaluatedItems:(e,t,n,r)=>gl(e,t,n,r)&&new Set(vl.map(((e,t)=>t),t))};const{Core:bl,Schema:Sl,Instance:wl}=Nt,Il=([e,t],n,r,a)=>{if(!wl.typeOf(n,"object"))return!0;const i=bl.collectEvaluatedProperties(e,n,r,a,!0);return!i||wl.entries(n).filter((([e])=>!i.some((t=>e.match(t))))).every((([,e])=>bl.interpretSchema(t,e,r,a)))};var Ol={compile:async(e,t,n)=>[Sl.uri(n),await bl.compileSchema(e,t)],interpret:Il,collectEvaluatedProperties:(e,t,n,r)=>Il(e,t,n,r)&&[new RegExp("")]};const{Schema:xl,Instance:El}=Nt;var jl={compile:e=>xl.value(e),interpret:(e,t)=>{if(!El.typeOf(t,"array")||!1===e)return!0;const n=El.map((e=>cn(El.value(e))),t);return new Set(n).size===n.length}};const{Keywords:Pl}=Nt;var Al={additionalItems:ds,additionalItems6:$s,additionalProperties:Is,additionalProperties6:Ps,allOf:Cs,anyOf:Rs,const:Ms,contains:Js,containsMinContainsMaxContains:Bs,definitions:Hs,dependencies:Qs,dependentRequired:to,dependentSchemas:io,dynamicRef:po,dynamicRefFUTURE:yo,enum:$o,exclusiveMaximum:wo,exclusiveMinimum:xo,if:jo,then:Co,else:qo,items:Jo,itemsFUTURE:Bo,maxItems:Ho,maxLength:Xo,maxLength6:ec,maxProperties:rc,maximumExclusiveMaximum:sc,maximum:lc,metaData:Pl.metaData,minItems:uc,minLength:hc,minLength6:gc,minProperties:Sc,minimumExclusiveMinimum:Oc,minimum:jc,multipleOf:Cc,not:Nc,oneOf:Dc,pattern:Lc,patternProperties:Fc,properties:Xc,propertyNames:el,ref:rl,required:sl,tupleItems:ml,type:dl,unevaluatedItems:$l,unevaluatedProperties:Ol,uniqueItems:jl,validate:Pl.validate};const{Core:kl,Schema:Cl}=Nt,Tl="https://json-schema.org/draft/future/schema";function Nl(e){return{c:u,l:u,m:u,p:u,i:u,o:u,d:u}}function Rl(e){let t,n;return t=new Fi({props:{results:e[4]}}),{c(){x(t.$$.fragment)},l(e){E(t.$$.fragment,e)},m(e,r){j(t,e,r),n=!0},p(e,n){const r={};16&n&&(r.results=e[4]),t.$set(r)},i(e){n||(A(t.$$.fragment,e),n=!0)},o(e){k(t.$$.fragment,e),n=!1},d(e){C(t,e)}}}function ql(e){return{c:u,l:u,m:u,p:u,i:u,o:u,d:u}}function Dl(e){let t,n,u,f,y,v,g,$,b,w,I,T,R,q,D,M,L,J,U,z,_,F,B;function K(t){e[9].call(null,t)}function G(t){e[10].call(null,t)}g=new Ni({props:{ns:"schemas",tabs:e[0],newTab:e[5],active:0}}),g.$on("input",e[7]);let H={ns:"instances",tabs:e[1],newTab:e[6]};void 0!==e[2]&&(H.selected=e[2]),void 0!==e[2]&&(H.active=e[2]),w=new Ni({props:H}),S.push((()=>O(w,"selected",K))),S.push((()=>O(w,"active",G))),w.$on("input",e[8]),D=new Fi({props:{results:e[3]}});let Z={ctx:e,current:null,token:null,hasCatch:!1,pending:ql,then:Rl,catch:Nl,value:12,blocks:[,,,]};return N(U=e[3],Z),F=new ss({}),{c(){t=d(),n=r("main"),u=r("h1"),f=a("Hyperjump - JSON Schema Validator"),y=d(),v=r("div"),x(g.$$.fragment),$=d(),b=r("div"),x(w.$$.fragment),R=d(),q=r("div"),x(D.$$.fragment),L=d(),J=r("div"),Z.block.c(),_=d(),x(F.$$.fragment),this.h()},l(e){V('[data-svelte="svelte-14138tz"]',document.head).forEach(c),t=h(e),n=i(e,"MAIN",{class:!0});var r=s(n);u=i(r,"H1",{class:!0});var a=s(u);f=o(a,"Hyperjump - JSON Schema Validator"),a.forEach(c),y=h(r),v=i(r,"DIV",{class:!0});var l=s(v);E(g.$$.fragment,l),l.forEach(c),$=h(r),b=i(r,"DIV",{class:!0});var p=s(b);E(w.$$.fragment,p),p.forEach(c),R=h(r),q=i(r,"DIV",{class:!0});var m=s(q);E(D.$$.fragment,m),m.forEach(c),L=h(r),J=i(r,"DIV",{class:!0});var d=s(J);Z.block.l(d),d.forEach(c),_=h(r),E(F.$$.fragment,r),r.forEach(c),this.h()},h(){document.title="Hyperjump - JSON Schema Validator",l(u,"class","svelte-1fbysc"),l(v,"class","editor-section svelte-1fbysc"),l(b,"class","editor-section svelte-1fbysc"),l(q,"class",M="results "+Vl+" svelte-1fbysc"),l(J,"class",z="results "+Vl+" svelte-1fbysc"),l(n,"class","svelte-1fbysc")},m(e,r){p(e,t,r),p(e,n,r),m(n,u),m(u,f),m(n,y),m(n,v),j(g,v,null),m(n,$),m(n,b),j(w,b,null),m(n,R),m(n,q),j(D,q,null),m(n,L),m(n,J),Z.block.m(J,Z.anchor=null),Z.mount=()=>J,Z.anchor=null,m(n,_),j(F,n,null),B=!0},p(t,[n]){e=t;const r={};1&n&&(r.tabs=e[0]),g.$set(r);const a={};2&n&&(a.tabs=e[1]),!I&&4&n&&(I=!0,a.selected=e[2],P((()=>I=!1))),!T&&4&n&&(T=!0,a.active=e[2],P((()=>T=!1))),w.$set(a);const i={};if(8&n&&(i.results=e[3]),D.$set(i),Z.ctx=e,8&n&&U!==(U=e[3])&&N(U,Z));else{const t=e.slice();t[12]=Z.resolved,Z.block.p(t,n)}},i(e){B||(A(g.$$.fragment,e),A(w.$$.fragment,e),A(D.$$.fragment,e),A(Z.block),A(F.$$.fragment,e),B=!0)},o(e){k(g.$$.fragment,e),k(w.$$.fragment,e),k(D.$$.fragment,e);for(let e=0;e<3;e+=1){const t=Z.blocks[e];k(t)}k(F.$$.fragment,e),B=!1},d(e){e&&c(t),e&&c(n),C(g),C(w),C(D),Z.block.d(),Z.token=null,Z=null,C(F)}}}Cl.setConfig(Tl,"baseToken","$id"),Cl.setConfig(Tl,"embeddedToken","$id"),Cl.setConfig(Tl,"anchorToken","$anchor"),Cl.setConfig(Tl,"dynamicAnchorToken","$dynamicAnchor"),Cl.setConfig(Tl,"vocabularyToken","$vocabulary"),Cl.setConfig(Tl,"mandatoryVocabularies",["https://json-schema.org/draft/future/vocab/core"]),Cl.add(JSON.parse('{\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$id": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/core": true,\n        "https://json-schema.org/draft/future/vocab/applicator": true,\n        "https://json-schema.org/draft/future/vocab/unevaluated": true,\n        "https://json-schema.org/draft/future/vocab/validation": true,\n        "https://json-schema.org/draft/future/vocab/meta-data": true,\n        "https://json-schema.org/draft/future/vocab/format-annotation": true,\n        "https://json-schema.org/draft/future/vocab/content": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Core and Validation specifications meta-schema",\n    "allOf": [\n        {"$ref": "meta/core"},\n        {"$ref": "meta/applicator"},\n        {"$ref": "meta/validation"},\n        {"$ref": "meta/meta-data"},\n        {"$ref": "meta/format-annotation"},\n        {"$ref": "meta/content"}\n    ],\n    "type": ["object", "boolean"],\n    "properties": {\n        "definitions": {\n            "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        },\n        "dependencies": {\n            "$comment": "\\"dependencies\\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \\"dependentSchemas\\" and \\"dependentRequired\\"",\n            "type": "object",\n            "additionalProperties": {\n                "anyOf": [\n                    { "$dynamicRef": "#meta" },\n                    { "$ref": "meta/validation#/$defs/stringArray" }\n                ]\n            }\n        }\n    }\n}')),Cl.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/core",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/core": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Core vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "$id": {\n            "type": "string",\n            "format": "uri-reference",\n            "$comment": "Non-empty fragments not allowed.",\n            "pattern": "^[^#]*#?$"\n        },\n        "$schema": {\n            "type": "string",\n            "format": "uri"\n        },\n        "$anchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$"\n        },\n        "$ref": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicRef": {\n            "type": "string",\n            "format": "uri-reference"\n        },\n        "$dynamicAnchor": {\n            "type": "string",\n            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$"\n        },\n        "$vocabulary": {\n            "type": "object",\n            "propertyNames": {\n                "type": "string",\n                "format": "uri"\n            },\n            "additionalProperties": {\n                "type": "boolean"\n            }\n        },\n        "$comment": {\n            "type": "string"\n        },\n        "$defs": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        }\n    }\n}')),kl.defineVocabulary("https://json-schema.org/draft/future/vocab/core",{validate:Al.validate,$defs:Al.definitions,$dynamicRef:Al.dynamicRef,$dref:Al.dynamicRefFUTURE,$ref:Al.ref}),Cl.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/applicator",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/applicator": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Applicator vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "prefixItems": { "$ref": "#/$defs/schemaArray" },\n        "items": { "$dynamicRef": "#meta" },\n        "contains": { "$dynamicRef": "#meta" },\n        "additionalProperties": { "$dynamicRef": "#meta" },\n        "properties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "default": {}\n        },\n        "patternProperties": {\n            "type": "object",\n            "additionalProperties": { "$dynamicRef": "#meta" },\n            "propertyNames": { "format": "regex" },\n            "default": {}\n        },\n        "dependentSchemas": {\n            "type": "object",\n            "additionalProperties": {\n                "$dynamicRef": "#meta"\n            }\n        },\n        "propertyNames": { "$dynamicRef": "#meta" },\n        "if": { "$dynamicRef": "#meta" },\n        "then": { "$dynamicRef": "#meta" },\n        "else": { "$dynamicRef": "#meta" },\n        "allOf": { "$ref": "#/$defs/schemaArray" },\n        "anyOf": { "$ref": "#/$defs/schemaArray" },\n        "oneOf": { "$ref": "#/$defs/schemaArray" },\n        "not": { "$dynamicRef": "#meta" }\n    },\n    "$defs": {\n        "schemaArray": {\n            "type": "array",\n            "minItems": 1,\n            "items": { "$dynamicRef": "#meta" }\n        }\n    }\n}')),kl.defineVocabulary("https://json-schema.org/draft/future/vocab/applicator",{additionalProperties:Al.additionalProperties6,allOf:Al.allOf,anyOf:Al.anyOf,contains:Al.containsMinContainsMaxContains,dependentSchemas:Al.dependentSchemas,if:Al.if,then:Al.then,else:Al.else,items:Al.itemsFUTURE,not:Al.not,oneOf:Al.oneOf,patternProperties:Al.patternProperties,prefixItems:Al.tupleItems,properties:Al.properties,propertyNames:Al.propertyNames}),Cl.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/validation",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/validation": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Validation vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "multipleOf": {\n            "type": "number",\n            "exclusiveMinimum": 0\n        },\n        "maximum": {\n            "type": "number"\n        },\n        "exclusiveMaximum": {\n            "type": "number"\n        },\n        "minimum": {\n            "type": "number"\n        },\n        "exclusiveMinimum": {\n            "type": "number"\n        },\n        "maxLength": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minLength": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "pattern": {\n            "type": "string",\n            "format": "regex"\n        },\n        "maxItems": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minItems": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "uniqueItems": {\n            "type": "boolean",\n            "default": false\n        },\n        "maxContains": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minContains": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 1\n        },\n        "maxProperties": { "$ref": "#/$defs/nonNegativeInteger" },\n        "minProperties": { "$ref": "#/$defs/nonNegativeIntegerDefault0" },\n        "required": { "$ref": "#/$defs/stringArray" },\n        "dependentRequired": {\n            "type": "object",\n            "additionalProperties": {\n                "$ref": "#/$defs/stringArray"\n            }\n        },\n        "const": true,\n        "enum": {\n            "type": "array",\n            "items": true\n        },\n        "type": {\n            "anyOf": [\n                { "$ref": "#/$defs/simpleTypes" },\n                {\n                    "type": "array",\n                    "items": { "$ref": "#/$defs/simpleTypes" },\n                    "minItems": 1,\n                    "uniqueItems": true\n                }\n            ]\n        }\n    },\n    "$defs": {\n        "nonNegativeInteger": {\n            "type": "integer",\n            "minimum": 0\n        },\n        "nonNegativeIntegerDefault0": {\n            "$ref": "#/$defs/nonNegativeInteger",\n            "default": 0\n        },\n        "simpleTypes": {\n            "enum": [\n                "array",\n                "boolean",\n                "integer",\n                "null",\n                "number",\n                "object",\n                "string"\n            ]\n        },\n        "stringArray": {\n            "type": "array",\n            "items": { "type": "string" },\n            "uniqueItems": true,\n            "default": []\n        }\n    }\n}')),kl.defineVocabulary("https://json-schema.org/draft/future/vocab/validation",{const:Al.const,dependentRequired:Al.dependentRequired,enum:Al.enum,exclusiveMaximum:Al.exclusiveMaximum,exclusiveMinimum:Al.exclusiveMinimum,maxItems:Al.maxItems,maxLength:Al.maxLength6,maxProperties:Al.maxProperties,maximum:Al.maximum,minItems:Al.minItems,minLength:Al.minLength6,minProperties:Al.minProperties,minimum:Al.minimum,multipleOf:Al.multipleOf,pattern:Al.pattern,required:Al.required,type:Al.type,uniqueItems:Al.uniqueItems}),Cl.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/meta-data",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/meta-data": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Meta-data vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "title": {\n            "type": "string"\n        },\n        "description": {\n            "type": "string"\n        },\n        "default": true,\n        "deprecated": {\n            "type": "boolean",\n            "default": false\n        },\n        "readOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "writeOnly": {\n            "type": "boolean",\n            "default": false\n        },\n        "examples": {\n            "type": "array",\n            "items": true\n        }\n    }\n}')),kl.defineVocabulary("https://json-schema.org/draft/future/vocab/meta-data",{default:Al.metaData,deprecated:Al.metaData,description:Al.metaData,examples:Al.metaData,readOnly:Al.metaData,title:Al.metaData,writeOnly:Al.metaData}),Cl.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/format-annotation",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/format-annotation": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Format vocabulary meta-schema for annotation results",\n    "type": ["object", "boolean"],\n    "properties": {\n        "format": { "type": "string" }\n    }\n}')),kl.defineVocabulary("https://json-schema.org/draft/future/vocab/format-annotation",{format:Al.metaData}),Cl.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/content",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/content": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Content vocabulary meta-schema",\n\n    "type": ["object", "boolean"],\n    "properties": {\n        "contentMediaType": { "type": "string" },\n        "contentEncoding": { "type": "string" },\n        "contentSchema": { "$dynamicRef": "#meta" }\n    }\n}')),kl.defineVocabulary("https://json-schema.org/draft/future/vocab/content",{contentEncoding:Al.metaData,contentMediaType:Al.metaData,contentSchema:Al.metaData}),Cl.add(JSON.parse('{\n    "$id": "https://json-schema.org/draft/future/meta/unevaluated",\n    "$schema": "https://json-schema.org/draft/future/schema",\n    "$vocabulary": {\n        "https://json-schema.org/draft/future/vocab/unevaluated": true\n    },\n    "$dynamicAnchor": "meta",\n\n    "title": "Unevaluated applicator vocabulary meta-schema",\n    "type": ["object", "boolean"],\n    "properties": {\n        "unevaluatedItems": { "$dynamicRef": "#meta" },\n        "unevaluatedProperties": { "$dynamicRef": "#meta" }\n    }\n}')),kl.defineVocabulary("https://json-schema.org/draft/future/vocab/unevaluated",{unevaluatedItems:Al.unevaluatedItems,unevaluatedProperties:Al.unevaluatedProperties});const Ml="https://json-schema.hyperjump.io/schema",Vl="solarized-dark";function Ll(e,t,n){const r=function(){let e=1;return(t,n,r=!1)=>{const a=n||`${Ml}${++e}`;return{label:t||`Schema ${e}`,text:`{\n  "$id": "${a}",\n  "$schema": "https://json-schema.org/draft/2019-09/schema"\n}`,persistent:r}}}(),a=function(){let e=1;return()=>({label:"Instance "+e++,text:""})}();let i=[r("Schema",Ml,!0)],s=[a("Instance")],o=0;const c=function(e,t){let n;return({detail:r})=>{clearTimeout(n),n=setTimeout((()=>e(r)),t)}},l=c((e=>n(0,i=e)),750),p=c((e=>n(1,s=e)),750);let m,u;return ci.setMetaOutputFormat(ci.BASIC),e.$$.update=()=>{1&e.$$.dirty&&n(3,m=async function(){i.forEach(((e,t)=>{const n=0===t?Ml:"";ci.add(JSON.parse(e.text||"true"),n,"https://json-schema.org/draft/2019-09/schema")}));const e=await ci.get(Ml);return ci.validate(e)}()),14&e.$$.dirty&&n(4,u=async function(){if(""!==s[o].text){let e;try{e=await m}catch(e){}if(e){const t=e(JSON.parse(s[o].text),ci.BASIC);if(t.valid)return t;throw{output:t}}}}())},[i,s,o,m,u,r,a,l,p,function(e){o=e,n(2,o)},function(e){o=e,n(2,o)}]}export default class extends e{constructor(e){super(),t(this,e,Ll,Dl,n,{})}}
